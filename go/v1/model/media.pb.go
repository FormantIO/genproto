// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/model/v1/media.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Image struct {
	ContentType string `protobuf:"bytes,1,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*Image_Url
	//	*Image_Raw
	Data                 isImage_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_a874c151d5cd4bde, []int{0}
}

func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (m *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(m, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

type isImage_Data interface {
	isImage_Data()
}

type Image_Url struct {
	Url string `protobuf:"bytes,2,opt,name=url,proto3,oneof"`
}

type Image_Raw struct {
	Raw []byte `protobuf:"bytes,3,opt,name=raw,proto3,oneof"`
}

func (*Image_Url) isImage_Data() {}

func (*Image_Raw) isImage_Data() {}

func (m *Image) GetData() isImage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Image) GetUrl() string {
	if x, ok := m.GetData().(*Image_Url); ok {
		return x.Url
	}
	return ""
}

func (m *Image) GetRaw() []byte {
	if x, ok := m.GetData().(*Image_Raw); ok {
		return x.Raw
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Image) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Image_Url)(nil),
		(*Image_Raw)(nil),
	}
}

type PointCloud struct {
	// Types that are valid to be assigned to Data:
	//	*PointCloud_Url
	//	*PointCloud_Raw
	Data                 isPointCloud_Data `protobuf_oneof:"data"`
	WorldToLocal         *Transform        `protobuf:"bytes,3,opt,name=world_to_local,json=worldToLocal,proto3" json:"world_to_local,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PointCloud) Reset()         { *m = PointCloud{} }
func (m *PointCloud) String() string { return proto.CompactTextString(m) }
func (*PointCloud) ProtoMessage()    {}
func (*PointCloud) Descriptor() ([]byte, []int) {
	return fileDescriptor_a874c151d5cd4bde, []int{1}
}

func (m *PointCloud) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PointCloud.Unmarshal(m, b)
}
func (m *PointCloud) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PointCloud.Marshal(b, m, deterministic)
}
func (m *PointCloud) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PointCloud.Merge(m, src)
}
func (m *PointCloud) XXX_Size() int {
	return xxx_messageInfo_PointCloud.Size(m)
}
func (m *PointCloud) XXX_DiscardUnknown() {
	xxx_messageInfo_PointCloud.DiscardUnknown(m)
}

var xxx_messageInfo_PointCloud proto.InternalMessageInfo

type isPointCloud_Data interface {
	isPointCloud_Data()
}

type PointCloud_Url struct {
	Url string `protobuf:"bytes,1,opt,name=url,proto3,oneof"`
}

type PointCloud_Raw struct {
	Raw []byte `protobuf:"bytes,2,opt,name=raw,proto3,oneof"`
}

func (*PointCloud_Url) isPointCloud_Data() {}

func (*PointCloud_Raw) isPointCloud_Data() {}

func (m *PointCloud) GetData() isPointCloud_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *PointCloud) GetUrl() string {
	if x, ok := m.GetData().(*PointCloud_Url); ok {
		return x.Url
	}
	return ""
}

func (m *PointCloud) GetRaw() []byte {
	if x, ok := m.GetData().(*PointCloud_Raw); ok {
		return x.Raw
	}
	return nil
}

func (m *PointCloud) GetWorldToLocal() *Transform {
	if m != nil {
		return m.WorldToLocal
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PointCloud) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PointCloud_Url)(nil),
		(*PointCloud_Raw)(nil),
	}
}

type H264VideoFrame struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Flags                int32    `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
	FrameData            []byte   `protobuf:"bytes,3,opt,name=frame_data,json=frameData,proto3" json:"frame_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *H264VideoFrame) Reset()         { *m = H264VideoFrame{} }
func (m *H264VideoFrame) String() string { return proto.CompactTextString(m) }
func (*H264VideoFrame) ProtoMessage()    {}
func (*H264VideoFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_a874c151d5cd4bde, []int{2}
}

func (m *H264VideoFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_H264VideoFrame.Unmarshal(m, b)
}
func (m *H264VideoFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_H264VideoFrame.Marshal(b, m, deterministic)
}
func (m *H264VideoFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_H264VideoFrame.Merge(m, src)
}
func (m *H264VideoFrame) XXX_Size() int {
	return xxx_messageInfo_H264VideoFrame.Size(m)
}
func (m *H264VideoFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_H264VideoFrame.DiscardUnknown(m)
}

var xxx_messageInfo_H264VideoFrame proto.InternalMessageInfo

func (m *H264VideoFrame) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *H264VideoFrame) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *H264VideoFrame) GetFrameData() []byte {
	if m != nil {
		return m.FrameData
	}
	return nil
}

type Video struct {
	MimeType string `protobuf:"bytes,1,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Duration int64  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*Video_Url
	//	*Video_Raw
	Data                 isVideo_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Video) Reset()         { *m = Video{} }
func (m *Video) String() string { return proto.CompactTextString(m) }
func (*Video) ProtoMessage()    {}
func (*Video) Descriptor() ([]byte, []int) {
	return fileDescriptor_a874c151d5cd4bde, []int{3}
}

func (m *Video) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Video.Unmarshal(m, b)
}
func (m *Video) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Video.Marshal(b, m, deterministic)
}
func (m *Video) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Video.Merge(m, src)
}
func (m *Video) XXX_Size() int {
	return xxx_messageInfo_Video.Size(m)
}
func (m *Video) XXX_DiscardUnknown() {
	xxx_messageInfo_Video.DiscardUnknown(m)
}

var xxx_messageInfo_Video proto.InternalMessageInfo

func (m *Video) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *Video) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

type isVideo_Data interface {
	isVideo_Data()
}

type Video_Url struct {
	Url string `protobuf:"bytes,3,opt,name=url,proto3,oneof"`
}

type Video_Raw struct {
	Raw []byte `protobuf:"bytes,4,opt,name=raw,proto3,oneof"`
}

func (*Video_Url) isVideo_Data() {}

func (*Video_Raw) isVideo_Data() {}

func (m *Video) GetData() isVideo_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Video) GetUrl() string {
	if x, ok := m.GetData().(*Video_Url); ok {
		return x.Url
	}
	return ""
}

func (m *Video) GetRaw() []byte {
	if x, ok := m.GetData().(*Video_Raw); ok {
		return x.Raw
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Video) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Video_Url)(nil),
		(*Video_Raw)(nil),
	}
}

func init() {
	proto.RegisterType((*Image)(nil), "v1.model.Image")
	proto.RegisterType((*PointCloud)(nil), "v1.model.PointCloud")
	proto.RegisterType((*H264VideoFrame)(nil), "v1.model.H264VideoFrame")
	proto.RegisterType((*Video)(nil), "v1.model.Video")
}

func init() { proto.RegisterFile("protos/model/v1/media.proto", fileDescriptor_a874c151d5cd4bde) }

var fileDescriptor_a874c151d5cd4bde = []byte{
	// 341 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x6b, 0xc2, 0x30,
	0x14, 0xc6, 0x57, 0x6b, 0x45, 0x9f, 0xe2, 0x21, 0xdb, 0x41, 0x94, 0x81, 0xf3, 0xe4, 0x18, 0xb4,
	0xe8, 0xc6, 0x60, 0x57, 0x37, 0x44, 0x61, 0xb0, 0x51, 0x64, 0x07, 0x77, 0x28, 0xd1, 0xc4, 0x5a,
	0x68, 0xf2, 0x4a, 0x4c, 0xed, 0xfc, 0xef, 0x47, 0xd2, 0x29, 0xc2, 0x3c, 0xbe, 0x5f, 0xbe, 0xef,
	0x4b, 0xf2, 0x3d, 0xe8, 0x65, 0x0a, 0x35, 0xee, 0x02, 0x81, 0x8c, 0xa7, 0xc1, 0x7e, 0x14, 0x08,
	0xce, 0x12, 0xea, 0x5b, 0x4a, 0xea, 0xfb, 0x91, 0x6f, 0x0f, 0xba, 0xdd, 0x7f, 0x32, 0xaa, 0xb7,
	0xa5, 0x6a, 0xb0, 0x04, 0x6f, 0x2e, 0x68, 0xcc, 0xc9, 0x1d, 0xb4, 0xd6, 0x28, 0x35, 0x97, 0x3a,
	0xd2, 0x87, 0x8c, 0x77, 0x9c, 0xbe, 0x33, 0x6c, 0x84, 0xcd, 0x3f, 0xb6, 0x38, 0x64, 0x9c, 0x10,
	0x70, 0x73, 0x95, 0x76, 0x2a, 0xe6, 0x64, 0x76, 0x15, 0x9a, 0xc1, 0x30, 0x45, 0x8b, 0x8e, 0xdb,
	0x77, 0x86, 0x2d, 0xc3, 0x14, 0x2d, 0x26, 0x35, 0xa8, 0x32, 0xaa, 0xe9, 0xa0, 0x00, 0xf8, 0xc4,
	0x44, 0xea, 0xd7, 0x14, 0x73, 0x76, 0x74, 0x3b, 0x17, 0xdc, 0x95, 0x33, 0x37, 0x79, 0x81, 0x76,
	0x81, 0x2a, 0x65, 0x91, 0xc6, 0x28, 0xc5, 0x35, 0x4d, 0x6d, 0x78, 0x73, 0x7c, 0xed, 0x1f, 0x3f,
	0xe4, 0x2f, 0x14, 0x95, 0xbb, 0x0d, 0x2a, 0x11, 0xb6, 0xac, 0x74, 0x81, 0xef, 0x46, 0x78, 0xba,
	0xf8, 0x1b, 0xda, 0xb3, 0xf1, 0xf3, 0xd3, 0x57, 0xc2, 0x38, 0x4e, 0x15, 0x15, 0x9c, 0xdc, 0x80,
	0x97, 0x48, 0xc6, 0x7f, 0xec, 0xf5, 0x5e, 0x58, 0x0e, 0x86, 0x6e, 0x52, 0x1a, 0xef, 0xec, 0x03,
	0xbc, 0xb0, 0x1c, 0xc8, 0x2d, 0xc0, 0xc6, 0x98, 0x22, 0x93, 0x55, 0xfe, 0x2c, 0x6c, 0x58, 0xf2,
	0x66, 0xc2, 0x33, 0xf0, 0x6c, 0x30, 0xe9, 0x41, 0x43, 0x24, 0x82, 0x9f, 0xd7, 0x55, 0x37, 0xc0,
	0x76, 0xd5, 0x85, 0x3a, 0xcb, 0x15, 0xd5, 0x09, 0x4a, 0x9b, 0xee, 0x86, 0xa7, 0xf9, 0xd8, 0x84,
	0x7b, 0xa1, 0x89, 0xea, 0x85, 0x1e, 0x27, 0x0f, 0xcb, 0xfb, 0x38, 0xd1, 0xdb, 0x7c, 0xe5, 0xaf,
	0x51, 0x04, 0x53, 0x54, 0x82, 0x4a, 0x3d, 0xff, 0x08, 0x62, 0x2e, 0xed, 0x12, 0x83, 0x18, 0xed,
	0x56, 0x4d, 0x37, 0xab, 0x9a, 0x45, 0x8f, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x99, 0x29, 0x4f,
	0xf6, 0x1c, 0x02, 0x00, 0x00,
}
