// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/model/v1/rtc.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RTCMessage struct {
	Stream    string `protobuf:"bytes,1,opt,name=stream,proto3" json:"stream,omitempty"`
	Timestamp int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*RTCMessage_Twist
	//	*RTCMessage_Bool
	//	*RTCMessage_CompressedImage
	//	*RTCMessage_GoalId
	Data                 isRTCMessage_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RTCMessage) Reset()         { *m = RTCMessage{} }
func (m *RTCMessage) String() string { return proto.CompactTextString(m) }
func (*RTCMessage) ProtoMessage()    {}
func (*RTCMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_f724cdbb78958dee, []int{0}
}

func (m *RTCMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RTCMessage.Unmarshal(m, b)
}
func (m *RTCMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RTCMessage.Marshal(b, m, deterministic)
}
func (m *RTCMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RTCMessage.Merge(m, src)
}
func (m *RTCMessage) XXX_Size() int {
	return xxx_messageInfo_RTCMessage.Size(m)
}
func (m *RTCMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RTCMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RTCMessage proto.InternalMessageInfo

func (m *RTCMessage) GetStream() string {
	if m != nil {
		return m.Stream
	}
	return ""
}

func (m *RTCMessage) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type isRTCMessage_Data interface {
	isRTCMessage_Data()
}

type RTCMessage_Twist struct {
	Twist *Twist `protobuf:"bytes,3,opt,name=twist,proto3,oneof"`
}

type RTCMessage_Bool struct {
	Bool bool `protobuf:"varint,4,opt,name=bool,proto3,oneof"`
}

type RTCMessage_CompressedImage struct {
	CompressedImage []byte `protobuf:"bytes,5,opt,name=compressed_image,json=compressedImage,proto3,oneof"`
}

type RTCMessage_GoalId struct {
	GoalId *GoalID `protobuf:"bytes,6,opt,name=goal_id,json=goalId,proto3,oneof"`
}

func (*RTCMessage_Twist) isRTCMessage_Data() {}

func (*RTCMessage_Bool) isRTCMessage_Data() {}

func (*RTCMessage_CompressedImage) isRTCMessage_Data() {}

func (*RTCMessage_GoalId) isRTCMessage_Data() {}

func (m *RTCMessage) GetData() isRTCMessage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RTCMessage) GetTwist() *Twist {
	if x, ok := m.GetData().(*RTCMessage_Twist); ok {
		return x.Twist
	}
	return nil
}

func (m *RTCMessage) GetBool() bool {
	if x, ok := m.GetData().(*RTCMessage_Bool); ok {
		return x.Bool
	}
	return false
}

func (m *RTCMessage) GetCompressedImage() []byte {
	if x, ok := m.GetData().(*RTCMessage_CompressedImage); ok {
		return x.CompressedImage
	}
	return nil
}

func (m *RTCMessage) GetGoalId() *GoalID {
	if x, ok := m.GetData().(*RTCMessage_GoalId); ok {
		return x.GoalId
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RTCMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RTCMessage_Twist)(nil),
		(*RTCMessage_Bool)(nil),
		(*RTCMessage_CompressedImage)(nil),
		(*RTCMessage_GoalId)(nil),
	}
}

func init() {
	proto.RegisterType((*RTCMessage)(nil), "v1.model.RTCMessage")
}

func init() { proto.RegisterFile("protos/model/v1/rtc.proto", fileDescriptor_f724cdbb78958dee) }

var fileDescriptor_f724cdbb78958dee = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0x80, 0x1b, 0xb7, 0xd5, 0x2d, 0x0a, 0x1b, 0x41, 0xa4, 0x0e, 0x0f, 0xc5, 0x8b, 0x95, 0x41,
	0xc3, 0xf4, 0x1f, 0x4c, 0xd1, 0xf6, 0x20, 0x42, 0xd8, 0xc9, 0xcb, 0x78, 0x5b, 0x43, 0x16, 0x68,
	0xfa, 0x46, 0xf3, 0x9c, 0x3f, 0xd8, 0x3f, 0x22, 0xcd, 0x94, 0xc1, 0x8e, 0xef, 0xfb, 0x3e, 0xf2,
	0xc2, 0xe3, 0x37, 0xbb, 0x16, 0x09, 0xbd, 0x74, 0x58, 0xe9, 0x5a, 0xee, 0xe7, 0xb2, 0xa5, 0x4d,
	0x1e, 0x98, 0x18, 0xee, 0xe7, 0x79, 0xc0, 0xd3, 0xe9, 0x69, 0xe4, 0x80, 0xb6, 0x87, 0x6a, 0x9a,
	0x9e, 0xba, 0x06, 0xf6, 0xd6, 0x00, 0x59, 0x6c, 0x0e, 0xc5, 0xdd, 0x0f, 0xe3, 0x5c, 0x2d, 0x9f,
	0xdf, 0xb5, 0xf7, 0x60, 0xb4, 0xb8, 0xe6, 0xb1, 0xa7, 0x56, 0x83, 0x4b, 0x58, 0xca, 0xb2, 0x91,
	0xfa, 0x9b, 0xc4, 0x2d, 0x1f, 0x91, 0x75, 0xda, 0x13, 0xb8, 0x5d, 0x72, 0x96, 0xb2, 0xac, 0xa7,
	0x8e, 0x40, 0xdc, 0xf3, 0x01, 0x7d, 0x5b, 0x4f, 0x49, 0x2f, 0x65, 0xd9, 0xc5, 0xe3, 0x38, 0xff,
	0xff, 0x5c, 0xbe, 0xec, 0x70, 0x11, 0xa9, 0x83, 0x17, 0x57, 0xbc, 0xbf, 0x46, 0xac, 0x93, 0x7e,
	0xca, 0xb2, 0x61, 0x11, 0xa9, 0x30, 0x89, 0x19, 0x9f, 0x6c, 0xd0, 0xed, 0x5a, 0xed, 0xbd, 0xae,
	0x56, 0xd6, 0x81, 0xd1, 0xc9, 0x20, 0x65, 0xd9, 0x65, 0x11, 0xa9, 0xf1, 0xd1, 0x94, 0x9d, 0x10,
	0x33, 0x7e, 0x6e, 0x10, 0xea, 0x95, 0xad, 0x92, 0x38, 0x6c, 0x9b, 0x1c, 0xb7, 0xbd, 0x21, 0xd4,
	0xe5, 0x4b, 0x11, 0xa9, 0xb8, 0x4b, 0xca, 0x6a, 0x11, 0xf3, 0x7e, 0x05, 0x04, 0x8b, 0xd9, 0xe7,
	0x83, 0xb1, 0xb4, 0xfd, 0x5a, 0xe7, 0x1b, 0x74, 0xf2, 0x15, 0x5b, 0x07, 0x0d, 0x95, 0x1f, 0xd2,
	0xe8, 0x26, 0x9c, 0x41, 0x1a, 0x0c, 0x97, 0xeb, 0x5e, 0x59, 0xc7, 0x01, 0x3d, 0xfd, 0x06, 0x00,
	0x00, 0xff, 0xff, 0x68, 0x18, 0x19, 0x83, 0x7e, 0x01, 0x00, 0x00,
}
