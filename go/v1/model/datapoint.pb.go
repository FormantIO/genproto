// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/model/v1/datapoint.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Datapoint struct {
	Stream    string            `protobuf:"bytes,1,opt,name=stream,proto3" json:"stream,omitempty"`
	Timestamp int64             `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Tags      map[string]string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Types that are valid to be assigned to Data:
	//	*Datapoint_Text
	//	*Datapoint_Numeric
	//	*Datapoint_MetricSet
	//	*Datapoint_Bitset
	//	*Datapoint_File
	//	*Datapoint_Image
	//	*Datapoint_PointCloud
	//	*Datapoint_Location
	//	*Datapoint_Localization
	//	*Datapoint_Health
	Data                 isDatapoint_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Datapoint) Reset()         { *m = Datapoint{} }
func (m *Datapoint) String() string { return proto.CompactTextString(m) }
func (*Datapoint) ProtoMessage()    {}
func (*Datapoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_d4daa958809a1527, []int{0}
}

func (m *Datapoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Datapoint.Unmarshal(m, b)
}
func (m *Datapoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Datapoint.Marshal(b, m, deterministic)
}
func (m *Datapoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Datapoint.Merge(m, src)
}
func (m *Datapoint) XXX_Size() int {
	return xxx_messageInfo_Datapoint.Size(m)
}
func (m *Datapoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Datapoint.DiscardUnknown(m)
}

var xxx_messageInfo_Datapoint proto.InternalMessageInfo

func (m *Datapoint) GetStream() string {
	if m != nil {
		return m.Stream
	}
	return ""
}

func (m *Datapoint) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Datapoint) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type isDatapoint_Data interface {
	isDatapoint_Data()
}

type Datapoint_Text struct {
	Text *Text `protobuf:"bytes,4,opt,name=text,proto3,oneof"`
}

type Datapoint_Numeric struct {
	Numeric *Numeric `protobuf:"bytes,5,opt,name=numeric,proto3,oneof"`
}

type Datapoint_MetricSet struct {
	MetricSet *MetricSet `protobuf:"bytes,6,opt,name=metric_set,json=metricSet,proto3,oneof"`
}

type Datapoint_Bitset struct {
	Bitset *Bitset `protobuf:"bytes,7,opt,name=bitset,proto3,oneof"`
}

type Datapoint_File struct {
	File *File `protobuf:"bytes,8,opt,name=file,proto3,oneof"`
}

type Datapoint_Image struct {
	Image *Image `protobuf:"bytes,9,opt,name=image,proto3,oneof"`
}

type Datapoint_PointCloud struct {
	PointCloud *PointCloud `protobuf:"bytes,10,opt,name=point_cloud,json=pointCloud,proto3,oneof"`
}

type Datapoint_Location struct {
	Location *Location `protobuf:"bytes,11,opt,name=location,proto3,oneof"`
}

type Datapoint_Localization struct {
	Localization *Localization `protobuf:"bytes,12,opt,name=localization,proto3,oneof"`
}

type Datapoint_Health struct {
	Health *Health `protobuf:"bytes,13,opt,name=health,proto3,oneof"`
}

func (*Datapoint_Text) isDatapoint_Data() {}

func (*Datapoint_Numeric) isDatapoint_Data() {}

func (*Datapoint_MetricSet) isDatapoint_Data() {}

func (*Datapoint_Bitset) isDatapoint_Data() {}

func (*Datapoint_File) isDatapoint_Data() {}

func (*Datapoint_Image) isDatapoint_Data() {}

func (*Datapoint_PointCloud) isDatapoint_Data() {}

func (*Datapoint_Location) isDatapoint_Data() {}

func (*Datapoint_Localization) isDatapoint_Data() {}

func (*Datapoint_Health) isDatapoint_Data() {}

func (m *Datapoint) GetData() isDatapoint_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Datapoint) GetText() *Text {
	if x, ok := m.GetData().(*Datapoint_Text); ok {
		return x.Text
	}
	return nil
}

func (m *Datapoint) GetNumeric() *Numeric {
	if x, ok := m.GetData().(*Datapoint_Numeric); ok {
		return x.Numeric
	}
	return nil
}

func (m *Datapoint) GetMetricSet() *MetricSet {
	if x, ok := m.GetData().(*Datapoint_MetricSet); ok {
		return x.MetricSet
	}
	return nil
}

func (m *Datapoint) GetBitset() *Bitset {
	if x, ok := m.GetData().(*Datapoint_Bitset); ok {
		return x.Bitset
	}
	return nil
}

func (m *Datapoint) GetFile() *File {
	if x, ok := m.GetData().(*Datapoint_File); ok {
		return x.File
	}
	return nil
}

func (m *Datapoint) GetImage() *Image {
	if x, ok := m.GetData().(*Datapoint_Image); ok {
		return x.Image
	}
	return nil
}

func (m *Datapoint) GetPointCloud() *PointCloud {
	if x, ok := m.GetData().(*Datapoint_PointCloud); ok {
		return x.PointCloud
	}
	return nil
}

func (m *Datapoint) GetLocation() *Location {
	if x, ok := m.GetData().(*Datapoint_Location); ok {
		return x.Location
	}
	return nil
}

func (m *Datapoint) GetLocalization() *Localization {
	if x, ok := m.GetData().(*Datapoint_Localization); ok {
		return x.Localization
	}
	return nil
}

func (m *Datapoint) GetHealth() *Health {
	if x, ok := m.GetData().(*Datapoint_Health); ok {
		return x.Health
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Datapoint) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Datapoint_Text)(nil),
		(*Datapoint_Numeric)(nil),
		(*Datapoint_MetricSet)(nil),
		(*Datapoint_Bitset)(nil),
		(*Datapoint_File)(nil),
		(*Datapoint_Image)(nil),
		(*Datapoint_PointCloud)(nil),
		(*Datapoint_Location)(nil),
		(*Datapoint_Localization)(nil),
		(*Datapoint_Health)(nil),
	}
}

func init() {
	proto.RegisterType((*Datapoint)(nil), "v1.model.Datapoint")
	proto.RegisterMapType((map[string]string)(nil), "v1.model.Datapoint.TagsEntry")
}

func init() { proto.RegisterFile("protos/model/v1/datapoint.proto", fileDescriptor_d4daa958809a1527) }

var fileDescriptor_d4daa958809a1527 = []byte{
	// 488 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0x5b, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0xd3, 0xf5, 0xb2, 0xe6, 0x74, 0xc0, 0x30, 0xd3, 0x64, 0x85, 0x21, 0x22, 0x84, 0x44,
	0x01, 0x91, 0xd0, 0x81, 0x34, 0x84, 0x78, 0x2a, 0x30, 0x65, 0x12, 0x37, 0x99, 0x3d, 0xf1, 0x32,
	0xb9, 0xa9, 0x49, 0x2d, 0xe2, 0xb8, 0x4a, 0xdc, 0x6a, 0xe3, 0x53, 0xf0, 0x91, 0x91, 0x4f, 0x6e,
	0x5a, 0xa6, 0xbd, 0xc5, 0xe7, 0xf7, 0xfb, 0xbb, 0xa7, 0x27, 0x27, 0xf0, 0x78, 0x9d, 0x6b, 0xa3,
	0x8b, 0x50, 0xe9, 0xa5, 0x48, 0xc3, 0xed, 0x2c, 0x5c, 0x72, 0xc3, 0xd7, 0x5a, 0x66, 0x26, 0x40,
	0x42, 0xc6, 0xdb, 0x59, 0x80, 0xd0, 0xf3, 0xba, 0xea, 0x6f, 0x99, 0x8a, 0xd2, 0xf2, 0x8e, 0xba,
	0x6c, 0x25, 0x78, 0x6a, 0x56, 0x15, 0xbd, 0x91, 0x54, 0xbc, 0x61, 0x7e, 0x97, 0x65, 0x7c, 0x2b,
	0x13, 0x6e, 0xa4, 0xce, 0x6e, 0x4b, 0x1b, 0x71, 0x59, 0x75, 0xe7, 0x3d, 0xbc, 0x71, 0xb3, 0x58,
	0x4a, 0x5e, 0xc2, 0x27, 0xff, 0x86, 0xe0, 0x7e, 0xaa, 0xff, 0x0e, 0x39, 0x84, 0x51, 0x61, 0x72,
	0xc1, 0x15, 0xed, 0xf9, 0xbd, 0xa9, 0xcb, 0xaa, 0x13, 0x39, 0x02, 0xd7, 0x48, 0x25, 0x0a, 0xc3,
	0xd5, 0x9a, 0xee, 0xf8, 0xbd, 0x69, 0x9f, 0xb5, 0x05, 0x32, 0x83, 0x81, 0xe1, 0x49, 0x41, 0xfb,
	0x7e, 0x7f, 0x3a, 0x39, 0x7e, 0x14, 0xd4, 0xd3, 0x08, 0x9a, 0x8b, 0x83, 0x73, 0x9e, 0x14, 0x9f,
	0x33, 0x93, 0x5f, 0x31, 0x54, 0xc9, 0x53, 0x18, 0xd8, 0x0e, 0xe9, 0xc0, 0xef, 0x4d, 0x27, 0xc7,
	0x77, 0xdb, 0xc8, 0xb9, 0xb8, 0x34, 0x91, 0xc3, 0x90, 0x92, 0x57, 0xb0, 0x9b, 0x6d, 0x94, 0xc8,
	0x65, 0x4c, 0x87, 0x28, 0xde, 0x6f, 0xc5, 0x6f, 0x25, 0x88, 0x1c, 0x56, 0x3b, 0xe4, 0x2d, 0x80,
	0x12, 0x26, 0x97, 0xf1, 0x45, 0x21, 0x0c, 0x1d, 0x61, 0xe2, 0x41, 0x9b, 0xf8, 0x8a, 0xec, 0xa7,
	0xb0, 0xf7, 0xbb, 0xaa, 0x3e, 0x90, 0x17, 0x30, 0x5a, 0x48, 0x63, 0x13, 0xbb, 0x98, 0xd8, 0x6f,
	0x13, 0x73, 0xac, 0x47, 0x0e, 0xab, 0x0c, 0xdb, 0xb6, 0x7d, 0xa1, 0x74, 0xdc, 0x6d, 0xfb, 0x54,
	0xa6, 0xc2, 0xb6, 0x6d, 0x29, 0x79, 0x06, 0x43, 0xa9, 0x78, 0x22, 0xa8, 0x8b, 0xda, 0xbd, 0x56,
	0x3b, 0xb3, 0xe5, 0xc8, 0x61, 0x25, 0x27, 0x27, 0x30, 0xc1, 0xf1, 0x5c, 0xc4, 0xa9, 0xde, 0x2c,
	0x29, 0xa0, 0x7e, 0xd0, 0xea, 0x3f, 0x2c, 0xfc, 0x68, 0x59, 0xe4, 0x30, 0x58, 0x37, 0x27, 0xf2,
	0x1a, 0xc6, 0xa9, 0x8e, 0x71, 0x01, 0xe8, 0x04, 0x53, 0xa4, 0x4d, 0x7d, 0xa9, 0x48, 0xe4, 0xb0,
	0xc6, 0x22, 0x1f, 0x60, 0xcf, 0x3e, 0xa7, 0xf2, 0x6f, 0x99, 0xda, 0xc3, 0xd4, 0xe1, 0xf5, 0x54,
	0x4d, 0x23, 0x87, 0x5d, 0xb3, 0xed, 0x8c, 0xca, 0x65, 0xa5, 0x77, 0xba, 0x33, 0x8a, 0xb0, 0x6e,
	0x67, 0x54, 0x1a, 0xde, 0x09, 0xb8, 0xcd, 0xdb, 0x26, 0xfb, 0xd0, 0xff, 0x23, 0xae, 0xaa, 0x6d,
	0xb2, 0x8f, 0xe4, 0x00, 0x86, 0x5b, 0x9e, 0x6e, 0x04, 0xae, 0x91, 0xcb, 0xca, 0xc3, 0xfb, 0x9d,
	0x77, 0xbd, 0xf9, 0x08, 0x06, 0xf6, 0xc3, 0x9a, 0xbf, 0xfc, 0xf5, 0x3c, 0x91, 0x66, 0xb5, 0x59,
	0x04, 0xb1, 0x56, 0xe1, 0xa9, 0xce, 0x15, 0xcf, 0xcc, 0xd9, 0xf7, 0x30, 0x11, 0x19, 0xee, 0x6c,
	0x98, 0x68, 0xdc, 0x62, 0xfb, 0xf3, 0x8b, 0x11, 0x96, 0xde, 0xfc, 0x0f, 0x00, 0x00, 0xff, 0xff,
	0xc1, 0xe2, 0x55, 0x05, 0xa4, 0x03, 0x00, 0x00,
}
