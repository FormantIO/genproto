// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/model/v1/event.proto

#include "protos/model/v1/event.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace v1 {
namespace model {
PROTOBUF_CONSTEXPR Event_TagsEntry_DoNotUse::Event_TagsEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct Event_TagsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Event_TagsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Event_TagsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Event_TagsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Event_TagsEntry_DoNotUseDefaultTypeInternal _Event_TagsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR Event::Event(
    ::_pbi::ConstantInitialized)
  : tags_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , message_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , stream_name_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , stream_type_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , timestamp_(int64_t{0})
  , notification_enabled_(false)
  , severity_(0)

  , end_timestamp_(int64_t{0}){}
struct EventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventDefaultTypeInternal() {}
  union {
    Event _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventDefaultTypeInternal _Event_default_instance_;
PROTOBUF_CONSTEXPR AgentEventConfiguration::AgentEventConfiguration(
    ::_pbi::ConstantInitialized)
  : event_triggers_()
  , last_updated_(int64_t{0}){}
struct AgentEventConfigurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentEventConfigurationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentEventConfigurationDefaultTypeInternal() {}
  union {
    AgentEventConfiguration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentEventConfigurationDefaultTypeInternal _AgentEventConfiguration_default_instance_;
PROTOBUF_CONSTEXPR AgentEventTrigger::AgentEventTrigger(
    ::_pbi::ConstantInitialized)
  : id_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , stream_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , interval_(int64_t{0})
  , _oneof_case_{}{}
struct AgentEventTriggerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentEventTriggerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentEventTriggerDefaultTypeInternal() {}
  union {
    AgentEventTrigger _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentEventTriggerDefaultTypeInternal _AgentEventTrigger_default_instance_;
PROTOBUF_CONSTEXPR PresenceEventTriggerCondition::PresenceEventTriggerCondition(
    ::_pbi::ConstantInitialized){}
struct PresenceEventTriggerConditionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PresenceEventTriggerConditionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PresenceEventTriggerConditionDefaultTypeInternal() {}
  union {
    PresenceEventTriggerCondition _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PresenceEventTriggerConditionDefaultTypeInternal _PresenceEventTriggerCondition_default_instance_;
PROTOBUF_CONSTEXPR ThresholdEventTriggerCondition::ThresholdEventTriggerCondition(
    ::_pbi::ConstantInitialized)
  : value_(0)
  , operator__(0)
{}
struct ThresholdEventTriggerConditionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ThresholdEventTriggerConditionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ThresholdEventTriggerConditionDefaultTypeInternal() {}
  union {
    ThresholdEventTriggerCondition _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ThresholdEventTriggerConditionDefaultTypeInternal _ThresholdEventTriggerCondition_default_instance_;
PROTOBUF_CONSTEXPR RegexEventTriggerCondition::RegexEventTriggerCondition(
    ::_pbi::ConstantInitialized)
  : value_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct RegexEventTriggerConditionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegexEventTriggerConditionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegexEventTriggerConditionDefaultTypeInternal() {}
  union {
    RegexEventTriggerCondition _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegexEventTriggerConditionDefaultTypeInternal _RegexEventTriggerCondition_default_instance_;
PROTOBUF_CONSTEXPR BitsetEventTriggerCondition::BitsetEventTriggerCondition(
    ::_pbi::ConstantInitialized)
  : bit_conditions_()
  , operator__(0)
{}
struct BitsetEventTriggerConditionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BitsetEventTriggerConditionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BitsetEventTriggerConditionDefaultTypeInternal() {}
  union {
    BitsetEventTriggerCondition _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BitsetEventTriggerConditionDefaultTypeInternal _BitsetEventTriggerCondition_default_instance_;
PROTOBUF_CONSTEXPR BitsetCondition::BitsetCondition(
    ::_pbi::ConstantInitialized)
  : key_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , true__(false)
  , false__(false){}
struct BitsetConditionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BitsetConditionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BitsetConditionDefaultTypeInternal() {}
  union {
    BitsetCondition _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BitsetConditionDefaultTypeInternal _BitsetCondition_default_instance_;
}  // namespace model
}  // namespace v1
static ::_pb::Metadata file_level_metadata_protos_2fmodel_2fv1_2fevent_2eproto[9];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_protos_2fmodel_2fv1_2fevent_2eproto[3];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_protos_2fmodel_2fv1_2fevent_2eproto = nullptr;

const uint32_t TableStruct_protos_2fmodel_2fv1_2fevent_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::v1::model::Event_TagsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::v1::model::Event_TagsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v1::model::Event_TagsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::v1::model::Event_TagsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v1::model::Event, timestamp_),
  PROTOBUF_FIELD_OFFSET(::v1::model::Event, end_timestamp_),
  PROTOBUF_FIELD_OFFSET(::v1::model::Event, message_),
  PROTOBUF_FIELD_OFFSET(::v1::model::Event, stream_name_),
  PROTOBUF_FIELD_OFFSET(::v1::model::Event, stream_type_),
  PROTOBUF_FIELD_OFFSET(::v1::model::Event, notification_enabled_),
  PROTOBUF_FIELD_OFFSET(::v1::model::Event, severity_),
  PROTOBUF_FIELD_OFFSET(::v1::model::Event, tags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentEventConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentEventConfiguration, event_triggers_),
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentEventConfiguration, last_updated_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentEventTrigger, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentEventTrigger, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentEventTrigger, id_),
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentEventTrigger, stream_),
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentEventTrigger, interval_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::v1::model::AgentEventTrigger, condition_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::PresenceEventTriggerCondition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::ThresholdEventTriggerCondition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v1::model::ThresholdEventTriggerCondition, value_),
  PROTOBUF_FIELD_OFFSET(::v1::model::ThresholdEventTriggerCondition, operator__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::RegexEventTriggerCondition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v1::model::RegexEventTriggerCondition, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::BitsetEventTriggerCondition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v1::model::BitsetEventTriggerCondition, bit_conditions_),
  PROTOBUF_FIELD_OFFSET(::v1::model::BitsetEventTriggerCondition, operator__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::v1::model::BitsetCondition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::v1::model::BitsetCondition, key_),
  PROTOBUF_FIELD_OFFSET(::v1::model::BitsetCondition, true__),
  PROTOBUF_FIELD_OFFSET(::v1::model::BitsetCondition, false__),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::v1::model::Event_TagsEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::v1::model::Event)},
  { 24, -1, -1, sizeof(::v1::model::AgentEventConfiguration)},
  { 32, -1, -1, sizeof(::v1::model::AgentEventTrigger)},
  { 46, -1, -1, sizeof(::v1::model::PresenceEventTriggerCondition)},
  { 52, -1, -1, sizeof(::v1::model::ThresholdEventTriggerCondition)},
  { 60, -1, -1, sizeof(::v1::model::RegexEventTriggerCondition)},
  { 67, -1, -1, sizeof(::v1::model::BitsetEventTriggerCondition)},
  { 75, -1, -1, sizeof(::v1::model::BitsetCondition)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::v1::model::_Event_TagsEntry_DoNotUse_default_instance_._instance,
  &::v1::model::_Event_default_instance_._instance,
  &::v1::model::_AgentEventConfiguration_default_instance_._instance,
  &::v1::model::_AgentEventTrigger_default_instance_._instance,
  &::v1::model::_PresenceEventTriggerCondition_default_instance_._instance,
  &::v1::model::_ThresholdEventTriggerCondition_default_instance_._instance,
  &::v1::model::_RegexEventTriggerCondition_default_instance_._instance,
  &::v1::model::_BitsetEventTriggerCondition_default_instance_._instance,
  &::v1::model::_BitsetCondition_default_instance_._instance,
};

const char descriptor_table_protodef_protos_2fmodel_2fv1_2fevent_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033protos/model/v1/event.proto\022\010v1.model\""
  "\367\002\n\005Event\022\034\n\ttimestamp\030\001 \001(\003R\ttimestamp\022"
  "#\n\rend_timestamp\030\010 \001(\003R\014endTimestamp\022\030\n\007"
  "message\030\002 \001(\tR\007message\022\037\n\013stream_name\030\003 "
  "\001(\tR\nstreamName\022\037\n\013stream_type\030\004 \001(\tR\nst"
  "reamType\0221\n\024notification_enabled\030\005 \001(\010R\023"
  "notificationEnabled\022.\n\010severity\030\t \001(\0162\022."
  "v1.model.SeverityR\010severity\022-\n\004tags\030\006 \003("
  "\0132\031.v1.model.Event.TagsEntryR\004tags\0327\n\tTa"
  "gsEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\t"
  "R\005value:\0028\001J\004\010\007\020\010\"\200\001\n\027AgentEventConfigur"
  "ation\022B\n\016event_triggers\030\001 \003(\0132\033.v1.model"
  ".AgentEventTriggerR\reventTriggers\022!\n\014las"
  "t_updated\030\002 \001(\003R\013lastUpdated\"\364\002\n\021AgentEv"
  "entTrigger\022\016\n\002id\030\001 \001(\tR\002id\022\026\n\006stream\030\002 \001"
  "(\tR\006stream\022\032\n\010interval\030\003 \001(\003R\010interval\022E"
  "\n\010presence\030\004 \001(\0132\'.v1.model.PresenceEven"
  "tTriggerConditionH\000R\010presence\022H\n\tthresho"
  "ld\030\005 \001(\0132(.v1.model.ThresholdEventTrigge"
  "rConditionH\000R\tthreshold\022<\n\005regex\030\006 \001(\0132$"
  ".v1.model.RegexEventTriggerConditionH\000R\005"
  "regex\022\?\n\006bitset\030\007 \001(\0132%.v1.model.BitsetE"
  "ventTriggerConditionH\000R\006bitsetB\013\n\tcondit"
  "ion\"\037\n\035PresenceEventTriggerCondition\"o\n\036"
  "ThresholdEventTriggerCondition\022\024\n\005value\030"
  "\001 \001(\001R\005value\0227\n\010operator\030\002 \001(\0162\033.v1.mode"
  "l.ThresholdOperatorR\010operator\"2\n\032RegexEv"
  "entTriggerCondition\022\024\n\005value\030\001 \001(\tR\005valu"
  "e\"\225\001\n\033BitsetEventTriggerCondition\022@\n\016bit"
  "_conditions\030\001 \003(\0132\031.v1.model.BitsetCondi"
  "tionR\rbitConditions\0224\n\010operator\030\002 \001(\0162\030."
  "v1.model.BitsetOperatorR\010operator\"M\n\017Bit"
  "setCondition\022\020\n\003key\030\001 \001(\tR\003key\022\022\n\004true\030\002"
  " \001(\010R\004true\022\024\n\005false\030\003 \001(\010R\005false*:\n\010Seve"
  "rity\022\010\n\004INFO\020\000\022\013\n\007WARNING\020\001\022\t\n\005ERROR\020\002\022\014"
  "\n\010CRITICAL\020\003*F\n\021ThresholdOperator\022\006\n\002LT\020"
  "\000\022\007\n\003LTE\020\001\022\006\n\002GT\020\002\022\007\n\003GTE\020\003\022\006\n\002EQ\020\004\022\007\n\003N"
  "EQ\020\005*\"\n\016BitsetOperator\022\007\n\003ANY\020\000\022\007\n\003ALL\020\001"
  "B+Z)github.com/FormantIO/genproto/go/v1/"
  "modelb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto = {
    false, false, 1573, descriptor_table_protodef_protos_2fmodel_2fv1_2fevent_2eproto,
    "protos/model/v1/event.proto",
    &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_once, nullptr, 0, 9,
    schemas, file_default_instances, TableStruct_protos_2fmodel_2fv1_2fevent_2eproto::offsets,
    file_level_metadata_protos_2fmodel_2fv1_2fevent_2eproto, file_level_enum_descriptors_protos_2fmodel_2fv1_2fevent_2eproto,
    file_level_service_descriptors_protos_2fmodel_2fv1_2fevent_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_getter() {
  return &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protos_2fmodel_2fv1_2fevent_2eproto(&descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto);
namespace v1 {
namespace model {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Severity_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto);
  return file_level_enum_descriptors_protos_2fmodel_2fv1_2fevent_2eproto[0];
}
bool Severity_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ThresholdOperator_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto);
  return file_level_enum_descriptors_protos_2fmodel_2fv1_2fevent_2eproto[1];
}
bool ThresholdOperator_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BitsetOperator_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto);
  return file_level_enum_descriptors_protos_2fmodel_2fv1_2fevent_2eproto[2];
}
bool BitsetOperator_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

Event_TagsEntry_DoNotUse::Event_TagsEntry_DoNotUse() {}
Event_TagsEntry_DoNotUse::Event_TagsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Event_TagsEntry_DoNotUse::MergeFrom(const Event_TagsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Event_TagsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_getter, &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_once,
      file_level_metadata_protos_2fmodel_2fv1_2fevent_2eproto[0]);
}

// ===================================================================

class Event::_Internal {
 public:
};

Event::Event(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  tags_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &Event::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:v1.model.Event)
}
Event::Event(const Event& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tags_.MergeFrom(from.tags_);
  message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    message_.Set(from._internal_message(), 
      GetArenaForAllocation());
  }
  stream_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    stream_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_stream_name().empty()) {
    stream_name_.Set(from._internal_stream_name(), 
      GetArenaForAllocation());
  }
  stream_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    stream_type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_stream_type().empty()) {
    stream_type_.Set(from._internal_stream_type(), 
      GetArenaForAllocation());
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_timestamp_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(end_timestamp_));
  // @@protoc_insertion_point(copy_constructor:v1.model.Event)
}

inline void Event::SharedCtor() {
message_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  message_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
stream_name_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  stream_name_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
stream_type_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  stream_type_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&timestamp_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&end_timestamp_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(end_timestamp_));
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:v1.model.Event)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void Event::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  tags_.Destruct();
  message_.Destroy();
  stream_name_.Destroy();
  stream_type_.Destroy();
}

void Event::ArenaDtor(void* object) {
  Event* _this = reinterpret_cast< Event* >(object);
  _this->tags_.Destruct();
}
void Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.Event)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  message_.ClearToEmpty();
  stream_name_.ClearToEmpty();
  stream_type_.ClearToEmpty();
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_timestamp_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(end_timestamp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Event::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 timestamp = 1 [json_name = "timestamp"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message = 2 [json_name = "message"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v1.model.Event.message"));
        } else
          goto handle_unusual;
        continue;
      // string stream_name = 3 [json_name = "streamName"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_stream_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v1.model.Event.stream_name"));
        } else
          goto handle_unusual;
        continue;
      // string stream_type = 4 [json_name = "streamType"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_stream_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v1.model.Event.stream_type"));
        } else
          goto handle_unusual;
        continue;
      // bool notification_enabled = 5 [json_name = "notificationEnabled"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          notification_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> tags = 6 [json_name = "tags"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&tags_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 end_timestamp = 8 [json_name = "endTimestamp"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          end_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .v1.model.Severity severity = 9 [json_name = "severity"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_severity(static_cast<::v1::model::Severity>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Event::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.Event)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_timestamp(), target);
  }

  // string message = 2 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v1.model.Event.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // string stream_name = 3 [json_name = "streamName"];
  if (!this->_internal_stream_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stream_name().data(), static_cast<int>(this->_internal_stream_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v1.model.Event.stream_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_stream_name(), target);
  }

  // string stream_type = 4 [json_name = "streamType"];
  if (!this->_internal_stream_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stream_type().data(), static_cast<int>(this->_internal_stream_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v1.model.Event.stream_type");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_stream_type(), target);
  }

  // bool notification_enabled = 5 [json_name = "notificationEnabled"];
  if (this->_internal_notification_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_notification_enabled(), target);
  }

  // map<string, string> tags = 6 [json_name = "tags"];
  if (!this->_internal_tags().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = Event_TagsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_tags();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "v1.model.Event.TagsEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "v1.model.Event.TagsEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(6, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // int64 end_timestamp = 8 [json_name = "endTimestamp"];
  if (this->_internal_end_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(8, this->_internal_end_timestamp(), target);
  }

  // .v1.model.Severity severity = 9 [json_name = "severity"];
  if (this->_internal_severity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      9, this->_internal_severity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.Event)
  return target;
}

size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.Event)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> tags = 6 [json_name = "tags"];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_tags_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_tags().begin();
      it != this->_internal_tags().end(); ++it) {
    total_size += Event_TagsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string message = 2 [json_name = "message"];
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // string stream_name = 3 [json_name = "streamName"];
  if (!this->_internal_stream_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stream_name());
  }

  // string stream_type = 4 [json_name = "streamType"];
  if (!this->_internal_stream_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stream_type());
  }

  // int64 timestamp = 1 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_timestamp());
  }

  // bool notification_enabled = 5 [json_name = "notificationEnabled"];
  if (this->_internal_notification_enabled() != 0) {
    total_size += 1 + 1;
  }

  // .v1.model.Severity severity = 9 [json_name = "severity"];
  if (this->_internal_severity() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_severity());
  }

  // int64 end_timestamp = 8 [json_name = "endTimestamp"];
  if (this->_internal_end_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_end_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Event::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Event::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Event::GetClassData() const { return &_class_data_; }

void Event::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Event *>(to)->MergeFrom(
      static_cast<const Event &>(from));
}


void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.Event)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (!from._internal_stream_name().empty()) {
    _internal_set_stream_name(from._internal_stream_name());
  }
  if (!from._internal_stream_type().empty()) {
    _internal_set_stream_type(from._internal_stream_type());
  }
  if (from._internal_timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_notification_enabled() != 0) {
    _internal_set_notification_enabled(from._internal_notification_enabled());
  }
  if (from._internal_severity() != 0) {
    _internal_set_severity(from._internal_severity());
  }
  if (from._internal_end_timestamp() != 0) {
    _internal_set_end_timestamp(from._internal_end_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  return true;
}

void Event::InternalSwap(Event* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  tags_.InternalSwap(&other->tags_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &stream_name_, lhs_arena,
      &other->stream_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &stream_type_, lhs_arena,
      &other->stream_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Event, end_timestamp_)
      + sizeof(Event::end_timestamp_)
      - PROTOBUF_FIELD_OFFSET(Event, timestamp_)>(
          reinterpret_cast<char*>(&timestamp_),
          reinterpret_cast<char*>(&other->timestamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Event::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_getter, &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_once,
      file_level_metadata_protos_2fmodel_2fv1_2fevent_2eproto[1]);
}

// ===================================================================

class AgentEventConfiguration::_Internal {
 public:
};

AgentEventConfiguration::AgentEventConfiguration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  event_triggers_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:v1.model.AgentEventConfiguration)
}
AgentEventConfiguration::AgentEventConfiguration(const AgentEventConfiguration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      event_triggers_(from.event_triggers_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  last_updated_ = from.last_updated_;
  // @@protoc_insertion_point(copy_constructor:v1.model.AgentEventConfiguration)
}

inline void AgentEventConfiguration::SharedCtor() {
last_updated_ = int64_t{0};
}

AgentEventConfiguration::~AgentEventConfiguration() {
  // @@protoc_insertion_point(destructor:v1.model.AgentEventConfiguration)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AgentEventConfiguration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AgentEventConfiguration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgentEventConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.AgentEventConfiguration)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_triggers_.Clear();
  last_updated_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentEventConfiguration::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .v1.model.AgentEventTrigger event_triggers = 1 [json_name = "eventTriggers"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_event_triggers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 last_updated = 2 [json_name = "lastUpdated"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          last_updated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgentEventConfiguration::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.AgentEventConfiguration)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .v1.model.AgentEventTrigger event_triggers = 1 [json_name = "eventTriggers"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_event_triggers_size()); i < n; i++) {
    const auto& repfield = this->_internal_event_triggers(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int64 last_updated = 2 [json_name = "lastUpdated"];
  if (this->_internal_last_updated() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_last_updated(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.AgentEventConfiguration)
  return target;
}

size_t AgentEventConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.AgentEventConfiguration)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .v1.model.AgentEventTrigger event_triggers = 1 [json_name = "eventTriggers"];
  total_size += 1UL * this->_internal_event_triggers_size();
  for (const auto& msg : this->event_triggers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 last_updated = 2 [json_name = "lastUpdated"];
  if (this->_internal_last_updated() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_last_updated());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentEventConfiguration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgentEventConfiguration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentEventConfiguration::GetClassData() const { return &_class_data_; }

void AgentEventConfiguration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AgentEventConfiguration *>(to)->MergeFrom(
      static_cast<const AgentEventConfiguration &>(from));
}


void AgentEventConfiguration::MergeFrom(const AgentEventConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.AgentEventConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  event_triggers_.MergeFrom(from.event_triggers_);
  if (from._internal_last_updated() != 0) {
    _internal_set_last_updated(from._internal_last_updated());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentEventConfiguration::CopyFrom(const AgentEventConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.AgentEventConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentEventConfiguration::IsInitialized() const {
  return true;
}

void AgentEventConfiguration::InternalSwap(AgentEventConfiguration* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  event_triggers_.InternalSwap(&other->event_triggers_);
  swap(last_updated_, other->last_updated_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentEventConfiguration::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_getter, &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_once,
      file_level_metadata_protos_2fmodel_2fv1_2fevent_2eproto[2]);
}

// ===================================================================

class AgentEventTrigger::_Internal {
 public:
  static const ::v1::model::PresenceEventTriggerCondition& presence(const AgentEventTrigger* msg);
  static const ::v1::model::ThresholdEventTriggerCondition& threshold(const AgentEventTrigger* msg);
  static const ::v1::model::RegexEventTriggerCondition& regex(const AgentEventTrigger* msg);
  static const ::v1::model::BitsetEventTriggerCondition& bitset(const AgentEventTrigger* msg);
};

const ::v1::model::PresenceEventTriggerCondition&
AgentEventTrigger::_Internal::presence(const AgentEventTrigger* msg) {
  return *msg->condition_.presence_;
}
const ::v1::model::ThresholdEventTriggerCondition&
AgentEventTrigger::_Internal::threshold(const AgentEventTrigger* msg) {
  return *msg->condition_.threshold_;
}
const ::v1::model::RegexEventTriggerCondition&
AgentEventTrigger::_Internal::regex(const AgentEventTrigger* msg) {
  return *msg->condition_.regex_;
}
const ::v1::model::BitsetEventTriggerCondition&
AgentEventTrigger::_Internal::bitset(const AgentEventTrigger* msg) {
  return *msg->condition_.bitset_;
}
void AgentEventTrigger::set_allocated_presence(::v1::model::PresenceEventTriggerCondition* presence) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_condition();
  if (presence) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(presence);
    if (message_arena != submessage_arena) {
      presence = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, presence, submessage_arena);
    }
    set_has_presence();
    condition_.presence_ = presence;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.AgentEventTrigger.presence)
}
void AgentEventTrigger::set_allocated_threshold(::v1::model::ThresholdEventTriggerCondition* threshold) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_condition();
  if (threshold) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(threshold);
    if (message_arena != submessage_arena) {
      threshold = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, threshold, submessage_arena);
    }
    set_has_threshold();
    condition_.threshold_ = threshold;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.AgentEventTrigger.threshold)
}
void AgentEventTrigger::set_allocated_regex(::v1::model::RegexEventTriggerCondition* regex) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_condition();
  if (regex) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(regex);
    if (message_arena != submessage_arena) {
      regex = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, regex, submessage_arena);
    }
    set_has_regex();
    condition_.regex_ = regex;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.AgentEventTrigger.regex)
}
void AgentEventTrigger::set_allocated_bitset(::v1::model::BitsetEventTriggerCondition* bitset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_condition();
  if (bitset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(bitset);
    if (message_arena != submessage_arena) {
      bitset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bitset, submessage_arena);
    }
    set_has_bitset();
    condition_.bitset_ = bitset;
  }
  // @@protoc_insertion_point(field_set_allocated:v1.model.AgentEventTrigger.bitset)
}
AgentEventTrigger::AgentEventTrigger(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:v1.model.AgentEventTrigger)
}
AgentEventTrigger::AgentEventTrigger(const AgentEventTrigger& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(from._internal_id(), 
      GetArenaForAllocation());
  }
  stream_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    stream_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_stream().empty()) {
    stream_.Set(from._internal_stream(), 
      GetArenaForAllocation());
  }
  interval_ = from.interval_;
  clear_has_condition();
  switch (from.condition_case()) {
    case kPresence: {
      _internal_mutable_presence()->::v1::model::PresenceEventTriggerCondition::MergeFrom(from._internal_presence());
      break;
    }
    case kThreshold: {
      _internal_mutable_threshold()->::v1::model::ThresholdEventTriggerCondition::MergeFrom(from._internal_threshold());
      break;
    }
    case kRegex: {
      _internal_mutable_regex()->::v1::model::RegexEventTriggerCondition::MergeFrom(from._internal_regex());
      break;
    }
    case kBitset: {
      _internal_mutable_bitset()->::v1::model::BitsetEventTriggerCondition::MergeFrom(from._internal_bitset());
      break;
    }
    case CONDITION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:v1.model.AgentEventTrigger)
}

inline void AgentEventTrigger::SharedCtor() {
id_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
stream_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  stream_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
interval_ = int64_t{0};
clear_has_condition();
}

AgentEventTrigger::~AgentEventTrigger() {
  // @@protoc_insertion_point(destructor:v1.model.AgentEventTrigger)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AgentEventTrigger::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  id_.Destroy();
  stream_.Destroy();
  if (has_condition()) {
    clear_condition();
  }
}

void AgentEventTrigger::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgentEventTrigger::clear_condition() {
// @@protoc_insertion_point(one_of_clear_start:v1.model.AgentEventTrigger)
  switch (condition_case()) {
    case kPresence: {
      if (GetArenaForAllocation() == nullptr) {
        delete condition_.presence_;
      }
      break;
    }
    case kThreshold: {
      if (GetArenaForAllocation() == nullptr) {
        delete condition_.threshold_;
      }
      break;
    }
    case kRegex: {
      if (GetArenaForAllocation() == nullptr) {
        delete condition_.regex_;
      }
      break;
    }
    case kBitset: {
      if (GetArenaForAllocation() == nullptr) {
        delete condition_.bitset_;
      }
      break;
    }
    case CONDITION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONDITION_NOT_SET;
}


void AgentEventTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.AgentEventTrigger)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  stream_.ClearToEmpty();
  interval_ = int64_t{0};
  clear_condition();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentEventTrigger::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1 [json_name = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v1.model.AgentEventTrigger.id"));
        } else
          goto handle_unusual;
        continue;
      // string stream = 2 [json_name = "stream"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_stream();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v1.model.AgentEventTrigger.stream"));
        } else
          goto handle_unusual;
        continue;
      // int64 interval = 3 [json_name = "interval"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          interval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .v1.model.PresenceEventTriggerCondition presence = 4 [json_name = "presence"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_presence(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .v1.model.ThresholdEventTriggerCondition threshold = 5 [json_name = "threshold"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_threshold(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .v1.model.RegexEventTriggerCondition regex = 6 [json_name = "regex"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_regex(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .v1.model.BitsetEventTriggerCondition bitset = 7 [json_name = "bitset"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_bitset(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgentEventTrigger::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.AgentEventTrigger)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v1.model.AgentEventTrigger.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string stream = 2 [json_name = "stream"];
  if (!this->_internal_stream().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stream().data(), static_cast<int>(this->_internal_stream().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v1.model.AgentEventTrigger.stream");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_stream(), target);
  }

  // int64 interval = 3 [json_name = "interval"];
  if (this->_internal_interval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_interval(), target);
  }

  // .v1.model.PresenceEventTriggerCondition presence = 4 [json_name = "presence"];
  if (_internal_has_presence()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::presence(this),
        _Internal::presence(this).GetCachedSize(), target, stream);
  }

  // .v1.model.ThresholdEventTriggerCondition threshold = 5 [json_name = "threshold"];
  if (_internal_has_threshold()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::threshold(this),
        _Internal::threshold(this).GetCachedSize(), target, stream);
  }

  // .v1.model.RegexEventTriggerCondition regex = 6 [json_name = "regex"];
  if (_internal_has_regex()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::regex(this),
        _Internal::regex(this).GetCachedSize(), target, stream);
  }

  // .v1.model.BitsetEventTriggerCondition bitset = 7 [json_name = "bitset"];
  if (_internal_has_bitset()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::bitset(this),
        _Internal::bitset(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.AgentEventTrigger)
  return target;
}

size_t AgentEventTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.AgentEventTrigger)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1 [json_name = "id"];
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string stream = 2 [json_name = "stream"];
  if (!this->_internal_stream().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stream());
  }

  // int64 interval = 3 [json_name = "interval"];
  if (this->_internal_interval() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_interval());
  }

  switch (condition_case()) {
    // .v1.model.PresenceEventTriggerCondition presence = 4 [json_name = "presence"];
    case kPresence: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *condition_.presence_);
      break;
    }
    // .v1.model.ThresholdEventTriggerCondition threshold = 5 [json_name = "threshold"];
    case kThreshold: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *condition_.threshold_);
      break;
    }
    // .v1.model.RegexEventTriggerCondition regex = 6 [json_name = "regex"];
    case kRegex: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *condition_.regex_);
      break;
    }
    // .v1.model.BitsetEventTriggerCondition bitset = 7 [json_name = "bitset"];
    case kBitset: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *condition_.bitset_);
      break;
    }
    case CONDITION_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentEventTrigger::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgentEventTrigger::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentEventTrigger::GetClassData() const { return &_class_data_; }

void AgentEventTrigger::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AgentEventTrigger *>(to)->MergeFrom(
      static_cast<const AgentEventTrigger &>(from));
}


void AgentEventTrigger::MergeFrom(const AgentEventTrigger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.AgentEventTrigger)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (!from._internal_stream().empty()) {
    _internal_set_stream(from._internal_stream());
  }
  if (from._internal_interval() != 0) {
    _internal_set_interval(from._internal_interval());
  }
  switch (from.condition_case()) {
    case kPresence: {
      _internal_mutable_presence()->::v1::model::PresenceEventTriggerCondition::MergeFrom(from._internal_presence());
      break;
    }
    case kThreshold: {
      _internal_mutable_threshold()->::v1::model::ThresholdEventTriggerCondition::MergeFrom(from._internal_threshold());
      break;
    }
    case kRegex: {
      _internal_mutable_regex()->::v1::model::RegexEventTriggerCondition::MergeFrom(from._internal_regex());
      break;
    }
    case kBitset: {
      _internal_mutable_bitset()->::v1::model::BitsetEventTriggerCondition::MergeFrom(from._internal_bitset());
      break;
    }
    case CONDITION_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentEventTrigger::CopyFrom(const AgentEventTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.AgentEventTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentEventTrigger::IsInitialized() const {
  return true;
}

void AgentEventTrigger::InternalSwap(AgentEventTrigger* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &stream_, lhs_arena,
      &other->stream_, rhs_arena
  );
  swap(interval_, other->interval_);
  swap(condition_, other->condition_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentEventTrigger::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_getter, &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_once,
      file_level_metadata_protos_2fmodel_2fv1_2fevent_2eproto[3]);
}

// ===================================================================

class PresenceEventTriggerCondition::_Internal {
 public:
};

PresenceEventTriggerCondition::PresenceEventTriggerCondition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:v1.model.PresenceEventTriggerCondition)
}
PresenceEventTriggerCondition::PresenceEventTriggerCondition(const PresenceEventTriggerCondition& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:v1.model.PresenceEventTriggerCondition)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PresenceEventTriggerCondition::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PresenceEventTriggerCondition::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PresenceEventTriggerCondition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_getter, &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_once,
      file_level_metadata_protos_2fmodel_2fv1_2fevent_2eproto[4]);
}

// ===================================================================

class ThresholdEventTriggerCondition::_Internal {
 public:
};

ThresholdEventTriggerCondition::ThresholdEventTriggerCondition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:v1.model.ThresholdEventTriggerCondition)
}
ThresholdEventTriggerCondition::ThresholdEventTriggerCondition(const ThresholdEventTriggerCondition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    static_cast<size_t>(reinterpret_cast<char*>(&operator__) -
    reinterpret_cast<char*>(&value_)) + sizeof(operator__));
  // @@protoc_insertion_point(copy_constructor:v1.model.ThresholdEventTriggerCondition)
}

inline void ThresholdEventTriggerCondition::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&value_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&operator__) -
    reinterpret_cast<char*>(&value_)) + sizeof(operator__));
}

ThresholdEventTriggerCondition::~ThresholdEventTriggerCondition() {
  // @@protoc_insertion_point(destructor:v1.model.ThresholdEventTriggerCondition)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ThresholdEventTriggerCondition::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ThresholdEventTriggerCondition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ThresholdEventTriggerCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.ThresholdEventTriggerCondition)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operator__) -
      reinterpret_cast<char*>(&value_)) + sizeof(operator__));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ThresholdEventTriggerCondition::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double value = 1 [json_name = "value"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // .v1.model.ThresholdOperator operator = 2 [json_name = "operator"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_operator_(static_cast<::v1::model::ThresholdOperator>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ThresholdEventTriggerCondition::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.ThresholdEventTriggerCondition)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double value = 1 [json_name = "value"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_value = this->_internal_value();
  uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(1, this->_internal_value(), target);
  }

  // .v1.model.ThresholdOperator operator = 2 [json_name = "operator"];
  if (this->_internal_operator_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_operator_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.ThresholdEventTriggerCondition)
  return target;
}

size_t ThresholdEventTriggerCondition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.ThresholdEventTriggerCondition)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double value = 1 [json_name = "value"];
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_value = this->_internal_value();
  uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 1 + 8;
  }

  // .v1.model.ThresholdOperator operator = 2 [json_name = "operator"];
  if (this->_internal_operator_() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_operator_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ThresholdEventTriggerCondition::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ThresholdEventTriggerCondition::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ThresholdEventTriggerCondition::GetClassData() const { return &_class_data_; }

void ThresholdEventTriggerCondition::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ThresholdEventTriggerCondition *>(to)->MergeFrom(
      static_cast<const ThresholdEventTriggerCondition &>(from));
}


void ThresholdEventTriggerCondition::MergeFrom(const ThresholdEventTriggerCondition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.ThresholdEventTriggerCondition)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_value = from._internal_value();
  uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _internal_set_value(from._internal_value());
  }
  if (from._internal_operator_() != 0) {
    _internal_set_operator_(from._internal_operator_());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ThresholdEventTriggerCondition::CopyFrom(const ThresholdEventTriggerCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.ThresholdEventTriggerCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThresholdEventTriggerCondition::IsInitialized() const {
  return true;
}

void ThresholdEventTriggerCondition::InternalSwap(ThresholdEventTriggerCondition* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ThresholdEventTriggerCondition, operator__)
      + sizeof(ThresholdEventTriggerCondition::operator__)
      - PROTOBUF_FIELD_OFFSET(ThresholdEventTriggerCondition, value_)>(
          reinterpret_cast<char*>(&value_),
          reinterpret_cast<char*>(&other->value_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ThresholdEventTriggerCondition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_getter, &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_once,
      file_level_metadata_protos_2fmodel_2fv1_2fevent_2eproto[5]);
}

// ===================================================================

class RegexEventTriggerCondition::_Internal {
 public:
};

RegexEventTriggerCondition::RegexEventTriggerCondition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:v1.model.RegexEventTriggerCondition)
}
RegexEventTriggerCondition::RegexEventTriggerCondition(const RegexEventTriggerCondition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    value_.Set(from._internal_value(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:v1.model.RegexEventTriggerCondition)
}

inline void RegexEventTriggerCondition::SharedCtor() {
value_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  value_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RegexEventTriggerCondition::~RegexEventTriggerCondition() {
  // @@protoc_insertion_point(destructor:v1.model.RegexEventTriggerCondition)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RegexEventTriggerCondition::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  value_.Destroy();
}

void RegexEventTriggerCondition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RegexEventTriggerCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.RegexEventTriggerCondition)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegexEventTriggerCondition::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string value = 1 [json_name = "value"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v1.model.RegexEventTriggerCondition.value"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RegexEventTriggerCondition::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.RegexEventTriggerCondition)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1 [json_name = "value"];
  if (!this->_internal_value().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v1.model.RegexEventTriggerCondition.value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.RegexEventTriggerCondition)
  return target;
}

size_t RegexEventTriggerCondition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.RegexEventTriggerCondition)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 1 [json_name = "value"];
  if (!this->_internal_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RegexEventTriggerCondition::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RegexEventTriggerCondition::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RegexEventTriggerCondition::GetClassData() const { return &_class_data_; }

void RegexEventTriggerCondition::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RegexEventTriggerCondition *>(to)->MergeFrom(
      static_cast<const RegexEventTriggerCondition &>(from));
}


void RegexEventTriggerCondition::MergeFrom(const RegexEventTriggerCondition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.RegexEventTriggerCondition)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RegexEventTriggerCondition::CopyFrom(const RegexEventTriggerCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.RegexEventTriggerCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegexEventTriggerCondition::IsInitialized() const {
  return true;
}

void RegexEventTriggerCondition::InternalSwap(RegexEventTriggerCondition* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &value_, lhs_arena,
      &other->value_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RegexEventTriggerCondition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_getter, &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_once,
      file_level_metadata_protos_2fmodel_2fv1_2fevent_2eproto[6]);
}

// ===================================================================

class BitsetEventTriggerCondition::_Internal {
 public:
};

BitsetEventTriggerCondition::BitsetEventTriggerCondition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  bit_conditions_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:v1.model.BitsetEventTriggerCondition)
}
BitsetEventTriggerCondition::BitsetEventTriggerCondition(const BitsetEventTriggerCondition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      bit_conditions_(from.bit_conditions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  operator__ = from.operator__;
  // @@protoc_insertion_point(copy_constructor:v1.model.BitsetEventTriggerCondition)
}

inline void BitsetEventTriggerCondition::SharedCtor() {
operator__ = 0;
}

BitsetEventTriggerCondition::~BitsetEventTriggerCondition() {
  // @@protoc_insertion_point(destructor:v1.model.BitsetEventTriggerCondition)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BitsetEventTriggerCondition::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BitsetEventTriggerCondition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BitsetEventTriggerCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.BitsetEventTriggerCondition)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bit_conditions_.Clear();
  operator__ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BitsetEventTriggerCondition::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .v1.model.BitsetCondition bit_conditions = 1 [json_name = "bitConditions"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bit_conditions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .v1.model.BitsetOperator operator = 2 [json_name = "operator"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_operator_(static_cast<::v1::model::BitsetOperator>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BitsetEventTriggerCondition::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.BitsetEventTriggerCondition)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .v1.model.BitsetCondition bit_conditions = 1 [json_name = "bitConditions"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bit_conditions_size()); i < n; i++) {
    const auto& repfield = this->_internal_bit_conditions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .v1.model.BitsetOperator operator = 2 [json_name = "operator"];
  if (this->_internal_operator_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_operator_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.BitsetEventTriggerCondition)
  return target;
}

size_t BitsetEventTriggerCondition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.BitsetEventTriggerCondition)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .v1.model.BitsetCondition bit_conditions = 1 [json_name = "bitConditions"];
  total_size += 1UL * this->_internal_bit_conditions_size();
  for (const auto& msg : this->bit_conditions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .v1.model.BitsetOperator operator = 2 [json_name = "operator"];
  if (this->_internal_operator_() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_operator_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BitsetEventTriggerCondition::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BitsetEventTriggerCondition::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BitsetEventTriggerCondition::GetClassData() const { return &_class_data_; }

void BitsetEventTriggerCondition::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BitsetEventTriggerCondition *>(to)->MergeFrom(
      static_cast<const BitsetEventTriggerCondition &>(from));
}


void BitsetEventTriggerCondition::MergeFrom(const BitsetEventTriggerCondition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.BitsetEventTriggerCondition)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  bit_conditions_.MergeFrom(from.bit_conditions_);
  if (from._internal_operator_() != 0) {
    _internal_set_operator_(from._internal_operator_());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BitsetEventTriggerCondition::CopyFrom(const BitsetEventTriggerCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.BitsetEventTriggerCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BitsetEventTriggerCondition::IsInitialized() const {
  return true;
}

void BitsetEventTriggerCondition::InternalSwap(BitsetEventTriggerCondition* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  bit_conditions_.InternalSwap(&other->bit_conditions_);
  swap(operator__, other->operator__);
}

::PROTOBUF_NAMESPACE_ID::Metadata BitsetEventTriggerCondition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_getter, &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_once,
      file_level_metadata_protos_2fmodel_2fv1_2fevent_2eproto[7]);
}

// ===================================================================

class BitsetCondition::_Internal {
 public:
};

BitsetCondition::BitsetCondition(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:v1.model.BitsetCondition)
}
BitsetCondition::BitsetCondition(const BitsetCondition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(from._internal_key(), 
      GetArenaForAllocation());
  }
  ::memcpy(&true__, &from.true__,
    static_cast<size_t>(reinterpret_cast<char*>(&false__) -
    reinterpret_cast<char*>(&true__)) + sizeof(false__));
  // @@protoc_insertion_point(copy_constructor:v1.model.BitsetCondition)
}

inline void BitsetCondition::SharedCtor() {
key_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&true__) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&false__) -
    reinterpret_cast<char*>(&true__)) + sizeof(false__));
}

BitsetCondition::~BitsetCondition() {
  // @@protoc_insertion_point(destructor:v1.model.BitsetCondition)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BitsetCondition::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  key_.Destroy();
}

void BitsetCondition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BitsetCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:v1.model.BitsetCondition)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty();
  ::memset(&true__, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&false__) -
      reinterpret_cast<char*>(&true__)) + sizeof(false__));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BitsetCondition::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key = 1 [json_name = "key"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "v1.model.BitsetCondition.key"));
        } else
          goto handle_unusual;
        continue;
      // bool true = 2 [json_name = "true"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          true__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool false = 3 [json_name = "false"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          false__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BitsetCondition::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:v1.model.BitsetCondition)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "v1.model.BitsetCondition.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // bool true = 2 [json_name = "true"];
  if (this->_internal_true_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_true_(), target);
  }

  // bool false = 3 [json_name = "false"];
  if (this->_internal_false_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_false_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:v1.model.BitsetCondition)
  return target;
}

size_t BitsetCondition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:v1.model.BitsetCondition)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1 [json_name = "key"];
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // bool true = 2 [json_name = "true"];
  if (this->_internal_true_() != 0) {
    total_size += 1 + 1;
  }

  // bool false = 3 [json_name = "false"];
  if (this->_internal_false_() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BitsetCondition::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BitsetCondition::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BitsetCondition::GetClassData() const { return &_class_data_; }

void BitsetCondition::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BitsetCondition *>(to)->MergeFrom(
      static_cast<const BitsetCondition &>(from));
}


void BitsetCondition::MergeFrom(const BitsetCondition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:v1.model.BitsetCondition)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  if (from._internal_true_() != 0) {
    _internal_set_true_(from._internal_true_());
  }
  if (from._internal_false_() != 0) {
    _internal_set_false_(from._internal_false_());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BitsetCondition::CopyFrom(const BitsetCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:v1.model.BitsetCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BitsetCondition::IsInitialized() const {
  return true;
}

void BitsetCondition::InternalSwap(BitsetCondition* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BitsetCondition, false__)
      + sizeof(BitsetCondition::false__)
      - PROTOBUF_FIELD_OFFSET(BitsetCondition, true__)>(
          reinterpret_cast<char*>(&true__),
          reinterpret_cast<char*>(&other->true__));
}

::PROTOBUF_NAMESPACE_ID::Metadata BitsetCondition::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_getter, &descriptor_table_protos_2fmodel_2fv1_2fevent_2eproto_once,
      file_level_metadata_protos_2fmodel_2fv1_2fevent_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace model
}  // namespace v1
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::v1::model::Event_TagsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::v1::model::Event_TagsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v1::model::Event_TagsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::Event*
Arena::CreateMaybeMessage< ::v1::model::Event >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v1::model::Event >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::AgentEventConfiguration*
Arena::CreateMaybeMessage< ::v1::model::AgentEventConfiguration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v1::model::AgentEventConfiguration >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::AgentEventTrigger*
Arena::CreateMaybeMessage< ::v1::model::AgentEventTrigger >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v1::model::AgentEventTrigger >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::PresenceEventTriggerCondition*
Arena::CreateMaybeMessage< ::v1::model::PresenceEventTriggerCondition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v1::model::PresenceEventTriggerCondition >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::ThresholdEventTriggerCondition*
Arena::CreateMaybeMessage< ::v1::model::ThresholdEventTriggerCondition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v1::model::ThresholdEventTriggerCondition >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::RegexEventTriggerCondition*
Arena::CreateMaybeMessage< ::v1::model::RegexEventTriggerCondition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v1::model::RegexEventTriggerCondition >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::BitsetEventTriggerCondition*
Arena::CreateMaybeMessage< ::v1::model::BitsetEventTriggerCondition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v1::model::BitsetEventTriggerCondition >(arena);
}
template<> PROTOBUF_NOINLINE ::v1::model::BitsetCondition*
Arena::CreateMaybeMessage< ::v1::model::BitsetCondition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::v1::model::BitsetCondition >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
