// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: protos/agent/v1/agent.proto
#ifndef GRPC_protos_2fagent_2fv1_2fagent_2eproto__INCLUDED
#define GRPC_protos_2fagent_2fv1_2fagent_2eproto__INCLUDED

#include "protos/agent/v1/agent.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace v1 {
namespace agent {

class Agent final {
 public:
  static constexpr char const* service_full_name() {
    return "v1.agent.Agent";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    std::unique_ptr< ::grpc::ClientWriterInterface< ::v1::model::Datapoint>> StreamData(::grpc::ClientContext* context, ::v1::agent::StreamDataResponse* response) {
      return std::unique_ptr< ::grpc::ClientWriterInterface< ::v1::model::Datapoint>>(StreamDataRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::v1::model::Datapoint>> AsyncStreamData(::grpc::ClientContext* context, ::v1::agent::StreamDataResponse* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::v1::model::Datapoint>>(AsyncStreamDataRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::v1::model::Datapoint>> PrepareAsyncStreamData(::grpc::ClientContext* context, ::v1::agent::StreamDataResponse* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::v1::model::Datapoint>>(PrepareAsyncStreamDataRaw(context, response, cq));
    }
    virtual ::grpc::Status PostData(::grpc::ClientContext* context, const ::v1::model::Datapoint& request, ::v1::agent::PostDataResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostDataResponse>> AsyncPostData(::grpc::ClientContext* context, const ::v1::model::Datapoint& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostDataResponse>>(AsyncPostDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostDataResponse>> PrepareAsyncPostData(::grpc::ClientContext* context, const ::v1::model::Datapoint& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostDataResponse>>(PrepareAsyncPostDataRaw(context, request, cq));
    }
    virtual ::grpc::Status PostDataMulti(::grpc::ClientContext* context, const ::v1::agent::PostDataMultiRequest& request, ::v1::agent::PostDataMultiResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostDataMultiResponse>> AsyncPostDataMulti(::grpc::ClientContext* context, const ::v1::agent::PostDataMultiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostDataMultiResponse>>(AsyncPostDataMultiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostDataMultiResponse>> PrepareAsyncPostDataMulti(::grpc::ClientContext* context, const ::v1::agent::PostDataMultiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostDataMultiResponse>>(PrepareAsyncPostDataMultiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::v1::agent::GetTeleopControlDataStreamResponse>> GetTeleopControlDataStream(::grpc::ClientContext* context, const ::v1::agent::GetTeleopControlDataStreamRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::v1::agent::GetTeleopControlDataStreamResponse>>(GetTeleopControlDataStreamRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetTeleopControlDataStreamResponse>> AsyncGetTeleopControlDataStream(::grpc::ClientContext* context, const ::v1::agent::GetTeleopControlDataStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetTeleopControlDataStreamResponse>>(AsyncGetTeleopControlDataStreamRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetTeleopControlDataStreamResponse>> PrepareAsyncGetTeleopControlDataStream(::grpc::ClientContext* context, const ::v1::agent::GetTeleopControlDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetTeleopControlDataStreamResponse>>(PrepareAsyncGetTeleopControlDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::v1::agent::GetTeleopHeartbeatStreamResponse>> GetTeleopHeartbeatStream(::grpc::ClientContext* context, const ::v1::agent::GetTeleopHeartbeatStreamRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::v1::agent::GetTeleopHeartbeatStreamResponse>>(GetTeleopHeartbeatStreamRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetTeleopHeartbeatStreamResponse>> AsyncGetTeleopHeartbeatStream(::grpc::ClientContext* context, const ::v1::agent::GetTeleopHeartbeatStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetTeleopHeartbeatStreamResponse>>(AsyncGetTeleopHeartbeatStreamRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetTeleopHeartbeatStreamResponse>> PrepareAsyncGetTeleopHeartbeatStream(::grpc::ClientContext* context, const ::v1::agent::GetTeleopHeartbeatStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetTeleopHeartbeatStreamResponse>>(PrepareAsyncGetTeleopHeartbeatStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::v1::agent::GetTelemetryListenerStreamResponse>> GetTelemetryListenerStream(::grpc::ClientContext* context, const ::v1::agent::GetTelemetryListenerStreamRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::v1::agent::GetTelemetryListenerStreamResponse>>(GetTelemetryListenerStreamRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetTelemetryListenerStreamResponse>> AsyncGetTelemetryListenerStream(::grpc::ClientContext* context, const ::v1::agent::GetTelemetryListenerStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetTelemetryListenerStreamResponse>>(AsyncGetTelemetryListenerStreamRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetTelemetryListenerStreamResponse>> PrepareAsyncGetTelemetryListenerStream(::grpc::ClientContext* context, const ::v1::agent::GetTelemetryListenerStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetTelemetryListenerStreamResponse>>(PrepareAsyncGetTelemetryListenerStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::v1::agent::GetCustomDataChannelMessageStreamResponse>> GetCustomDataChannelMessageStream(::grpc::ClientContext* context, const ::v1::agent::GetCustomDataChannelMessageStreamRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::v1::agent::GetCustomDataChannelMessageStreamResponse>>(GetCustomDataChannelMessageStreamRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetCustomDataChannelMessageStreamResponse>> AsyncGetCustomDataChannelMessageStream(::grpc::ClientContext* context, const ::v1::agent::GetCustomDataChannelMessageStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetCustomDataChannelMessageStreamResponse>>(AsyncGetCustomDataChannelMessageStreamRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetCustomDataChannelMessageStreamResponse>> PrepareAsyncGetCustomDataChannelMessageStream(::grpc::ClientContext* context, const ::v1::agent::GetCustomDataChannelMessageStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetCustomDataChannelMessageStreamResponse>>(PrepareAsyncGetCustomDataChannelMessageStreamRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateEvent(::grpc::ClientContext* context, const ::v1::agent::CreateEventRequest& request, ::v1::agent::CreateEventResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::CreateEventResponse>> AsyncCreateEvent(::grpc::ClientContext* context, const ::v1::agent::CreateEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::CreateEventResponse>>(AsyncCreateEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::CreateEventResponse>> PrepareAsyncCreateEvent(::grpc::ClientContext* context, const ::v1::agent::CreateEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::CreateEventResponse>>(PrepareAsyncCreateEventRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateInterventionRequest(::grpc::ClientContext* context, const ::v1::model::InterventionRequest& request, ::v1::model::InterventionRequest* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::model::InterventionRequest>> AsyncCreateInterventionRequest(::grpc::ClientContext* context, const ::v1::model::InterventionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::model::InterventionRequest>>(AsyncCreateInterventionRequestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::model::InterventionRequest>> PrepareAsyncCreateInterventionRequest(::grpc::ClientContext* context, const ::v1::model::InterventionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::model::InterventionRequest>>(PrepareAsyncCreateInterventionRequestRaw(context, request, cq));
    }
    virtual ::grpc::Status GetInterventionRequest(::grpc::ClientContext* context, const ::v1::agent::GetInterventionRequestRequest& request, ::v1::model::InterventionRequest* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::model::InterventionRequest>> AsyncGetInterventionRequest(::grpc::ClientContext* context, const ::v1::agent::GetInterventionRequestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::model::InterventionRequest>>(AsyncGetInterventionRequestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::model::InterventionRequest>> PrepareAsyncGetInterventionRequest(::grpc::ClientContext* context, const ::v1::agent::GetInterventionRequestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::model::InterventionRequest>>(PrepareAsyncGetInterventionRequestRaw(context, request, cq));
    }
    virtual ::grpc::Status GetInterventionResponse(::grpc::ClientContext* context, const ::v1::agent::GetInterventionResponseRequest& request, ::v1::model::InterventionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::model::InterventionResponse>> AsyncGetInterventionResponse(::grpc::ClientContext* context, const ::v1::agent::GetInterventionResponseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::model::InterventionResponse>>(AsyncGetInterventionResponseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::model::InterventionResponse>> PrepareAsyncGetInterventionResponse(::grpc::ClientContext* context, const ::v1::agent::GetInterventionResponseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::model::InterventionResponse>>(PrepareAsyncGetInterventionResponseRaw(context, request, cq));
    }
    virtual ::grpc::Status GetStreamsConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetStreamsConfigurationRequest& request, ::v1::agent::GetStreamsConfigurationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetStreamsConfigurationResponse>> AsyncGetStreamsConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetStreamsConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetStreamsConfigurationResponse>>(AsyncGetStreamsConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetStreamsConfigurationResponse>> PrepareAsyncGetStreamsConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetStreamsConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetStreamsConfigurationResponse>>(PrepareAsyncGetStreamsConfigurationRaw(context, request, cq));
    }
    virtual ::grpc::Status GetApplicationConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetApplicationConfigurationRequest& request, ::v1::agent::GetApplicationConfigurationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetApplicationConfigurationResponse>> AsyncGetApplicationConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetApplicationConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetApplicationConfigurationResponse>>(AsyncGetApplicationConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetApplicationConfigurationResponse>> PrepareAsyncGetApplicationConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetApplicationConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetApplicationConfigurationResponse>>(PrepareAsyncGetApplicationConfigurationRaw(context, request, cq));
    }
    virtual ::grpc::Status GetConfigBlobData(::grpc::ClientContext* context, const ::v1::agent::GetConfigBlobDataRequest& request, ::v1::agent::GetConfigBlobDataResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetConfigBlobDataResponse>> AsyncGetConfigBlobData(::grpc::ClientContext* context, const ::v1::agent::GetConfigBlobDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetConfigBlobDataResponse>>(AsyncGetConfigBlobDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetConfigBlobDataResponse>> PrepareAsyncGetConfigBlobData(::grpc::ClientContext* context, const ::v1::agent::GetConfigBlobDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetConfigBlobDataResponse>>(PrepareAsyncGetConfigBlobDataRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAgentConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetAgentConfigurationRequest& request, ::v1::agent::GetAgentConfigurationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetAgentConfigurationResponse>> AsyncGetAgentConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetAgentConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetAgentConfigurationResponse>>(AsyncGetAgentConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetAgentConfigurationResponse>> PrepareAsyncGetAgentConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetAgentConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetAgentConfigurationResponse>>(PrepareAsyncGetAgentConfigurationRaw(context, request, cq));
    }
    virtual ::grpc::Status GetBufferMetadata(::grpc::ClientContext* context, const ::v1::agent::GetBufferMetadataRequest& request, ::v1::agent::GetBufferMetadataResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetBufferMetadataResponse>> AsyncGetBufferMetadata(::grpc::ClientContext* context, const ::v1::agent::GetBufferMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetBufferMetadataResponse>>(AsyncGetBufferMetadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetBufferMetadataResponse>> PrepareAsyncGetBufferMetadata(::grpc::ClientContext* context, const ::v1::agent::GetBufferMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetBufferMetadataResponse>>(PrepareAsyncGetBufferMetadataRaw(context, request, cq));
    }
    virtual ::grpc::Status Health(::grpc::ClientContext* context, const ::v1::agent::HealthRequest& request, ::v1::agent::HealthResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::HealthResponse>> AsyncHealth(::grpc::ClientContext* context, const ::v1::agent::HealthRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::HealthResponse>>(AsyncHealthRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::HealthResponse>> PrepareAsyncHealth(::grpc::ClientContext* context, const ::v1::agent::HealthRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::HealthResponse>>(PrepareAsyncHealthRaw(context, request, cq));
    }
    virtual ::grpc::Status GetCommandRequest(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestRequest& request, ::v1::agent::GetCommandRequestResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetCommandRequestResponse>> AsyncGetCommandRequest(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetCommandRequestResponse>>(AsyncGetCommandRequestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetCommandRequestResponse>> PrepareAsyncGetCommandRequest(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetCommandRequestResponse>>(PrepareAsyncGetCommandRequestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::v1::agent::GetCommandRequestStreamResponse>> GetCommandRequestStream(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestStreamRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::v1::agent::GetCommandRequestStreamResponse>>(GetCommandRequestStreamRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetCommandRequestStreamResponse>> AsyncGetCommandRequestStream(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetCommandRequestStreamResponse>>(AsyncGetCommandRequestStreamRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetCommandRequestStreamResponse>> PrepareAsyncGetCommandRequestStream(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetCommandRequestStreamResponse>>(PrepareAsyncGetCommandRequestStreamRaw(context, request, cq));
    }
    virtual ::grpc::Status SendCommandResponse(::grpc::ClientContext* context, const ::v1::agent::SendCommandResponseRequest& request, ::v1::agent::SendCommandResponseResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::SendCommandResponseResponse>> AsyncSendCommandResponse(::grpc::ClientContext* context, const ::v1::agent::SendCommandResponseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::SendCommandResponseResponse>>(AsyncSendCommandResponseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::SendCommandResponseResponse>> PrepareAsyncSendCommandResponse(::grpc::ClientContext* context, const ::v1::agent::SendCommandResponseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::SendCommandResponseResponse>>(PrepareAsyncSendCommandResponseRaw(context, request, cq));
    }
    virtual ::grpc::Status PostTransformFrame(::grpc::ClientContext* context, const ::v1::model::TransformFrame& request, ::v1::agent::PostTransformFrameResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostTransformFrameResponse>> AsyncPostTransformFrame(::grpc::ClientContext* context, const ::v1::model::TransformFrame& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostTransformFrameResponse>>(AsyncPostTransformFrameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostTransformFrameResponse>> PrepareAsyncPostTransformFrame(::grpc::ClientContext* context, const ::v1::model::TransformFrame& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostTransformFrameResponse>>(PrepareAsyncPostTransformFrameRaw(context, request, cq));
    }
    virtual ::grpc::Status SetBaseFrameID(::grpc::ClientContext* context, const ::v1::agent::SetBaseFrameIDRequest& request, ::v1::agent::SetBaseFrameIDResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::SetBaseFrameIDResponse>> AsyncSetBaseFrameID(::grpc::ClientContext* context, const ::v1::agent::SetBaseFrameIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::SetBaseFrameIDResponse>>(AsyncSetBaseFrameIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::SetBaseFrameIDResponse>> PrepareAsyncSetBaseFrameID(::grpc::ClientContext* context, const ::v1::agent::SetBaseFrameIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::SetBaseFrameIDResponse>>(PrepareAsyncSetBaseFrameIDRaw(context, request, cq));
    }
    virtual ::grpc::Status ClearTransformTree(::grpc::ClientContext* context, const ::v1::agent::ClearTransformTreeRequest& request, ::v1::agent::ClearTransformTreeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::ClearTransformTreeResponse>> AsyncClearTransformTree(::grpc::ClientContext* context, const ::v1::agent::ClearTransformTreeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::ClearTransformTreeResponse>>(AsyncClearTransformTreeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::ClearTransformTreeResponse>> PrepareAsyncClearTransformTree(::grpc::ClientContext* context, const ::v1::agent::ClearTransformTreeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::ClearTransformTreeResponse>>(PrepareAsyncClearTransformTreeRaw(context, request, cq));
    }
    virtual ::grpc::Status GetTeleopInfo(::grpc::ClientContext* context, const ::v1::agent::GetTeleopInfoRequest& request, ::v1::agent::GetTeleopInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetTeleopInfoResponse>> AsyncGetTeleopInfo(::grpc::ClientContext* context, const ::v1::agent::GetTeleopInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetTeleopInfoResponse>>(AsyncGetTeleopInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetTeleopInfoResponse>> PrepareAsyncGetTeleopInfo(::grpc::ClientContext* context, const ::v1::agent::GetTeleopInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetTeleopInfoResponse>>(PrepareAsyncGetTeleopInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status PostLanRtcOffer(::grpc::ClientContext* context, const ::v1::agent::PostLanRtcOfferRequest& request, ::v1::agent::PostLanRtcOfferResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostLanRtcOfferResponse>> AsyncPostLanRtcOffer(::grpc::ClientContext* context, const ::v1::agent::PostLanRtcOfferRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostLanRtcOfferResponse>>(AsyncPostLanRtcOfferRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostLanRtcOfferResponse>> PrepareAsyncPostLanRtcOffer(::grpc::ClientContext* context, const ::v1::agent::PostLanRtcOfferRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostLanRtcOfferResponse>>(PrepareAsyncPostLanRtcOfferRaw(context, request, cq));
    }
    virtual ::grpc::Status SendOnCustomDataChannel(::grpc::ClientContext* context, const ::v1::agent::SendOnCustomDataChannelRequest& request, ::v1::agent::SendOnCustomDataChannelResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::SendOnCustomDataChannelResponse>> AsyncSendOnCustomDataChannel(::grpc::ClientContext* context, const ::v1::agent::SendOnCustomDataChannelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::SendOnCustomDataChannelResponse>>(AsyncSendOnCustomDataChannelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::SendOnCustomDataChannelResponse>> PrepareAsyncSendOnCustomDataChannel(::grpc::ClientContext* context, const ::v1::agent::SendOnCustomDataChannelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::SendOnCustomDataChannelResponse>>(PrepareAsyncSendOnCustomDataChannelRaw(context, request, cq));
    }
    virtual ::grpc::Status PostGenericAPIRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::v1::agent::PostGenericAPIRequestResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostGenericAPIRequestResponse>> AsyncPostGenericAPIRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostGenericAPIRequestResponse>>(AsyncPostGenericAPIRequestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostGenericAPIRequestResponse>> PrepareAsyncPostGenericAPIRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostGenericAPIRequestResponse>>(PrepareAsyncPostGenericAPIRequestRaw(context, request, cq));
    }
    virtual ::grpc::Status PostGenericAPIUnbufferedRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::v1::agent::PostGenericAPIUnbufferedRequestResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostGenericAPIUnbufferedRequestResponse>> AsyncPostGenericAPIUnbufferedRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostGenericAPIUnbufferedRequestResponse>>(AsyncPostGenericAPIUnbufferedRequestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostGenericAPIUnbufferedRequestResponse>> PrepareAsyncPostGenericAPIUnbufferedRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostGenericAPIUnbufferedRequestResponse>>(PrepareAsyncPostGenericAPIUnbufferedRequestRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void StreamData(::grpc::ClientContext* context, ::v1::agent::StreamDataResponse* response, ::grpc::ClientWriteReactor< ::v1::model::Datapoint>* reactor) = 0;
      virtual void PostData(::grpc::ClientContext* context, const ::v1::model::Datapoint* request, ::v1::agent::PostDataResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PostData(::grpc::ClientContext* context, const ::v1::model::Datapoint* request, ::v1::agent::PostDataResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void PostDataMulti(::grpc::ClientContext* context, const ::v1::agent::PostDataMultiRequest* request, ::v1::agent::PostDataMultiResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PostDataMulti(::grpc::ClientContext* context, const ::v1::agent::PostDataMultiRequest* request, ::v1::agent::PostDataMultiResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetTeleopControlDataStream(::grpc::ClientContext* context, const ::v1::agent::GetTeleopControlDataStreamRequest* request, ::grpc::ClientReadReactor< ::v1::agent::GetTeleopControlDataStreamResponse>* reactor) = 0;
      virtual void GetTeleopHeartbeatStream(::grpc::ClientContext* context, const ::v1::agent::GetTeleopHeartbeatStreamRequest* request, ::grpc::ClientReadReactor< ::v1::agent::GetTeleopHeartbeatStreamResponse>* reactor) = 0;
      virtual void GetTelemetryListenerStream(::grpc::ClientContext* context, const ::v1::agent::GetTelemetryListenerStreamRequest* request, ::grpc::ClientReadReactor< ::v1::agent::GetTelemetryListenerStreamResponse>* reactor) = 0;
      virtual void GetCustomDataChannelMessageStream(::grpc::ClientContext* context, const ::v1::agent::GetCustomDataChannelMessageStreamRequest* request, ::grpc::ClientReadReactor< ::v1::agent::GetCustomDataChannelMessageStreamResponse>* reactor) = 0;
      virtual void CreateEvent(::grpc::ClientContext* context, const ::v1::agent::CreateEventRequest* request, ::v1::agent::CreateEventResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateEvent(::grpc::ClientContext* context, const ::v1::agent::CreateEventRequest* request, ::v1::agent::CreateEventResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CreateInterventionRequest(::grpc::ClientContext* context, const ::v1::model::InterventionRequest* request, ::v1::model::InterventionRequest* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateInterventionRequest(::grpc::ClientContext* context, const ::v1::model::InterventionRequest* request, ::v1::model::InterventionRequest* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetInterventionRequest(::grpc::ClientContext* context, const ::v1::agent::GetInterventionRequestRequest* request, ::v1::model::InterventionRequest* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetInterventionRequest(::grpc::ClientContext* context, const ::v1::agent::GetInterventionRequestRequest* request, ::v1::model::InterventionRequest* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetInterventionResponse(::grpc::ClientContext* context, const ::v1::agent::GetInterventionResponseRequest* request, ::v1::model::InterventionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetInterventionResponse(::grpc::ClientContext* context, const ::v1::agent::GetInterventionResponseRequest* request, ::v1::model::InterventionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetStreamsConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetStreamsConfigurationRequest* request, ::v1::agent::GetStreamsConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetStreamsConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetStreamsConfigurationRequest* request, ::v1::agent::GetStreamsConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetApplicationConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetApplicationConfigurationRequest* request, ::v1::agent::GetApplicationConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetApplicationConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetApplicationConfigurationRequest* request, ::v1::agent::GetApplicationConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetConfigBlobData(::grpc::ClientContext* context, const ::v1::agent::GetConfigBlobDataRequest* request, ::v1::agent::GetConfigBlobDataResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetConfigBlobData(::grpc::ClientContext* context, const ::v1::agent::GetConfigBlobDataRequest* request, ::v1::agent::GetConfigBlobDataResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetAgentConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetAgentConfigurationRequest* request, ::v1::agent::GetAgentConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAgentConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetAgentConfigurationRequest* request, ::v1::agent::GetAgentConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetBufferMetadata(::grpc::ClientContext* context, const ::v1::agent::GetBufferMetadataRequest* request, ::v1::agent::GetBufferMetadataResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetBufferMetadata(::grpc::ClientContext* context, const ::v1::agent::GetBufferMetadataRequest* request, ::v1::agent::GetBufferMetadataResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Health(::grpc::ClientContext* context, const ::v1::agent::HealthRequest* request, ::v1::agent::HealthResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Health(::grpc::ClientContext* context, const ::v1::agent::HealthRequest* request, ::v1::agent::HealthResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetCommandRequest(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestRequest* request, ::v1::agent::GetCommandRequestResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetCommandRequest(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestRequest* request, ::v1::agent::GetCommandRequestResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetCommandRequestStream(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestStreamRequest* request, ::grpc::ClientReadReactor< ::v1::agent::GetCommandRequestStreamResponse>* reactor) = 0;
      virtual void SendCommandResponse(::grpc::ClientContext* context, const ::v1::agent::SendCommandResponseRequest* request, ::v1::agent::SendCommandResponseResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendCommandResponse(::grpc::ClientContext* context, const ::v1::agent::SendCommandResponseRequest* request, ::v1::agent::SendCommandResponseResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void PostTransformFrame(::grpc::ClientContext* context, const ::v1::model::TransformFrame* request, ::v1::agent::PostTransformFrameResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PostTransformFrame(::grpc::ClientContext* context, const ::v1::model::TransformFrame* request, ::v1::agent::PostTransformFrameResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetBaseFrameID(::grpc::ClientContext* context, const ::v1::agent::SetBaseFrameIDRequest* request, ::v1::agent::SetBaseFrameIDResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetBaseFrameID(::grpc::ClientContext* context, const ::v1::agent::SetBaseFrameIDRequest* request, ::v1::agent::SetBaseFrameIDResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ClearTransformTree(::grpc::ClientContext* context, const ::v1::agent::ClearTransformTreeRequest* request, ::v1::agent::ClearTransformTreeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ClearTransformTree(::grpc::ClientContext* context, const ::v1::agent::ClearTransformTreeRequest* request, ::v1::agent::ClearTransformTreeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetTeleopInfo(::grpc::ClientContext* context, const ::v1::agent::GetTeleopInfoRequest* request, ::v1::agent::GetTeleopInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetTeleopInfo(::grpc::ClientContext* context, const ::v1::agent::GetTeleopInfoRequest* request, ::v1::agent::GetTeleopInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void PostLanRtcOffer(::grpc::ClientContext* context, const ::v1::agent::PostLanRtcOfferRequest* request, ::v1::agent::PostLanRtcOfferResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PostLanRtcOffer(::grpc::ClientContext* context, const ::v1::agent::PostLanRtcOfferRequest* request, ::v1::agent::PostLanRtcOfferResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SendOnCustomDataChannel(::grpc::ClientContext* context, const ::v1::agent::SendOnCustomDataChannelRequest* request, ::v1::agent::SendOnCustomDataChannelResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendOnCustomDataChannel(::grpc::ClientContext* context, const ::v1::agent::SendOnCustomDataChannelRequest* request, ::v1::agent::SendOnCustomDataChannelResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void PostGenericAPIRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint* request, ::v1::agent::PostGenericAPIRequestResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PostGenericAPIRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint* request, ::v1::agent::PostGenericAPIRequestResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void PostGenericAPIUnbufferedRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint* request, ::v1::agent::PostGenericAPIUnbufferedRequestResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PostGenericAPIUnbufferedRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint* request, ::v1::agent::PostGenericAPIUnbufferedRequestResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientWriterInterface< ::v1::model::Datapoint>* StreamDataRaw(::grpc::ClientContext* context, ::v1::agent::StreamDataResponse* response) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::v1::model::Datapoint>* AsyncStreamDataRaw(::grpc::ClientContext* context, ::v1::agent::StreamDataResponse* response, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::v1::model::Datapoint>* PrepareAsyncStreamDataRaw(::grpc::ClientContext* context, ::v1::agent::StreamDataResponse* response, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostDataResponse>* AsyncPostDataRaw(::grpc::ClientContext* context, const ::v1::model::Datapoint& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostDataResponse>* PrepareAsyncPostDataRaw(::grpc::ClientContext* context, const ::v1::model::Datapoint& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostDataMultiResponse>* AsyncPostDataMultiRaw(::grpc::ClientContext* context, const ::v1::agent::PostDataMultiRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostDataMultiResponse>* PrepareAsyncPostDataMultiRaw(::grpc::ClientContext* context, const ::v1::agent::PostDataMultiRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::v1::agent::GetTeleopControlDataStreamResponse>* GetTeleopControlDataStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetTeleopControlDataStreamRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetTeleopControlDataStreamResponse>* AsyncGetTeleopControlDataStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetTeleopControlDataStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetTeleopControlDataStreamResponse>* PrepareAsyncGetTeleopControlDataStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetTeleopControlDataStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::v1::agent::GetTeleopHeartbeatStreamResponse>* GetTeleopHeartbeatStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetTeleopHeartbeatStreamRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetTeleopHeartbeatStreamResponse>* AsyncGetTeleopHeartbeatStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetTeleopHeartbeatStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetTeleopHeartbeatStreamResponse>* PrepareAsyncGetTeleopHeartbeatStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetTeleopHeartbeatStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::v1::agent::GetTelemetryListenerStreamResponse>* GetTelemetryListenerStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetTelemetryListenerStreamRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetTelemetryListenerStreamResponse>* AsyncGetTelemetryListenerStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetTelemetryListenerStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetTelemetryListenerStreamResponse>* PrepareAsyncGetTelemetryListenerStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetTelemetryListenerStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::v1::agent::GetCustomDataChannelMessageStreamResponse>* GetCustomDataChannelMessageStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetCustomDataChannelMessageStreamRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetCustomDataChannelMessageStreamResponse>* AsyncGetCustomDataChannelMessageStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetCustomDataChannelMessageStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetCustomDataChannelMessageStreamResponse>* PrepareAsyncGetCustomDataChannelMessageStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetCustomDataChannelMessageStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::CreateEventResponse>* AsyncCreateEventRaw(::grpc::ClientContext* context, const ::v1::agent::CreateEventRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::CreateEventResponse>* PrepareAsyncCreateEventRaw(::grpc::ClientContext* context, const ::v1::agent::CreateEventRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::model::InterventionRequest>* AsyncCreateInterventionRequestRaw(::grpc::ClientContext* context, const ::v1::model::InterventionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::model::InterventionRequest>* PrepareAsyncCreateInterventionRequestRaw(::grpc::ClientContext* context, const ::v1::model::InterventionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::model::InterventionRequest>* AsyncGetInterventionRequestRaw(::grpc::ClientContext* context, const ::v1::agent::GetInterventionRequestRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::model::InterventionRequest>* PrepareAsyncGetInterventionRequestRaw(::grpc::ClientContext* context, const ::v1::agent::GetInterventionRequestRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::model::InterventionResponse>* AsyncGetInterventionResponseRaw(::grpc::ClientContext* context, const ::v1::agent::GetInterventionResponseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::model::InterventionResponse>* PrepareAsyncGetInterventionResponseRaw(::grpc::ClientContext* context, const ::v1::agent::GetInterventionResponseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetStreamsConfigurationResponse>* AsyncGetStreamsConfigurationRaw(::grpc::ClientContext* context, const ::v1::agent::GetStreamsConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetStreamsConfigurationResponse>* PrepareAsyncGetStreamsConfigurationRaw(::grpc::ClientContext* context, const ::v1::agent::GetStreamsConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetApplicationConfigurationResponse>* AsyncGetApplicationConfigurationRaw(::grpc::ClientContext* context, const ::v1::agent::GetApplicationConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetApplicationConfigurationResponse>* PrepareAsyncGetApplicationConfigurationRaw(::grpc::ClientContext* context, const ::v1::agent::GetApplicationConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetConfigBlobDataResponse>* AsyncGetConfigBlobDataRaw(::grpc::ClientContext* context, const ::v1::agent::GetConfigBlobDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetConfigBlobDataResponse>* PrepareAsyncGetConfigBlobDataRaw(::grpc::ClientContext* context, const ::v1::agent::GetConfigBlobDataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetAgentConfigurationResponse>* AsyncGetAgentConfigurationRaw(::grpc::ClientContext* context, const ::v1::agent::GetAgentConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetAgentConfigurationResponse>* PrepareAsyncGetAgentConfigurationRaw(::grpc::ClientContext* context, const ::v1::agent::GetAgentConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetBufferMetadataResponse>* AsyncGetBufferMetadataRaw(::grpc::ClientContext* context, const ::v1::agent::GetBufferMetadataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetBufferMetadataResponse>* PrepareAsyncGetBufferMetadataRaw(::grpc::ClientContext* context, const ::v1::agent::GetBufferMetadataRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::HealthResponse>* AsyncHealthRaw(::grpc::ClientContext* context, const ::v1::agent::HealthRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::HealthResponse>* PrepareAsyncHealthRaw(::grpc::ClientContext* context, const ::v1::agent::HealthRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetCommandRequestResponse>* AsyncGetCommandRequestRaw(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetCommandRequestResponse>* PrepareAsyncGetCommandRequestRaw(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::v1::agent::GetCommandRequestStreamResponse>* GetCommandRequestStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestStreamRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetCommandRequestStreamResponse>* AsyncGetCommandRequestStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::v1::agent::GetCommandRequestStreamResponse>* PrepareAsyncGetCommandRequestStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestStreamRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::SendCommandResponseResponse>* AsyncSendCommandResponseRaw(::grpc::ClientContext* context, const ::v1::agent::SendCommandResponseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::SendCommandResponseResponse>* PrepareAsyncSendCommandResponseRaw(::grpc::ClientContext* context, const ::v1::agent::SendCommandResponseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostTransformFrameResponse>* AsyncPostTransformFrameRaw(::grpc::ClientContext* context, const ::v1::model::TransformFrame& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostTransformFrameResponse>* PrepareAsyncPostTransformFrameRaw(::grpc::ClientContext* context, const ::v1::model::TransformFrame& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::SetBaseFrameIDResponse>* AsyncSetBaseFrameIDRaw(::grpc::ClientContext* context, const ::v1::agent::SetBaseFrameIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::SetBaseFrameIDResponse>* PrepareAsyncSetBaseFrameIDRaw(::grpc::ClientContext* context, const ::v1::agent::SetBaseFrameIDRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::ClearTransformTreeResponse>* AsyncClearTransformTreeRaw(::grpc::ClientContext* context, const ::v1::agent::ClearTransformTreeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::ClearTransformTreeResponse>* PrepareAsyncClearTransformTreeRaw(::grpc::ClientContext* context, const ::v1::agent::ClearTransformTreeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetTeleopInfoResponse>* AsyncGetTeleopInfoRaw(::grpc::ClientContext* context, const ::v1::agent::GetTeleopInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::GetTeleopInfoResponse>* PrepareAsyncGetTeleopInfoRaw(::grpc::ClientContext* context, const ::v1::agent::GetTeleopInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostLanRtcOfferResponse>* AsyncPostLanRtcOfferRaw(::grpc::ClientContext* context, const ::v1::agent::PostLanRtcOfferRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostLanRtcOfferResponse>* PrepareAsyncPostLanRtcOfferRaw(::grpc::ClientContext* context, const ::v1::agent::PostLanRtcOfferRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::SendOnCustomDataChannelResponse>* AsyncSendOnCustomDataChannelRaw(::grpc::ClientContext* context, const ::v1::agent::SendOnCustomDataChannelRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::SendOnCustomDataChannelResponse>* PrepareAsyncSendOnCustomDataChannelRaw(::grpc::ClientContext* context, const ::v1::agent::SendOnCustomDataChannelRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostGenericAPIRequestResponse>* AsyncPostGenericAPIRequestRaw(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostGenericAPIRequestResponse>* PrepareAsyncPostGenericAPIRequestRaw(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostGenericAPIUnbufferedRequestResponse>* AsyncPostGenericAPIUnbufferedRequestRaw(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::v1::agent::PostGenericAPIUnbufferedRequestResponse>* PrepareAsyncPostGenericAPIUnbufferedRequestRaw(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    std::unique_ptr< ::grpc::ClientWriter< ::v1::model::Datapoint>> StreamData(::grpc::ClientContext* context, ::v1::agent::StreamDataResponse* response) {
      return std::unique_ptr< ::grpc::ClientWriter< ::v1::model::Datapoint>>(StreamDataRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::v1::model::Datapoint>> AsyncStreamData(::grpc::ClientContext* context, ::v1::agent::StreamDataResponse* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::v1::model::Datapoint>>(AsyncStreamDataRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::v1::model::Datapoint>> PrepareAsyncStreamData(::grpc::ClientContext* context, ::v1::agent::StreamDataResponse* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::v1::model::Datapoint>>(PrepareAsyncStreamDataRaw(context, response, cq));
    }
    ::grpc::Status PostData(::grpc::ClientContext* context, const ::v1::model::Datapoint& request, ::v1::agent::PostDataResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostDataResponse>> AsyncPostData(::grpc::ClientContext* context, const ::v1::model::Datapoint& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostDataResponse>>(AsyncPostDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostDataResponse>> PrepareAsyncPostData(::grpc::ClientContext* context, const ::v1::model::Datapoint& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostDataResponse>>(PrepareAsyncPostDataRaw(context, request, cq));
    }
    ::grpc::Status PostDataMulti(::grpc::ClientContext* context, const ::v1::agent::PostDataMultiRequest& request, ::v1::agent::PostDataMultiResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostDataMultiResponse>> AsyncPostDataMulti(::grpc::ClientContext* context, const ::v1::agent::PostDataMultiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostDataMultiResponse>>(AsyncPostDataMultiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostDataMultiResponse>> PrepareAsyncPostDataMulti(::grpc::ClientContext* context, const ::v1::agent::PostDataMultiRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostDataMultiResponse>>(PrepareAsyncPostDataMultiRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::v1::agent::GetTeleopControlDataStreamResponse>> GetTeleopControlDataStream(::grpc::ClientContext* context, const ::v1::agent::GetTeleopControlDataStreamRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::v1::agent::GetTeleopControlDataStreamResponse>>(GetTeleopControlDataStreamRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetTeleopControlDataStreamResponse>> AsyncGetTeleopControlDataStream(::grpc::ClientContext* context, const ::v1::agent::GetTeleopControlDataStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetTeleopControlDataStreamResponse>>(AsyncGetTeleopControlDataStreamRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetTeleopControlDataStreamResponse>> PrepareAsyncGetTeleopControlDataStream(::grpc::ClientContext* context, const ::v1::agent::GetTeleopControlDataStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetTeleopControlDataStreamResponse>>(PrepareAsyncGetTeleopControlDataStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::v1::agent::GetTeleopHeartbeatStreamResponse>> GetTeleopHeartbeatStream(::grpc::ClientContext* context, const ::v1::agent::GetTeleopHeartbeatStreamRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::v1::agent::GetTeleopHeartbeatStreamResponse>>(GetTeleopHeartbeatStreamRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetTeleopHeartbeatStreamResponse>> AsyncGetTeleopHeartbeatStream(::grpc::ClientContext* context, const ::v1::agent::GetTeleopHeartbeatStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetTeleopHeartbeatStreamResponse>>(AsyncGetTeleopHeartbeatStreamRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetTeleopHeartbeatStreamResponse>> PrepareAsyncGetTeleopHeartbeatStream(::grpc::ClientContext* context, const ::v1::agent::GetTeleopHeartbeatStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetTeleopHeartbeatStreamResponse>>(PrepareAsyncGetTeleopHeartbeatStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::v1::agent::GetTelemetryListenerStreamResponse>> GetTelemetryListenerStream(::grpc::ClientContext* context, const ::v1::agent::GetTelemetryListenerStreamRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::v1::agent::GetTelemetryListenerStreamResponse>>(GetTelemetryListenerStreamRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetTelemetryListenerStreamResponse>> AsyncGetTelemetryListenerStream(::grpc::ClientContext* context, const ::v1::agent::GetTelemetryListenerStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetTelemetryListenerStreamResponse>>(AsyncGetTelemetryListenerStreamRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetTelemetryListenerStreamResponse>> PrepareAsyncGetTelemetryListenerStream(::grpc::ClientContext* context, const ::v1::agent::GetTelemetryListenerStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetTelemetryListenerStreamResponse>>(PrepareAsyncGetTelemetryListenerStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::v1::agent::GetCustomDataChannelMessageStreamResponse>> GetCustomDataChannelMessageStream(::grpc::ClientContext* context, const ::v1::agent::GetCustomDataChannelMessageStreamRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::v1::agent::GetCustomDataChannelMessageStreamResponse>>(GetCustomDataChannelMessageStreamRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetCustomDataChannelMessageStreamResponse>> AsyncGetCustomDataChannelMessageStream(::grpc::ClientContext* context, const ::v1::agent::GetCustomDataChannelMessageStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetCustomDataChannelMessageStreamResponse>>(AsyncGetCustomDataChannelMessageStreamRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetCustomDataChannelMessageStreamResponse>> PrepareAsyncGetCustomDataChannelMessageStream(::grpc::ClientContext* context, const ::v1::agent::GetCustomDataChannelMessageStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetCustomDataChannelMessageStreamResponse>>(PrepareAsyncGetCustomDataChannelMessageStreamRaw(context, request, cq));
    }
    ::grpc::Status CreateEvent(::grpc::ClientContext* context, const ::v1::agent::CreateEventRequest& request, ::v1::agent::CreateEventResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::CreateEventResponse>> AsyncCreateEvent(::grpc::ClientContext* context, const ::v1::agent::CreateEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::CreateEventResponse>>(AsyncCreateEventRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::CreateEventResponse>> PrepareAsyncCreateEvent(::grpc::ClientContext* context, const ::v1::agent::CreateEventRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::CreateEventResponse>>(PrepareAsyncCreateEventRaw(context, request, cq));
    }
    ::grpc::Status CreateInterventionRequest(::grpc::ClientContext* context, const ::v1::model::InterventionRequest& request, ::v1::model::InterventionRequest* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::model::InterventionRequest>> AsyncCreateInterventionRequest(::grpc::ClientContext* context, const ::v1::model::InterventionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::model::InterventionRequest>>(AsyncCreateInterventionRequestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::model::InterventionRequest>> PrepareAsyncCreateInterventionRequest(::grpc::ClientContext* context, const ::v1::model::InterventionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::model::InterventionRequest>>(PrepareAsyncCreateInterventionRequestRaw(context, request, cq));
    }
    ::grpc::Status GetInterventionRequest(::grpc::ClientContext* context, const ::v1::agent::GetInterventionRequestRequest& request, ::v1::model::InterventionRequest* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::model::InterventionRequest>> AsyncGetInterventionRequest(::grpc::ClientContext* context, const ::v1::agent::GetInterventionRequestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::model::InterventionRequest>>(AsyncGetInterventionRequestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::model::InterventionRequest>> PrepareAsyncGetInterventionRequest(::grpc::ClientContext* context, const ::v1::agent::GetInterventionRequestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::model::InterventionRequest>>(PrepareAsyncGetInterventionRequestRaw(context, request, cq));
    }
    ::grpc::Status GetInterventionResponse(::grpc::ClientContext* context, const ::v1::agent::GetInterventionResponseRequest& request, ::v1::model::InterventionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::model::InterventionResponse>> AsyncGetInterventionResponse(::grpc::ClientContext* context, const ::v1::agent::GetInterventionResponseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::model::InterventionResponse>>(AsyncGetInterventionResponseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::model::InterventionResponse>> PrepareAsyncGetInterventionResponse(::grpc::ClientContext* context, const ::v1::agent::GetInterventionResponseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::model::InterventionResponse>>(PrepareAsyncGetInterventionResponseRaw(context, request, cq));
    }
    ::grpc::Status GetStreamsConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetStreamsConfigurationRequest& request, ::v1::agent::GetStreamsConfigurationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetStreamsConfigurationResponse>> AsyncGetStreamsConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetStreamsConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetStreamsConfigurationResponse>>(AsyncGetStreamsConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetStreamsConfigurationResponse>> PrepareAsyncGetStreamsConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetStreamsConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetStreamsConfigurationResponse>>(PrepareAsyncGetStreamsConfigurationRaw(context, request, cq));
    }
    ::grpc::Status GetApplicationConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetApplicationConfigurationRequest& request, ::v1::agent::GetApplicationConfigurationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetApplicationConfigurationResponse>> AsyncGetApplicationConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetApplicationConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetApplicationConfigurationResponse>>(AsyncGetApplicationConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetApplicationConfigurationResponse>> PrepareAsyncGetApplicationConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetApplicationConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetApplicationConfigurationResponse>>(PrepareAsyncGetApplicationConfigurationRaw(context, request, cq));
    }
    ::grpc::Status GetConfigBlobData(::grpc::ClientContext* context, const ::v1::agent::GetConfigBlobDataRequest& request, ::v1::agent::GetConfigBlobDataResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetConfigBlobDataResponse>> AsyncGetConfigBlobData(::grpc::ClientContext* context, const ::v1::agent::GetConfigBlobDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetConfigBlobDataResponse>>(AsyncGetConfigBlobDataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetConfigBlobDataResponse>> PrepareAsyncGetConfigBlobData(::grpc::ClientContext* context, const ::v1::agent::GetConfigBlobDataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetConfigBlobDataResponse>>(PrepareAsyncGetConfigBlobDataRaw(context, request, cq));
    }
    ::grpc::Status GetAgentConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetAgentConfigurationRequest& request, ::v1::agent::GetAgentConfigurationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetAgentConfigurationResponse>> AsyncGetAgentConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetAgentConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetAgentConfigurationResponse>>(AsyncGetAgentConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetAgentConfigurationResponse>> PrepareAsyncGetAgentConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetAgentConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetAgentConfigurationResponse>>(PrepareAsyncGetAgentConfigurationRaw(context, request, cq));
    }
    ::grpc::Status GetBufferMetadata(::grpc::ClientContext* context, const ::v1::agent::GetBufferMetadataRequest& request, ::v1::agent::GetBufferMetadataResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetBufferMetadataResponse>> AsyncGetBufferMetadata(::grpc::ClientContext* context, const ::v1::agent::GetBufferMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetBufferMetadataResponse>>(AsyncGetBufferMetadataRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetBufferMetadataResponse>> PrepareAsyncGetBufferMetadata(::grpc::ClientContext* context, const ::v1::agent::GetBufferMetadataRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetBufferMetadataResponse>>(PrepareAsyncGetBufferMetadataRaw(context, request, cq));
    }
    ::grpc::Status Health(::grpc::ClientContext* context, const ::v1::agent::HealthRequest& request, ::v1::agent::HealthResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::HealthResponse>> AsyncHealth(::grpc::ClientContext* context, const ::v1::agent::HealthRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::HealthResponse>>(AsyncHealthRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::HealthResponse>> PrepareAsyncHealth(::grpc::ClientContext* context, const ::v1::agent::HealthRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::HealthResponse>>(PrepareAsyncHealthRaw(context, request, cq));
    }
    ::grpc::Status GetCommandRequest(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestRequest& request, ::v1::agent::GetCommandRequestResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetCommandRequestResponse>> AsyncGetCommandRequest(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetCommandRequestResponse>>(AsyncGetCommandRequestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetCommandRequestResponse>> PrepareAsyncGetCommandRequest(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetCommandRequestResponse>>(PrepareAsyncGetCommandRequestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::v1::agent::GetCommandRequestStreamResponse>> GetCommandRequestStream(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestStreamRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::v1::agent::GetCommandRequestStreamResponse>>(GetCommandRequestStreamRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetCommandRequestStreamResponse>> AsyncGetCommandRequestStream(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetCommandRequestStreamResponse>>(AsyncGetCommandRequestStreamRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetCommandRequestStreamResponse>> PrepareAsyncGetCommandRequestStream(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestStreamRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::v1::agent::GetCommandRequestStreamResponse>>(PrepareAsyncGetCommandRequestStreamRaw(context, request, cq));
    }
    ::grpc::Status SendCommandResponse(::grpc::ClientContext* context, const ::v1::agent::SendCommandResponseRequest& request, ::v1::agent::SendCommandResponseResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::SendCommandResponseResponse>> AsyncSendCommandResponse(::grpc::ClientContext* context, const ::v1::agent::SendCommandResponseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::SendCommandResponseResponse>>(AsyncSendCommandResponseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::SendCommandResponseResponse>> PrepareAsyncSendCommandResponse(::grpc::ClientContext* context, const ::v1::agent::SendCommandResponseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::SendCommandResponseResponse>>(PrepareAsyncSendCommandResponseRaw(context, request, cq));
    }
    ::grpc::Status PostTransformFrame(::grpc::ClientContext* context, const ::v1::model::TransformFrame& request, ::v1::agent::PostTransformFrameResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostTransformFrameResponse>> AsyncPostTransformFrame(::grpc::ClientContext* context, const ::v1::model::TransformFrame& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostTransformFrameResponse>>(AsyncPostTransformFrameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostTransformFrameResponse>> PrepareAsyncPostTransformFrame(::grpc::ClientContext* context, const ::v1::model::TransformFrame& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostTransformFrameResponse>>(PrepareAsyncPostTransformFrameRaw(context, request, cq));
    }
    ::grpc::Status SetBaseFrameID(::grpc::ClientContext* context, const ::v1::agent::SetBaseFrameIDRequest& request, ::v1::agent::SetBaseFrameIDResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::SetBaseFrameIDResponse>> AsyncSetBaseFrameID(::grpc::ClientContext* context, const ::v1::agent::SetBaseFrameIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::SetBaseFrameIDResponse>>(AsyncSetBaseFrameIDRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::SetBaseFrameIDResponse>> PrepareAsyncSetBaseFrameID(::grpc::ClientContext* context, const ::v1::agent::SetBaseFrameIDRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::SetBaseFrameIDResponse>>(PrepareAsyncSetBaseFrameIDRaw(context, request, cq));
    }
    ::grpc::Status ClearTransformTree(::grpc::ClientContext* context, const ::v1::agent::ClearTransformTreeRequest& request, ::v1::agent::ClearTransformTreeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::ClearTransformTreeResponse>> AsyncClearTransformTree(::grpc::ClientContext* context, const ::v1::agent::ClearTransformTreeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::ClearTransformTreeResponse>>(AsyncClearTransformTreeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::ClearTransformTreeResponse>> PrepareAsyncClearTransformTree(::grpc::ClientContext* context, const ::v1::agent::ClearTransformTreeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::ClearTransformTreeResponse>>(PrepareAsyncClearTransformTreeRaw(context, request, cq));
    }
    ::grpc::Status GetTeleopInfo(::grpc::ClientContext* context, const ::v1::agent::GetTeleopInfoRequest& request, ::v1::agent::GetTeleopInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetTeleopInfoResponse>> AsyncGetTeleopInfo(::grpc::ClientContext* context, const ::v1::agent::GetTeleopInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetTeleopInfoResponse>>(AsyncGetTeleopInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetTeleopInfoResponse>> PrepareAsyncGetTeleopInfo(::grpc::ClientContext* context, const ::v1::agent::GetTeleopInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::GetTeleopInfoResponse>>(PrepareAsyncGetTeleopInfoRaw(context, request, cq));
    }
    ::grpc::Status PostLanRtcOffer(::grpc::ClientContext* context, const ::v1::agent::PostLanRtcOfferRequest& request, ::v1::agent::PostLanRtcOfferResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostLanRtcOfferResponse>> AsyncPostLanRtcOffer(::grpc::ClientContext* context, const ::v1::agent::PostLanRtcOfferRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostLanRtcOfferResponse>>(AsyncPostLanRtcOfferRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostLanRtcOfferResponse>> PrepareAsyncPostLanRtcOffer(::grpc::ClientContext* context, const ::v1::agent::PostLanRtcOfferRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostLanRtcOfferResponse>>(PrepareAsyncPostLanRtcOfferRaw(context, request, cq));
    }
    ::grpc::Status SendOnCustomDataChannel(::grpc::ClientContext* context, const ::v1::agent::SendOnCustomDataChannelRequest& request, ::v1::agent::SendOnCustomDataChannelResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::SendOnCustomDataChannelResponse>> AsyncSendOnCustomDataChannel(::grpc::ClientContext* context, const ::v1::agent::SendOnCustomDataChannelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::SendOnCustomDataChannelResponse>>(AsyncSendOnCustomDataChannelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::SendOnCustomDataChannelResponse>> PrepareAsyncSendOnCustomDataChannel(::grpc::ClientContext* context, const ::v1::agent::SendOnCustomDataChannelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::SendOnCustomDataChannelResponse>>(PrepareAsyncSendOnCustomDataChannelRaw(context, request, cq));
    }
    ::grpc::Status PostGenericAPIRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::v1::agent::PostGenericAPIRequestResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostGenericAPIRequestResponse>> AsyncPostGenericAPIRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostGenericAPIRequestResponse>>(AsyncPostGenericAPIRequestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostGenericAPIRequestResponse>> PrepareAsyncPostGenericAPIRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostGenericAPIRequestResponse>>(PrepareAsyncPostGenericAPIRequestRaw(context, request, cq));
    }
    ::grpc::Status PostGenericAPIUnbufferedRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::v1::agent::PostGenericAPIUnbufferedRequestResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostGenericAPIUnbufferedRequestResponse>> AsyncPostGenericAPIUnbufferedRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostGenericAPIUnbufferedRequestResponse>>(AsyncPostGenericAPIUnbufferedRequestRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostGenericAPIUnbufferedRequestResponse>> PrepareAsyncPostGenericAPIUnbufferedRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::v1::agent::PostGenericAPIUnbufferedRequestResponse>>(PrepareAsyncPostGenericAPIUnbufferedRequestRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void StreamData(::grpc::ClientContext* context, ::v1::agent::StreamDataResponse* response, ::grpc::ClientWriteReactor< ::v1::model::Datapoint>* reactor) override;
      void PostData(::grpc::ClientContext* context, const ::v1::model::Datapoint* request, ::v1::agent::PostDataResponse* response, std::function<void(::grpc::Status)>) override;
      void PostData(::grpc::ClientContext* context, const ::v1::model::Datapoint* request, ::v1::agent::PostDataResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PostDataMulti(::grpc::ClientContext* context, const ::v1::agent::PostDataMultiRequest* request, ::v1::agent::PostDataMultiResponse* response, std::function<void(::grpc::Status)>) override;
      void PostDataMulti(::grpc::ClientContext* context, const ::v1::agent::PostDataMultiRequest* request, ::v1::agent::PostDataMultiResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetTeleopControlDataStream(::grpc::ClientContext* context, const ::v1::agent::GetTeleopControlDataStreamRequest* request, ::grpc::ClientReadReactor< ::v1::agent::GetTeleopControlDataStreamResponse>* reactor) override;
      void GetTeleopHeartbeatStream(::grpc::ClientContext* context, const ::v1::agent::GetTeleopHeartbeatStreamRequest* request, ::grpc::ClientReadReactor< ::v1::agent::GetTeleopHeartbeatStreamResponse>* reactor) override;
      void GetTelemetryListenerStream(::grpc::ClientContext* context, const ::v1::agent::GetTelemetryListenerStreamRequest* request, ::grpc::ClientReadReactor< ::v1::agent::GetTelemetryListenerStreamResponse>* reactor) override;
      void GetCustomDataChannelMessageStream(::grpc::ClientContext* context, const ::v1::agent::GetCustomDataChannelMessageStreamRequest* request, ::grpc::ClientReadReactor< ::v1::agent::GetCustomDataChannelMessageStreamResponse>* reactor) override;
      void CreateEvent(::grpc::ClientContext* context, const ::v1::agent::CreateEventRequest* request, ::v1::agent::CreateEventResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateEvent(::grpc::ClientContext* context, const ::v1::agent::CreateEventRequest* request, ::v1::agent::CreateEventResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateInterventionRequest(::grpc::ClientContext* context, const ::v1::model::InterventionRequest* request, ::v1::model::InterventionRequest* response, std::function<void(::grpc::Status)>) override;
      void CreateInterventionRequest(::grpc::ClientContext* context, const ::v1::model::InterventionRequest* request, ::v1::model::InterventionRequest* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetInterventionRequest(::grpc::ClientContext* context, const ::v1::agent::GetInterventionRequestRequest* request, ::v1::model::InterventionRequest* response, std::function<void(::grpc::Status)>) override;
      void GetInterventionRequest(::grpc::ClientContext* context, const ::v1::agent::GetInterventionRequestRequest* request, ::v1::model::InterventionRequest* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetInterventionResponse(::grpc::ClientContext* context, const ::v1::agent::GetInterventionResponseRequest* request, ::v1::model::InterventionResponse* response, std::function<void(::grpc::Status)>) override;
      void GetInterventionResponse(::grpc::ClientContext* context, const ::v1::agent::GetInterventionResponseRequest* request, ::v1::model::InterventionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetStreamsConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetStreamsConfigurationRequest* request, ::v1::agent::GetStreamsConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      void GetStreamsConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetStreamsConfigurationRequest* request, ::v1::agent::GetStreamsConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetApplicationConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetApplicationConfigurationRequest* request, ::v1::agent::GetApplicationConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      void GetApplicationConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetApplicationConfigurationRequest* request, ::v1::agent::GetApplicationConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetConfigBlobData(::grpc::ClientContext* context, const ::v1::agent::GetConfigBlobDataRequest* request, ::v1::agent::GetConfigBlobDataResponse* response, std::function<void(::grpc::Status)>) override;
      void GetConfigBlobData(::grpc::ClientContext* context, const ::v1::agent::GetConfigBlobDataRequest* request, ::v1::agent::GetConfigBlobDataResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetAgentConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetAgentConfigurationRequest* request, ::v1::agent::GetAgentConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      void GetAgentConfiguration(::grpc::ClientContext* context, const ::v1::agent::GetAgentConfigurationRequest* request, ::v1::agent::GetAgentConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetBufferMetadata(::grpc::ClientContext* context, const ::v1::agent::GetBufferMetadataRequest* request, ::v1::agent::GetBufferMetadataResponse* response, std::function<void(::grpc::Status)>) override;
      void GetBufferMetadata(::grpc::ClientContext* context, const ::v1::agent::GetBufferMetadataRequest* request, ::v1::agent::GetBufferMetadataResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Health(::grpc::ClientContext* context, const ::v1::agent::HealthRequest* request, ::v1::agent::HealthResponse* response, std::function<void(::grpc::Status)>) override;
      void Health(::grpc::ClientContext* context, const ::v1::agent::HealthRequest* request, ::v1::agent::HealthResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetCommandRequest(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestRequest* request, ::v1::agent::GetCommandRequestResponse* response, std::function<void(::grpc::Status)>) override;
      void GetCommandRequest(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestRequest* request, ::v1::agent::GetCommandRequestResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetCommandRequestStream(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestStreamRequest* request, ::grpc::ClientReadReactor< ::v1::agent::GetCommandRequestStreamResponse>* reactor) override;
      void SendCommandResponse(::grpc::ClientContext* context, const ::v1::agent::SendCommandResponseRequest* request, ::v1::agent::SendCommandResponseResponse* response, std::function<void(::grpc::Status)>) override;
      void SendCommandResponse(::grpc::ClientContext* context, const ::v1::agent::SendCommandResponseRequest* request, ::v1::agent::SendCommandResponseResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PostTransformFrame(::grpc::ClientContext* context, const ::v1::model::TransformFrame* request, ::v1::agent::PostTransformFrameResponse* response, std::function<void(::grpc::Status)>) override;
      void PostTransformFrame(::grpc::ClientContext* context, const ::v1::model::TransformFrame* request, ::v1::agent::PostTransformFrameResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetBaseFrameID(::grpc::ClientContext* context, const ::v1::agent::SetBaseFrameIDRequest* request, ::v1::agent::SetBaseFrameIDResponse* response, std::function<void(::grpc::Status)>) override;
      void SetBaseFrameID(::grpc::ClientContext* context, const ::v1::agent::SetBaseFrameIDRequest* request, ::v1::agent::SetBaseFrameIDResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ClearTransformTree(::grpc::ClientContext* context, const ::v1::agent::ClearTransformTreeRequest* request, ::v1::agent::ClearTransformTreeResponse* response, std::function<void(::grpc::Status)>) override;
      void ClearTransformTree(::grpc::ClientContext* context, const ::v1::agent::ClearTransformTreeRequest* request, ::v1::agent::ClearTransformTreeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetTeleopInfo(::grpc::ClientContext* context, const ::v1::agent::GetTeleopInfoRequest* request, ::v1::agent::GetTeleopInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void GetTeleopInfo(::grpc::ClientContext* context, const ::v1::agent::GetTeleopInfoRequest* request, ::v1::agent::GetTeleopInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PostLanRtcOffer(::grpc::ClientContext* context, const ::v1::agent::PostLanRtcOfferRequest* request, ::v1::agent::PostLanRtcOfferResponse* response, std::function<void(::grpc::Status)>) override;
      void PostLanRtcOffer(::grpc::ClientContext* context, const ::v1::agent::PostLanRtcOfferRequest* request, ::v1::agent::PostLanRtcOfferResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendOnCustomDataChannel(::grpc::ClientContext* context, const ::v1::agent::SendOnCustomDataChannelRequest* request, ::v1::agent::SendOnCustomDataChannelResponse* response, std::function<void(::grpc::Status)>) override;
      void SendOnCustomDataChannel(::grpc::ClientContext* context, const ::v1::agent::SendOnCustomDataChannelRequest* request, ::v1::agent::SendOnCustomDataChannelResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PostGenericAPIRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint* request, ::v1::agent::PostGenericAPIRequestResponse* response, std::function<void(::grpc::Status)>) override;
      void PostGenericAPIRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint* request, ::v1::agent::PostGenericAPIRequestResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PostGenericAPIUnbufferedRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint* request, ::v1::agent::PostGenericAPIUnbufferedRequestResponse* response, std::function<void(::grpc::Status)>) override;
      void PostGenericAPIUnbufferedRequest(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint* request, ::v1::agent::PostGenericAPIUnbufferedRequestResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientWriter< ::v1::model::Datapoint>* StreamDataRaw(::grpc::ClientContext* context, ::v1::agent::StreamDataResponse* response) override;
    ::grpc::ClientAsyncWriter< ::v1::model::Datapoint>* AsyncStreamDataRaw(::grpc::ClientContext* context, ::v1::agent::StreamDataResponse* response, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncWriter< ::v1::model::Datapoint>* PrepareAsyncStreamDataRaw(::grpc::ClientContext* context, ::v1::agent::StreamDataResponse* response, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::PostDataResponse>* AsyncPostDataRaw(::grpc::ClientContext* context, const ::v1::model::Datapoint& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::PostDataResponse>* PrepareAsyncPostDataRaw(::grpc::ClientContext* context, const ::v1::model::Datapoint& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::PostDataMultiResponse>* AsyncPostDataMultiRaw(::grpc::ClientContext* context, const ::v1::agent::PostDataMultiRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::PostDataMultiResponse>* PrepareAsyncPostDataMultiRaw(::grpc::ClientContext* context, const ::v1::agent::PostDataMultiRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::v1::agent::GetTeleopControlDataStreamResponse>* GetTeleopControlDataStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetTeleopControlDataStreamRequest& request) override;
    ::grpc::ClientAsyncReader< ::v1::agent::GetTeleopControlDataStreamResponse>* AsyncGetTeleopControlDataStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetTeleopControlDataStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::v1::agent::GetTeleopControlDataStreamResponse>* PrepareAsyncGetTeleopControlDataStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetTeleopControlDataStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::v1::agent::GetTeleopHeartbeatStreamResponse>* GetTeleopHeartbeatStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetTeleopHeartbeatStreamRequest& request) override;
    ::grpc::ClientAsyncReader< ::v1::agent::GetTeleopHeartbeatStreamResponse>* AsyncGetTeleopHeartbeatStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetTeleopHeartbeatStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::v1::agent::GetTeleopHeartbeatStreamResponse>* PrepareAsyncGetTeleopHeartbeatStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetTeleopHeartbeatStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::v1::agent::GetTelemetryListenerStreamResponse>* GetTelemetryListenerStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetTelemetryListenerStreamRequest& request) override;
    ::grpc::ClientAsyncReader< ::v1::agent::GetTelemetryListenerStreamResponse>* AsyncGetTelemetryListenerStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetTelemetryListenerStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::v1::agent::GetTelemetryListenerStreamResponse>* PrepareAsyncGetTelemetryListenerStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetTelemetryListenerStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::v1::agent::GetCustomDataChannelMessageStreamResponse>* GetCustomDataChannelMessageStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetCustomDataChannelMessageStreamRequest& request) override;
    ::grpc::ClientAsyncReader< ::v1::agent::GetCustomDataChannelMessageStreamResponse>* AsyncGetCustomDataChannelMessageStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetCustomDataChannelMessageStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::v1::agent::GetCustomDataChannelMessageStreamResponse>* PrepareAsyncGetCustomDataChannelMessageStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetCustomDataChannelMessageStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::CreateEventResponse>* AsyncCreateEventRaw(::grpc::ClientContext* context, const ::v1::agent::CreateEventRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::CreateEventResponse>* PrepareAsyncCreateEventRaw(::grpc::ClientContext* context, const ::v1::agent::CreateEventRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::model::InterventionRequest>* AsyncCreateInterventionRequestRaw(::grpc::ClientContext* context, const ::v1::model::InterventionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::model::InterventionRequest>* PrepareAsyncCreateInterventionRequestRaw(::grpc::ClientContext* context, const ::v1::model::InterventionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::model::InterventionRequest>* AsyncGetInterventionRequestRaw(::grpc::ClientContext* context, const ::v1::agent::GetInterventionRequestRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::model::InterventionRequest>* PrepareAsyncGetInterventionRequestRaw(::grpc::ClientContext* context, const ::v1::agent::GetInterventionRequestRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::model::InterventionResponse>* AsyncGetInterventionResponseRaw(::grpc::ClientContext* context, const ::v1::agent::GetInterventionResponseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::model::InterventionResponse>* PrepareAsyncGetInterventionResponseRaw(::grpc::ClientContext* context, const ::v1::agent::GetInterventionResponseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::GetStreamsConfigurationResponse>* AsyncGetStreamsConfigurationRaw(::grpc::ClientContext* context, const ::v1::agent::GetStreamsConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::GetStreamsConfigurationResponse>* PrepareAsyncGetStreamsConfigurationRaw(::grpc::ClientContext* context, const ::v1::agent::GetStreamsConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::GetApplicationConfigurationResponse>* AsyncGetApplicationConfigurationRaw(::grpc::ClientContext* context, const ::v1::agent::GetApplicationConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::GetApplicationConfigurationResponse>* PrepareAsyncGetApplicationConfigurationRaw(::grpc::ClientContext* context, const ::v1::agent::GetApplicationConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::GetConfigBlobDataResponse>* AsyncGetConfigBlobDataRaw(::grpc::ClientContext* context, const ::v1::agent::GetConfigBlobDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::GetConfigBlobDataResponse>* PrepareAsyncGetConfigBlobDataRaw(::grpc::ClientContext* context, const ::v1::agent::GetConfigBlobDataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::GetAgentConfigurationResponse>* AsyncGetAgentConfigurationRaw(::grpc::ClientContext* context, const ::v1::agent::GetAgentConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::GetAgentConfigurationResponse>* PrepareAsyncGetAgentConfigurationRaw(::grpc::ClientContext* context, const ::v1::agent::GetAgentConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::GetBufferMetadataResponse>* AsyncGetBufferMetadataRaw(::grpc::ClientContext* context, const ::v1::agent::GetBufferMetadataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::GetBufferMetadataResponse>* PrepareAsyncGetBufferMetadataRaw(::grpc::ClientContext* context, const ::v1::agent::GetBufferMetadataRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::HealthResponse>* AsyncHealthRaw(::grpc::ClientContext* context, const ::v1::agent::HealthRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::HealthResponse>* PrepareAsyncHealthRaw(::grpc::ClientContext* context, const ::v1::agent::HealthRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::GetCommandRequestResponse>* AsyncGetCommandRequestRaw(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::GetCommandRequestResponse>* PrepareAsyncGetCommandRequestRaw(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::v1::agent::GetCommandRequestStreamResponse>* GetCommandRequestStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestStreamRequest& request) override;
    ::grpc::ClientAsyncReader< ::v1::agent::GetCommandRequestStreamResponse>* AsyncGetCommandRequestStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestStreamRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::v1::agent::GetCommandRequestStreamResponse>* PrepareAsyncGetCommandRequestStreamRaw(::grpc::ClientContext* context, const ::v1::agent::GetCommandRequestStreamRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::SendCommandResponseResponse>* AsyncSendCommandResponseRaw(::grpc::ClientContext* context, const ::v1::agent::SendCommandResponseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::SendCommandResponseResponse>* PrepareAsyncSendCommandResponseRaw(::grpc::ClientContext* context, const ::v1::agent::SendCommandResponseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::PostTransformFrameResponse>* AsyncPostTransformFrameRaw(::grpc::ClientContext* context, const ::v1::model::TransformFrame& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::PostTransformFrameResponse>* PrepareAsyncPostTransformFrameRaw(::grpc::ClientContext* context, const ::v1::model::TransformFrame& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::SetBaseFrameIDResponse>* AsyncSetBaseFrameIDRaw(::grpc::ClientContext* context, const ::v1::agent::SetBaseFrameIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::SetBaseFrameIDResponse>* PrepareAsyncSetBaseFrameIDRaw(::grpc::ClientContext* context, const ::v1::agent::SetBaseFrameIDRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::ClearTransformTreeResponse>* AsyncClearTransformTreeRaw(::grpc::ClientContext* context, const ::v1::agent::ClearTransformTreeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::ClearTransformTreeResponse>* PrepareAsyncClearTransformTreeRaw(::grpc::ClientContext* context, const ::v1::agent::ClearTransformTreeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::GetTeleopInfoResponse>* AsyncGetTeleopInfoRaw(::grpc::ClientContext* context, const ::v1::agent::GetTeleopInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::GetTeleopInfoResponse>* PrepareAsyncGetTeleopInfoRaw(::grpc::ClientContext* context, const ::v1::agent::GetTeleopInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::PostLanRtcOfferResponse>* AsyncPostLanRtcOfferRaw(::grpc::ClientContext* context, const ::v1::agent::PostLanRtcOfferRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::PostLanRtcOfferResponse>* PrepareAsyncPostLanRtcOfferRaw(::grpc::ClientContext* context, const ::v1::agent::PostLanRtcOfferRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::SendOnCustomDataChannelResponse>* AsyncSendOnCustomDataChannelRaw(::grpc::ClientContext* context, const ::v1::agent::SendOnCustomDataChannelRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::SendOnCustomDataChannelResponse>* PrepareAsyncSendOnCustomDataChannelRaw(::grpc::ClientContext* context, const ::v1::agent::SendOnCustomDataChannelRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::PostGenericAPIRequestResponse>* AsyncPostGenericAPIRequestRaw(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::PostGenericAPIRequestResponse>* PrepareAsyncPostGenericAPIRequestRaw(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::PostGenericAPIUnbufferedRequestResponse>* AsyncPostGenericAPIUnbufferedRequestRaw(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::v1::agent::PostGenericAPIUnbufferedRequestResponse>* PrepareAsyncPostGenericAPIUnbufferedRequestRaw(::grpc::ClientContext* context, const ::v1::model::GenericAPIDatapoint& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_StreamData_;
    const ::grpc::internal::RpcMethod rpcmethod_PostData_;
    const ::grpc::internal::RpcMethod rpcmethod_PostDataMulti_;
    const ::grpc::internal::RpcMethod rpcmethod_GetTeleopControlDataStream_;
    const ::grpc::internal::RpcMethod rpcmethod_GetTeleopHeartbeatStream_;
    const ::grpc::internal::RpcMethod rpcmethod_GetTelemetryListenerStream_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCustomDataChannelMessageStream_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateEvent_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateInterventionRequest_;
    const ::grpc::internal::RpcMethod rpcmethod_GetInterventionRequest_;
    const ::grpc::internal::RpcMethod rpcmethod_GetInterventionResponse_;
    const ::grpc::internal::RpcMethod rpcmethod_GetStreamsConfiguration_;
    const ::grpc::internal::RpcMethod rpcmethod_GetApplicationConfiguration_;
    const ::grpc::internal::RpcMethod rpcmethod_GetConfigBlobData_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAgentConfiguration_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBufferMetadata_;
    const ::grpc::internal::RpcMethod rpcmethod_Health_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCommandRequest_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCommandRequestStream_;
    const ::grpc::internal::RpcMethod rpcmethod_SendCommandResponse_;
    const ::grpc::internal::RpcMethod rpcmethod_PostTransformFrame_;
    const ::grpc::internal::RpcMethod rpcmethod_SetBaseFrameID_;
    const ::grpc::internal::RpcMethod rpcmethod_ClearTransformTree_;
    const ::grpc::internal::RpcMethod rpcmethod_GetTeleopInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_PostLanRtcOffer_;
    const ::grpc::internal::RpcMethod rpcmethod_SendOnCustomDataChannel_;
    const ::grpc::internal::RpcMethod rpcmethod_PostGenericAPIRequest_;
    const ::grpc::internal::RpcMethod rpcmethod_PostGenericAPIUnbufferedRequest_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status StreamData(::grpc::ServerContext* context, ::grpc::ServerReader< ::v1::model::Datapoint>* reader, ::v1::agent::StreamDataResponse* response);
    virtual ::grpc::Status PostData(::grpc::ServerContext* context, const ::v1::model::Datapoint* request, ::v1::agent::PostDataResponse* response);
    virtual ::grpc::Status PostDataMulti(::grpc::ServerContext* context, const ::v1::agent::PostDataMultiRequest* request, ::v1::agent::PostDataMultiResponse* response);
    virtual ::grpc::Status GetTeleopControlDataStream(::grpc::ServerContext* context, const ::v1::agent::GetTeleopControlDataStreamRequest* request, ::grpc::ServerWriter< ::v1::agent::GetTeleopControlDataStreamResponse>* writer);
    virtual ::grpc::Status GetTeleopHeartbeatStream(::grpc::ServerContext* context, const ::v1::agent::GetTeleopHeartbeatStreamRequest* request, ::grpc::ServerWriter< ::v1::agent::GetTeleopHeartbeatStreamResponse>* writer);
    virtual ::grpc::Status GetTelemetryListenerStream(::grpc::ServerContext* context, const ::v1::agent::GetTelemetryListenerStreamRequest* request, ::grpc::ServerWriter< ::v1::agent::GetTelemetryListenerStreamResponse>* writer);
    virtual ::grpc::Status GetCustomDataChannelMessageStream(::grpc::ServerContext* context, const ::v1::agent::GetCustomDataChannelMessageStreamRequest* request, ::grpc::ServerWriter< ::v1::agent::GetCustomDataChannelMessageStreamResponse>* writer);
    virtual ::grpc::Status CreateEvent(::grpc::ServerContext* context, const ::v1::agent::CreateEventRequest* request, ::v1::agent::CreateEventResponse* response);
    virtual ::grpc::Status CreateInterventionRequest(::grpc::ServerContext* context, const ::v1::model::InterventionRequest* request, ::v1::model::InterventionRequest* response);
    virtual ::grpc::Status GetInterventionRequest(::grpc::ServerContext* context, const ::v1::agent::GetInterventionRequestRequest* request, ::v1::model::InterventionRequest* response);
    virtual ::grpc::Status GetInterventionResponse(::grpc::ServerContext* context, const ::v1::agent::GetInterventionResponseRequest* request, ::v1::model::InterventionResponse* response);
    virtual ::grpc::Status GetStreamsConfiguration(::grpc::ServerContext* context, const ::v1::agent::GetStreamsConfigurationRequest* request, ::v1::agent::GetStreamsConfigurationResponse* response);
    virtual ::grpc::Status GetApplicationConfiguration(::grpc::ServerContext* context, const ::v1::agent::GetApplicationConfigurationRequest* request, ::v1::agent::GetApplicationConfigurationResponse* response);
    virtual ::grpc::Status GetConfigBlobData(::grpc::ServerContext* context, const ::v1::agent::GetConfigBlobDataRequest* request, ::v1::agent::GetConfigBlobDataResponse* response);
    virtual ::grpc::Status GetAgentConfiguration(::grpc::ServerContext* context, const ::v1::agent::GetAgentConfigurationRequest* request, ::v1::agent::GetAgentConfigurationResponse* response);
    virtual ::grpc::Status GetBufferMetadata(::grpc::ServerContext* context, const ::v1::agent::GetBufferMetadataRequest* request, ::v1::agent::GetBufferMetadataResponse* response);
    virtual ::grpc::Status Health(::grpc::ServerContext* context, const ::v1::agent::HealthRequest* request, ::v1::agent::HealthResponse* response);
    virtual ::grpc::Status GetCommandRequest(::grpc::ServerContext* context, const ::v1::agent::GetCommandRequestRequest* request, ::v1::agent::GetCommandRequestResponse* response);
    virtual ::grpc::Status GetCommandRequestStream(::grpc::ServerContext* context, const ::v1::agent::GetCommandRequestStreamRequest* request, ::grpc::ServerWriter< ::v1::agent::GetCommandRequestStreamResponse>* writer);
    virtual ::grpc::Status SendCommandResponse(::grpc::ServerContext* context, const ::v1::agent::SendCommandResponseRequest* request, ::v1::agent::SendCommandResponseResponse* response);
    virtual ::grpc::Status PostTransformFrame(::grpc::ServerContext* context, const ::v1::model::TransformFrame* request, ::v1::agent::PostTransformFrameResponse* response);
    virtual ::grpc::Status SetBaseFrameID(::grpc::ServerContext* context, const ::v1::agent::SetBaseFrameIDRequest* request, ::v1::agent::SetBaseFrameIDResponse* response);
    virtual ::grpc::Status ClearTransformTree(::grpc::ServerContext* context, const ::v1::agent::ClearTransformTreeRequest* request, ::v1::agent::ClearTransformTreeResponse* response);
    virtual ::grpc::Status GetTeleopInfo(::grpc::ServerContext* context, const ::v1::agent::GetTeleopInfoRequest* request, ::v1::agent::GetTeleopInfoResponse* response);
    virtual ::grpc::Status PostLanRtcOffer(::grpc::ServerContext* context, const ::v1::agent::PostLanRtcOfferRequest* request, ::v1::agent::PostLanRtcOfferResponse* response);
    virtual ::grpc::Status SendOnCustomDataChannel(::grpc::ServerContext* context, const ::v1::agent::SendOnCustomDataChannelRequest* request, ::v1::agent::SendOnCustomDataChannelResponse* response);
    virtual ::grpc::Status PostGenericAPIRequest(::grpc::ServerContext* context, const ::v1::model::GenericAPIDatapoint* request, ::v1::agent::PostGenericAPIRequestResponse* response);
    virtual ::grpc::Status PostGenericAPIUnbufferedRequest(::grpc::ServerContext* context, const ::v1::model::GenericAPIDatapoint* request, ::v1::agent::PostGenericAPIUnbufferedRequestResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_StreamData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StreamData() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_StreamData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamData(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::v1::model::Datapoint>* /*reader*/, ::v1::agent::StreamDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStreamData(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::v1::agent::StreamDataResponse, ::v1::model::Datapoint>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(0, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PostData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PostData() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_PostData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostData(::grpc::ServerContext* /*context*/, const ::v1::model::Datapoint* /*request*/, ::v1::agent::PostDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPostData(::grpc::ServerContext* context, ::v1::model::Datapoint* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::PostDataResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PostDataMulti : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PostDataMulti() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_PostDataMulti() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostDataMulti(::grpc::ServerContext* /*context*/, const ::v1::agent::PostDataMultiRequest* /*request*/, ::v1::agent::PostDataMultiResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPostDataMulti(::grpc::ServerContext* context, ::v1::agent::PostDataMultiRequest* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::PostDataMultiResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTeleopControlDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetTeleopControlDataStream() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetTeleopControlDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeleopControlDataStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTeleopControlDataStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetTeleopControlDataStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTeleopControlDataStream(::grpc::ServerContext* context, ::v1::agent::GetTeleopControlDataStreamRequest* request, ::grpc::ServerAsyncWriter< ::v1::agent::GetTeleopControlDataStreamResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(3, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTeleopHeartbeatStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetTeleopHeartbeatStream() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetTeleopHeartbeatStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeleopHeartbeatStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTeleopHeartbeatStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetTeleopHeartbeatStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTeleopHeartbeatStream(::grpc::ServerContext* context, ::v1::agent::GetTeleopHeartbeatStreamRequest* request, ::grpc::ServerAsyncWriter< ::v1::agent::GetTeleopHeartbeatStreamResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(4, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTelemetryListenerStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetTelemetryListenerStream() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_GetTelemetryListenerStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTelemetryListenerStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTelemetryListenerStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetTelemetryListenerStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTelemetryListenerStream(::grpc::ServerContext* context, ::v1::agent::GetTelemetryListenerStreamRequest* request, ::grpc::ServerAsyncWriter< ::v1::agent::GetTelemetryListenerStreamResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(5, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCustomDataChannelMessageStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCustomDataChannelMessageStream() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetCustomDataChannelMessageStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomDataChannelMessageStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetCustomDataChannelMessageStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetCustomDataChannelMessageStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCustomDataChannelMessageStream(::grpc::ServerContext* context, ::v1::agent::GetCustomDataChannelMessageStreamRequest* request, ::grpc::ServerAsyncWriter< ::v1::agent::GetCustomDataChannelMessageStreamResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(6, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateEvent() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_CreateEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEvent(::grpc::ServerContext* /*context*/, const ::v1::agent::CreateEventRequest* /*request*/, ::v1::agent::CreateEventResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateEvent(::grpc::ServerContext* context, ::v1::agent::CreateEventRequest* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::CreateEventResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateInterventionRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateInterventionRequest() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_CreateInterventionRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInterventionRequest(::grpc::ServerContext* /*context*/, const ::v1::model::InterventionRequest* /*request*/, ::v1::model::InterventionRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateInterventionRequest(::grpc::ServerContext* context, ::v1::model::InterventionRequest* request, ::grpc::ServerAsyncResponseWriter< ::v1::model::InterventionRequest>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetInterventionRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetInterventionRequest() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_GetInterventionRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInterventionRequest(::grpc::ServerContext* /*context*/, const ::v1::agent::GetInterventionRequestRequest* /*request*/, ::v1::model::InterventionRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInterventionRequest(::grpc::ServerContext* context, ::v1::agent::GetInterventionRequestRequest* request, ::grpc::ServerAsyncResponseWriter< ::v1::model::InterventionRequest>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetInterventionResponse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetInterventionResponse() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_GetInterventionResponse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInterventionResponse(::grpc::ServerContext* /*context*/, const ::v1::agent::GetInterventionResponseRequest* /*request*/, ::v1::model::InterventionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInterventionResponse(::grpc::ServerContext* context, ::v1::agent::GetInterventionResponseRequest* request, ::grpc::ServerAsyncResponseWriter< ::v1::model::InterventionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetStreamsConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetStreamsConfiguration() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_GetStreamsConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStreamsConfiguration(::grpc::ServerContext* /*context*/, const ::v1::agent::GetStreamsConfigurationRequest* /*request*/, ::v1::agent::GetStreamsConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetStreamsConfiguration(::grpc::ServerContext* context, ::v1::agent::GetStreamsConfigurationRequest* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::GetStreamsConfigurationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetApplicationConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetApplicationConfiguration() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_GetApplicationConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetApplicationConfiguration(::grpc::ServerContext* /*context*/, const ::v1::agent::GetApplicationConfigurationRequest* /*request*/, ::v1::agent::GetApplicationConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetApplicationConfiguration(::grpc::ServerContext* context, ::v1::agent::GetApplicationConfigurationRequest* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::GetApplicationConfigurationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetConfigBlobData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetConfigBlobData() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_GetConfigBlobData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfigBlobData(::grpc::ServerContext* /*context*/, const ::v1::agent::GetConfigBlobDataRequest* /*request*/, ::v1::agent::GetConfigBlobDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfigBlobData(::grpc::ServerContext* context, ::v1::agent::GetConfigBlobDataRequest* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::GetConfigBlobDataResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAgentConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAgentConfiguration() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_GetAgentConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAgentConfiguration(::grpc::ServerContext* /*context*/, const ::v1::agent::GetAgentConfigurationRequest* /*request*/, ::v1::agent::GetAgentConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAgentConfiguration(::grpc::ServerContext* context, ::v1::agent::GetAgentConfigurationRequest* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::GetAgentConfigurationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBufferMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBufferMetadata() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_GetBufferMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBufferMetadata(::grpc::ServerContext* /*context*/, const ::v1::agent::GetBufferMetadataRequest* /*request*/, ::v1::agent::GetBufferMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBufferMetadata(::grpc::ServerContext* context, ::v1::agent::GetBufferMetadataRequest* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::GetBufferMetadataResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Health : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Health() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_Health() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Health(::grpc::ServerContext* /*context*/, const ::v1::agent::HealthRequest* /*request*/, ::v1::agent::HealthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHealth(::grpc::ServerContext* context, ::v1::agent::HealthRequest* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::HealthResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCommandRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCommandRequest() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_GetCommandRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCommandRequest(::grpc::ServerContext* /*context*/, const ::v1::agent::GetCommandRequestRequest* /*request*/, ::v1::agent::GetCommandRequestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCommandRequest(::grpc::ServerContext* context, ::v1::agent::GetCommandRequestRequest* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::GetCommandRequestResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCommandRequestStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCommandRequestStream() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_GetCommandRequestStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCommandRequestStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetCommandRequestStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetCommandRequestStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCommandRequestStream(::grpc::ServerContext* context, ::v1::agent::GetCommandRequestStreamRequest* request, ::grpc::ServerAsyncWriter< ::v1::agent::GetCommandRequestStreamResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(18, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendCommandResponse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendCommandResponse() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_SendCommandResponse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendCommandResponse(::grpc::ServerContext* /*context*/, const ::v1::agent::SendCommandResponseRequest* /*request*/, ::v1::agent::SendCommandResponseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendCommandResponse(::grpc::ServerContext* context, ::v1::agent::SendCommandResponseRequest* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::SendCommandResponseResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PostTransformFrame : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PostTransformFrame() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_PostTransformFrame() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostTransformFrame(::grpc::ServerContext* /*context*/, const ::v1::model::TransformFrame* /*request*/, ::v1::agent::PostTransformFrameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPostTransformFrame(::grpc::ServerContext* context, ::v1::model::TransformFrame* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::PostTransformFrameResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetBaseFrameID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetBaseFrameID() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_SetBaseFrameID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBaseFrameID(::grpc::ServerContext* /*context*/, const ::v1::agent::SetBaseFrameIDRequest* /*request*/, ::v1::agent::SetBaseFrameIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBaseFrameID(::grpc::ServerContext* context, ::v1::agent::SetBaseFrameIDRequest* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::SetBaseFrameIDResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ClearTransformTree : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ClearTransformTree() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_ClearTransformTree() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearTransformTree(::grpc::ServerContext* /*context*/, const ::v1::agent::ClearTransformTreeRequest* /*request*/, ::v1::agent::ClearTransformTreeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClearTransformTree(::grpc::ServerContext* context, ::v1::agent::ClearTransformTreeRequest* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::ClearTransformTreeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTeleopInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetTeleopInfo() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_GetTeleopInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeleopInfo(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTeleopInfoRequest* /*request*/, ::v1::agent::GetTeleopInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTeleopInfo(::grpc::ServerContext* context, ::v1::agent::GetTeleopInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::GetTeleopInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PostLanRtcOffer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PostLanRtcOffer() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_PostLanRtcOffer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostLanRtcOffer(::grpc::ServerContext* /*context*/, const ::v1::agent::PostLanRtcOfferRequest* /*request*/, ::v1::agent::PostLanRtcOfferResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPostLanRtcOffer(::grpc::ServerContext* context, ::v1::agent::PostLanRtcOfferRequest* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::PostLanRtcOfferResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendOnCustomDataChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendOnCustomDataChannel() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_SendOnCustomDataChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendOnCustomDataChannel(::grpc::ServerContext* /*context*/, const ::v1::agent::SendOnCustomDataChannelRequest* /*request*/, ::v1::agent::SendOnCustomDataChannelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendOnCustomDataChannel(::grpc::ServerContext* context, ::v1::agent::SendOnCustomDataChannelRequest* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::SendOnCustomDataChannelResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PostGenericAPIRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PostGenericAPIRequest() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_PostGenericAPIRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostGenericAPIRequest(::grpc::ServerContext* /*context*/, const ::v1::model::GenericAPIDatapoint* /*request*/, ::v1::agent::PostGenericAPIRequestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPostGenericAPIRequest(::grpc::ServerContext* context, ::v1::model::GenericAPIDatapoint* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::PostGenericAPIRequestResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PostGenericAPIUnbufferedRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PostGenericAPIUnbufferedRequest() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_PostGenericAPIUnbufferedRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostGenericAPIUnbufferedRequest(::grpc::ServerContext* /*context*/, const ::v1::model::GenericAPIDatapoint* /*request*/, ::v1::agent::PostGenericAPIUnbufferedRequestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPostGenericAPIUnbufferedRequest(::grpc::ServerContext* context, ::v1::model::GenericAPIDatapoint* request, ::grpc::ServerAsyncResponseWriter< ::v1::agent::PostGenericAPIUnbufferedRequestResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_StreamData<WithAsyncMethod_PostData<WithAsyncMethod_PostDataMulti<WithAsyncMethod_GetTeleopControlDataStream<WithAsyncMethod_GetTeleopHeartbeatStream<WithAsyncMethod_GetTelemetryListenerStream<WithAsyncMethod_GetCustomDataChannelMessageStream<WithAsyncMethod_CreateEvent<WithAsyncMethod_CreateInterventionRequest<WithAsyncMethod_GetInterventionRequest<WithAsyncMethod_GetInterventionResponse<WithAsyncMethod_GetStreamsConfiguration<WithAsyncMethod_GetApplicationConfiguration<WithAsyncMethod_GetConfigBlobData<WithAsyncMethod_GetAgentConfiguration<WithAsyncMethod_GetBufferMetadata<WithAsyncMethod_Health<WithAsyncMethod_GetCommandRequest<WithAsyncMethod_GetCommandRequestStream<WithAsyncMethod_SendCommandResponse<WithAsyncMethod_PostTransformFrame<WithAsyncMethod_SetBaseFrameID<WithAsyncMethod_ClearTransformTree<WithAsyncMethod_GetTeleopInfo<WithAsyncMethod_PostLanRtcOffer<WithAsyncMethod_SendOnCustomDataChannel<WithAsyncMethod_PostGenericAPIRequest<WithAsyncMethod_PostGenericAPIUnbufferedRequest<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_StreamData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StreamData() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackClientStreamingHandler< ::v1::model::Datapoint, ::v1::agent::StreamDataResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, ::v1::agent::StreamDataResponse* response) { return this->StreamData(context, response); }));
    }
    ~WithCallbackMethod_StreamData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamData(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::v1::model::Datapoint>* /*reader*/, ::v1::agent::StreamDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::v1::model::Datapoint>* StreamData(
      ::grpc::CallbackServerContext* /*context*/, ::v1::agent::StreamDataResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PostData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PostData() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::model::Datapoint, ::v1::agent::PostDataResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::model::Datapoint* request, ::v1::agent::PostDataResponse* response) { return this->PostData(context, request, response); }));}
    void SetMessageAllocatorFor_PostData(
        ::grpc::MessageAllocator< ::v1::model::Datapoint, ::v1::agent::PostDataResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::model::Datapoint, ::v1::agent::PostDataResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PostData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostData(::grpc::ServerContext* /*context*/, const ::v1::model::Datapoint* /*request*/, ::v1::agent::PostDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PostData(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::model::Datapoint* /*request*/, ::v1::agent::PostDataResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PostDataMulti : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PostDataMulti() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::agent::PostDataMultiRequest, ::v1::agent::PostDataMultiResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::PostDataMultiRequest* request, ::v1::agent::PostDataMultiResponse* response) { return this->PostDataMulti(context, request, response); }));}
    void SetMessageAllocatorFor_PostDataMulti(
        ::grpc::MessageAllocator< ::v1::agent::PostDataMultiRequest, ::v1::agent::PostDataMultiResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::agent::PostDataMultiRequest, ::v1::agent::PostDataMultiResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PostDataMulti() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostDataMulti(::grpc::ServerContext* /*context*/, const ::v1::agent::PostDataMultiRequest* /*request*/, ::v1::agent::PostDataMultiResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PostDataMulti(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::PostDataMultiRequest* /*request*/, ::v1::agent::PostDataMultiResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetTeleopControlDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetTeleopControlDataStream() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackServerStreamingHandler< ::v1::agent::GetTeleopControlDataStreamRequest, ::v1::agent::GetTeleopControlDataStreamResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::GetTeleopControlDataStreamRequest* request) { return this->GetTeleopControlDataStream(context, request); }));
    }
    ~WithCallbackMethod_GetTeleopControlDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeleopControlDataStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTeleopControlDataStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetTeleopControlDataStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::v1::agent::GetTeleopControlDataStreamResponse>* GetTeleopControlDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::GetTeleopControlDataStreamRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetTeleopHeartbeatStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetTeleopHeartbeatStream() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackServerStreamingHandler< ::v1::agent::GetTeleopHeartbeatStreamRequest, ::v1::agent::GetTeleopHeartbeatStreamResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::GetTeleopHeartbeatStreamRequest* request) { return this->GetTeleopHeartbeatStream(context, request); }));
    }
    ~WithCallbackMethod_GetTeleopHeartbeatStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeleopHeartbeatStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTeleopHeartbeatStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetTeleopHeartbeatStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::v1::agent::GetTeleopHeartbeatStreamResponse>* GetTeleopHeartbeatStream(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::GetTeleopHeartbeatStreamRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetTelemetryListenerStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetTelemetryListenerStream() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackServerStreamingHandler< ::v1::agent::GetTelemetryListenerStreamRequest, ::v1::agent::GetTelemetryListenerStreamResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::GetTelemetryListenerStreamRequest* request) { return this->GetTelemetryListenerStream(context, request); }));
    }
    ~WithCallbackMethod_GetTelemetryListenerStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTelemetryListenerStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTelemetryListenerStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetTelemetryListenerStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::v1::agent::GetTelemetryListenerStreamResponse>* GetTelemetryListenerStream(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::GetTelemetryListenerStreamRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetCustomDataChannelMessageStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetCustomDataChannelMessageStream() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackServerStreamingHandler< ::v1::agent::GetCustomDataChannelMessageStreamRequest, ::v1::agent::GetCustomDataChannelMessageStreamResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::GetCustomDataChannelMessageStreamRequest* request) { return this->GetCustomDataChannelMessageStream(context, request); }));
    }
    ~WithCallbackMethod_GetCustomDataChannelMessageStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomDataChannelMessageStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetCustomDataChannelMessageStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetCustomDataChannelMessageStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::v1::agent::GetCustomDataChannelMessageStreamResponse>* GetCustomDataChannelMessageStream(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::GetCustomDataChannelMessageStreamRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateEvent() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::agent::CreateEventRequest, ::v1::agent::CreateEventResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::CreateEventRequest* request, ::v1::agent::CreateEventResponse* response) { return this->CreateEvent(context, request, response); }));}
    void SetMessageAllocatorFor_CreateEvent(
        ::grpc::MessageAllocator< ::v1::agent::CreateEventRequest, ::v1::agent::CreateEventResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::agent::CreateEventRequest, ::v1::agent::CreateEventResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEvent(::grpc::ServerContext* /*context*/, const ::v1::agent::CreateEventRequest* /*request*/, ::v1::agent::CreateEventResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateEvent(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::CreateEventRequest* /*request*/, ::v1::agent::CreateEventResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateInterventionRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateInterventionRequest() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::model::InterventionRequest, ::v1::model::InterventionRequest>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::model::InterventionRequest* request, ::v1::model::InterventionRequest* response) { return this->CreateInterventionRequest(context, request, response); }));}
    void SetMessageAllocatorFor_CreateInterventionRequest(
        ::grpc::MessageAllocator< ::v1::model::InterventionRequest, ::v1::model::InterventionRequest>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::model::InterventionRequest, ::v1::model::InterventionRequest>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateInterventionRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInterventionRequest(::grpc::ServerContext* /*context*/, const ::v1::model::InterventionRequest* /*request*/, ::v1::model::InterventionRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateInterventionRequest(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::model::InterventionRequest* /*request*/, ::v1::model::InterventionRequest* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetInterventionRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetInterventionRequest() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::agent::GetInterventionRequestRequest, ::v1::model::InterventionRequest>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::GetInterventionRequestRequest* request, ::v1::model::InterventionRequest* response) { return this->GetInterventionRequest(context, request, response); }));}
    void SetMessageAllocatorFor_GetInterventionRequest(
        ::grpc::MessageAllocator< ::v1::agent::GetInterventionRequestRequest, ::v1::model::InterventionRequest>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::agent::GetInterventionRequestRequest, ::v1::model::InterventionRequest>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetInterventionRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInterventionRequest(::grpc::ServerContext* /*context*/, const ::v1::agent::GetInterventionRequestRequest* /*request*/, ::v1::model::InterventionRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetInterventionRequest(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::GetInterventionRequestRequest* /*request*/, ::v1::model::InterventionRequest* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetInterventionResponse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetInterventionResponse() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::agent::GetInterventionResponseRequest, ::v1::model::InterventionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::GetInterventionResponseRequest* request, ::v1::model::InterventionResponse* response) { return this->GetInterventionResponse(context, request, response); }));}
    void SetMessageAllocatorFor_GetInterventionResponse(
        ::grpc::MessageAllocator< ::v1::agent::GetInterventionResponseRequest, ::v1::model::InterventionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::agent::GetInterventionResponseRequest, ::v1::model::InterventionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetInterventionResponse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInterventionResponse(::grpc::ServerContext* /*context*/, const ::v1::agent::GetInterventionResponseRequest* /*request*/, ::v1::model::InterventionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetInterventionResponse(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::GetInterventionResponseRequest* /*request*/, ::v1::model::InterventionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetStreamsConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetStreamsConfiguration() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::agent::GetStreamsConfigurationRequest, ::v1::agent::GetStreamsConfigurationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::GetStreamsConfigurationRequest* request, ::v1::agent::GetStreamsConfigurationResponse* response) { return this->GetStreamsConfiguration(context, request, response); }));}
    void SetMessageAllocatorFor_GetStreamsConfiguration(
        ::grpc::MessageAllocator< ::v1::agent::GetStreamsConfigurationRequest, ::v1::agent::GetStreamsConfigurationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::agent::GetStreamsConfigurationRequest, ::v1::agent::GetStreamsConfigurationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetStreamsConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStreamsConfiguration(::grpc::ServerContext* /*context*/, const ::v1::agent::GetStreamsConfigurationRequest* /*request*/, ::v1::agent::GetStreamsConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetStreamsConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::GetStreamsConfigurationRequest* /*request*/, ::v1::agent::GetStreamsConfigurationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetApplicationConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetApplicationConfiguration() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::agent::GetApplicationConfigurationRequest, ::v1::agent::GetApplicationConfigurationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::GetApplicationConfigurationRequest* request, ::v1::agent::GetApplicationConfigurationResponse* response) { return this->GetApplicationConfiguration(context, request, response); }));}
    void SetMessageAllocatorFor_GetApplicationConfiguration(
        ::grpc::MessageAllocator< ::v1::agent::GetApplicationConfigurationRequest, ::v1::agent::GetApplicationConfigurationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::agent::GetApplicationConfigurationRequest, ::v1::agent::GetApplicationConfigurationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetApplicationConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetApplicationConfiguration(::grpc::ServerContext* /*context*/, const ::v1::agent::GetApplicationConfigurationRequest* /*request*/, ::v1::agent::GetApplicationConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetApplicationConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::GetApplicationConfigurationRequest* /*request*/, ::v1::agent::GetApplicationConfigurationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetConfigBlobData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetConfigBlobData() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::agent::GetConfigBlobDataRequest, ::v1::agent::GetConfigBlobDataResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::GetConfigBlobDataRequest* request, ::v1::agent::GetConfigBlobDataResponse* response) { return this->GetConfigBlobData(context, request, response); }));}
    void SetMessageAllocatorFor_GetConfigBlobData(
        ::grpc::MessageAllocator< ::v1::agent::GetConfigBlobDataRequest, ::v1::agent::GetConfigBlobDataResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::agent::GetConfigBlobDataRequest, ::v1::agent::GetConfigBlobDataResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetConfigBlobData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfigBlobData(::grpc::ServerContext* /*context*/, const ::v1::agent::GetConfigBlobDataRequest* /*request*/, ::v1::agent::GetConfigBlobDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetConfigBlobData(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::GetConfigBlobDataRequest* /*request*/, ::v1::agent::GetConfigBlobDataResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetAgentConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetAgentConfiguration() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::agent::GetAgentConfigurationRequest, ::v1::agent::GetAgentConfigurationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::GetAgentConfigurationRequest* request, ::v1::agent::GetAgentConfigurationResponse* response) { return this->GetAgentConfiguration(context, request, response); }));}
    void SetMessageAllocatorFor_GetAgentConfiguration(
        ::grpc::MessageAllocator< ::v1::agent::GetAgentConfigurationRequest, ::v1::agent::GetAgentConfigurationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::agent::GetAgentConfigurationRequest, ::v1::agent::GetAgentConfigurationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetAgentConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAgentConfiguration(::grpc::ServerContext* /*context*/, const ::v1::agent::GetAgentConfigurationRequest* /*request*/, ::v1::agent::GetAgentConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAgentConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::GetAgentConfigurationRequest* /*request*/, ::v1::agent::GetAgentConfigurationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetBufferMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetBufferMetadata() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::agent::GetBufferMetadataRequest, ::v1::agent::GetBufferMetadataResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::GetBufferMetadataRequest* request, ::v1::agent::GetBufferMetadataResponse* response) { return this->GetBufferMetadata(context, request, response); }));}
    void SetMessageAllocatorFor_GetBufferMetadata(
        ::grpc::MessageAllocator< ::v1::agent::GetBufferMetadataRequest, ::v1::agent::GetBufferMetadataResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::agent::GetBufferMetadataRequest, ::v1::agent::GetBufferMetadataResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetBufferMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBufferMetadata(::grpc::ServerContext* /*context*/, const ::v1::agent::GetBufferMetadataRequest* /*request*/, ::v1::agent::GetBufferMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBufferMetadata(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::GetBufferMetadataRequest* /*request*/, ::v1::agent::GetBufferMetadataResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Health : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Health() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::agent::HealthRequest, ::v1::agent::HealthResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::HealthRequest* request, ::v1::agent::HealthResponse* response) { return this->Health(context, request, response); }));}
    void SetMessageAllocatorFor_Health(
        ::grpc::MessageAllocator< ::v1::agent::HealthRequest, ::v1::agent::HealthResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::agent::HealthRequest, ::v1::agent::HealthResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Health() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Health(::grpc::ServerContext* /*context*/, const ::v1::agent::HealthRequest* /*request*/, ::v1::agent::HealthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Health(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::HealthRequest* /*request*/, ::v1::agent::HealthResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetCommandRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetCommandRequest() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::agent::GetCommandRequestRequest, ::v1::agent::GetCommandRequestResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::GetCommandRequestRequest* request, ::v1::agent::GetCommandRequestResponse* response) { return this->GetCommandRequest(context, request, response); }));}
    void SetMessageAllocatorFor_GetCommandRequest(
        ::grpc::MessageAllocator< ::v1::agent::GetCommandRequestRequest, ::v1::agent::GetCommandRequestResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::agent::GetCommandRequestRequest, ::v1::agent::GetCommandRequestResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetCommandRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCommandRequest(::grpc::ServerContext* /*context*/, const ::v1::agent::GetCommandRequestRequest* /*request*/, ::v1::agent::GetCommandRequestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCommandRequest(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::GetCommandRequestRequest* /*request*/, ::v1::agent::GetCommandRequestResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetCommandRequestStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetCommandRequestStream() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackServerStreamingHandler< ::v1::agent::GetCommandRequestStreamRequest, ::v1::agent::GetCommandRequestStreamResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::GetCommandRequestStreamRequest* request) { return this->GetCommandRequestStream(context, request); }));
    }
    ~WithCallbackMethod_GetCommandRequestStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCommandRequestStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetCommandRequestStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetCommandRequestStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::v1::agent::GetCommandRequestStreamResponse>* GetCommandRequestStream(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::GetCommandRequestStreamRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendCommandResponse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendCommandResponse() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::agent::SendCommandResponseRequest, ::v1::agent::SendCommandResponseResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::SendCommandResponseRequest* request, ::v1::agent::SendCommandResponseResponse* response) { return this->SendCommandResponse(context, request, response); }));}
    void SetMessageAllocatorFor_SendCommandResponse(
        ::grpc::MessageAllocator< ::v1::agent::SendCommandResponseRequest, ::v1::agent::SendCommandResponseResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::agent::SendCommandResponseRequest, ::v1::agent::SendCommandResponseResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendCommandResponse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendCommandResponse(::grpc::ServerContext* /*context*/, const ::v1::agent::SendCommandResponseRequest* /*request*/, ::v1::agent::SendCommandResponseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendCommandResponse(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::SendCommandResponseRequest* /*request*/, ::v1::agent::SendCommandResponseResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PostTransformFrame : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PostTransformFrame() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::model::TransformFrame, ::v1::agent::PostTransformFrameResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::model::TransformFrame* request, ::v1::agent::PostTransformFrameResponse* response) { return this->PostTransformFrame(context, request, response); }));}
    void SetMessageAllocatorFor_PostTransformFrame(
        ::grpc::MessageAllocator< ::v1::model::TransformFrame, ::v1::agent::PostTransformFrameResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::model::TransformFrame, ::v1::agent::PostTransformFrameResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PostTransformFrame() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostTransformFrame(::grpc::ServerContext* /*context*/, const ::v1::model::TransformFrame* /*request*/, ::v1::agent::PostTransformFrameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PostTransformFrame(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::model::TransformFrame* /*request*/, ::v1::agent::PostTransformFrameResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetBaseFrameID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetBaseFrameID() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::agent::SetBaseFrameIDRequest, ::v1::agent::SetBaseFrameIDResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::SetBaseFrameIDRequest* request, ::v1::agent::SetBaseFrameIDResponse* response) { return this->SetBaseFrameID(context, request, response); }));}
    void SetMessageAllocatorFor_SetBaseFrameID(
        ::grpc::MessageAllocator< ::v1::agent::SetBaseFrameIDRequest, ::v1::agent::SetBaseFrameIDResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::agent::SetBaseFrameIDRequest, ::v1::agent::SetBaseFrameIDResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetBaseFrameID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBaseFrameID(::grpc::ServerContext* /*context*/, const ::v1::agent::SetBaseFrameIDRequest* /*request*/, ::v1::agent::SetBaseFrameIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBaseFrameID(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::SetBaseFrameIDRequest* /*request*/, ::v1::agent::SetBaseFrameIDResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ClearTransformTree : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ClearTransformTree() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::agent::ClearTransformTreeRequest, ::v1::agent::ClearTransformTreeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::ClearTransformTreeRequest* request, ::v1::agent::ClearTransformTreeResponse* response) { return this->ClearTransformTree(context, request, response); }));}
    void SetMessageAllocatorFor_ClearTransformTree(
        ::grpc::MessageAllocator< ::v1::agent::ClearTransformTreeRequest, ::v1::agent::ClearTransformTreeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::agent::ClearTransformTreeRequest, ::v1::agent::ClearTransformTreeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ClearTransformTree() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearTransformTree(::grpc::ServerContext* /*context*/, const ::v1::agent::ClearTransformTreeRequest* /*request*/, ::v1::agent::ClearTransformTreeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ClearTransformTree(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::ClearTransformTreeRequest* /*request*/, ::v1::agent::ClearTransformTreeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetTeleopInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetTeleopInfo() {
      ::grpc::Service::MarkMethodCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::agent::GetTeleopInfoRequest, ::v1::agent::GetTeleopInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::GetTeleopInfoRequest* request, ::v1::agent::GetTeleopInfoResponse* response) { return this->GetTeleopInfo(context, request, response); }));}
    void SetMessageAllocatorFor_GetTeleopInfo(
        ::grpc::MessageAllocator< ::v1::agent::GetTeleopInfoRequest, ::v1::agent::GetTeleopInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::agent::GetTeleopInfoRequest, ::v1::agent::GetTeleopInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetTeleopInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeleopInfo(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTeleopInfoRequest* /*request*/, ::v1::agent::GetTeleopInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTeleopInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::GetTeleopInfoRequest* /*request*/, ::v1::agent::GetTeleopInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PostLanRtcOffer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PostLanRtcOffer() {
      ::grpc::Service::MarkMethodCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::agent::PostLanRtcOfferRequest, ::v1::agent::PostLanRtcOfferResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::PostLanRtcOfferRequest* request, ::v1::agent::PostLanRtcOfferResponse* response) { return this->PostLanRtcOffer(context, request, response); }));}
    void SetMessageAllocatorFor_PostLanRtcOffer(
        ::grpc::MessageAllocator< ::v1::agent::PostLanRtcOfferRequest, ::v1::agent::PostLanRtcOfferResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::agent::PostLanRtcOfferRequest, ::v1::agent::PostLanRtcOfferResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PostLanRtcOffer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostLanRtcOffer(::grpc::ServerContext* /*context*/, const ::v1::agent::PostLanRtcOfferRequest* /*request*/, ::v1::agent::PostLanRtcOfferResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PostLanRtcOffer(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::PostLanRtcOfferRequest* /*request*/, ::v1::agent::PostLanRtcOfferResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendOnCustomDataChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendOnCustomDataChannel() {
      ::grpc::Service::MarkMethodCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::agent::SendOnCustomDataChannelRequest, ::v1::agent::SendOnCustomDataChannelResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::agent::SendOnCustomDataChannelRequest* request, ::v1::agent::SendOnCustomDataChannelResponse* response) { return this->SendOnCustomDataChannel(context, request, response); }));}
    void SetMessageAllocatorFor_SendOnCustomDataChannel(
        ::grpc::MessageAllocator< ::v1::agent::SendOnCustomDataChannelRequest, ::v1::agent::SendOnCustomDataChannelResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::agent::SendOnCustomDataChannelRequest, ::v1::agent::SendOnCustomDataChannelResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendOnCustomDataChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendOnCustomDataChannel(::grpc::ServerContext* /*context*/, const ::v1::agent::SendOnCustomDataChannelRequest* /*request*/, ::v1::agent::SendOnCustomDataChannelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendOnCustomDataChannel(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::agent::SendOnCustomDataChannelRequest* /*request*/, ::v1::agent::SendOnCustomDataChannelResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PostGenericAPIRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PostGenericAPIRequest() {
      ::grpc::Service::MarkMethodCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::model::GenericAPIDatapoint, ::v1::agent::PostGenericAPIRequestResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::model::GenericAPIDatapoint* request, ::v1::agent::PostGenericAPIRequestResponse* response) { return this->PostGenericAPIRequest(context, request, response); }));}
    void SetMessageAllocatorFor_PostGenericAPIRequest(
        ::grpc::MessageAllocator< ::v1::model::GenericAPIDatapoint, ::v1::agent::PostGenericAPIRequestResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(26);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::model::GenericAPIDatapoint, ::v1::agent::PostGenericAPIRequestResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PostGenericAPIRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostGenericAPIRequest(::grpc::ServerContext* /*context*/, const ::v1::model::GenericAPIDatapoint* /*request*/, ::v1::agent::PostGenericAPIRequestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PostGenericAPIRequest(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::model::GenericAPIDatapoint* /*request*/, ::v1::agent::PostGenericAPIRequestResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PostGenericAPIUnbufferedRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PostGenericAPIUnbufferedRequest() {
      ::grpc::Service::MarkMethodCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::v1::model::GenericAPIDatapoint, ::v1::agent::PostGenericAPIUnbufferedRequestResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::v1::model::GenericAPIDatapoint* request, ::v1::agent::PostGenericAPIUnbufferedRequestResponse* response) { return this->PostGenericAPIUnbufferedRequest(context, request, response); }));}
    void SetMessageAllocatorFor_PostGenericAPIUnbufferedRequest(
        ::grpc::MessageAllocator< ::v1::model::GenericAPIDatapoint, ::v1::agent::PostGenericAPIUnbufferedRequestResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(27);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::v1::model::GenericAPIDatapoint, ::v1::agent::PostGenericAPIUnbufferedRequestResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PostGenericAPIUnbufferedRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostGenericAPIUnbufferedRequest(::grpc::ServerContext* /*context*/, const ::v1::model::GenericAPIDatapoint* /*request*/, ::v1::agent::PostGenericAPIUnbufferedRequestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PostGenericAPIUnbufferedRequest(
      ::grpc::CallbackServerContext* /*context*/, const ::v1::model::GenericAPIDatapoint* /*request*/, ::v1::agent::PostGenericAPIUnbufferedRequestResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_StreamData<WithCallbackMethod_PostData<WithCallbackMethod_PostDataMulti<WithCallbackMethod_GetTeleopControlDataStream<WithCallbackMethod_GetTeleopHeartbeatStream<WithCallbackMethod_GetTelemetryListenerStream<WithCallbackMethod_GetCustomDataChannelMessageStream<WithCallbackMethod_CreateEvent<WithCallbackMethod_CreateInterventionRequest<WithCallbackMethod_GetInterventionRequest<WithCallbackMethod_GetInterventionResponse<WithCallbackMethod_GetStreamsConfiguration<WithCallbackMethod_GetApplicationConfiguration<WithCallbackMethod_GetConfigBlobData<WithCallbackMethod_GetAgentConfiguration<WithCallbackMethod_GetBufferMetadata<WithCallbackMethod_Health<WithCallbackMethod_GetCommandRequest<WithCallbackMethod_GetCommandRequestStream<WithCallbackMethod_SendCommandResponse<WithCallbackMethod_PostTransformFrame<WithCallbackMethod_SetBaseFrameID<WithCallbackMethod_ClearTransformTree<WithCallbackMethod_GetTeleopInfo<WithCallbackMethod_PostLanRtcOffer<WithCallbackMethod_SendOnCustomDataChannel<WithCallbackMethod_PostGenericAPIRequest<WithCallbackMethod_PostGenericAPIUnbufferedRequest<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_StreamData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StreamData() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_StreamData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamData(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::v1::model::Datapoint>* /*reader*/, ::v1::agent::StreamDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PostData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PostData() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_PostData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostData(::grpc::ServerContext* /*context*/, const ::v1::model::Datapoint* /*request*/, ::v1::agent::PostDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PostDataMulti : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PostDataMulti() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_PostDataMulti() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostDataMulti(::grpc::ServerContext* /*context*/, const ::v1::agent::PostDataMultiRequest* /*request*/, ::v1::agent::PostDataMultiResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetTeleopControlDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetTeleopControlDataStream() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetTeleopControlDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeleopControlDataStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTeleopControlDataStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetTeleopControlDataStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetTeleopHeartbeatStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetTeleopHeartbeatStream() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetTeleopHeartbeatStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeleopHeartbeatStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTeleopHeartbeatStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetTeleopHeartbeatStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetTelemetryListenerStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetTelemetryListenerStream() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_GetTelemetryListenerStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTelemetryListenerStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTelemetryListenerStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetTelemetryListenerStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCustomDataChannelMessageStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCustomDataChannelMessageStream() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetCustomDataChannelMessageStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomDataChannelMessageStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetCustomDataChannelMessageStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetCustomDataChannelMessageStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateEvent() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_CreateEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEvent(::grpc::ServerContext* /*context*/, const ::v1::agent::CreateEventRequest* /*request*/, ::v1::agent::CreateEventResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateInterventionRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateInterventionRequest() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_CreateInterventionRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInterventionRequest(::grpc::ServerContext* /*context*/, const ::v1::model::InterventionRequest* /*request*/, ::v1::model::InterventionRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetInterventionRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetInterventionRequest() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_GetInterventionRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInterventionRequest(::grpc::ServerContext* /*context*/, const ::v1::agent::GetInterventionRequestRequest* /*request*/, ::v1::model::InterventionRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetInterventionResponse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetInterventionResponse() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_GetInterventionResponse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInterventionResponse(::grpc::ServerContext* /*context*/, const ::v1::agent::GetInterventionResponseRequest* /*request*/, ::v1::model::InterventionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetStreamsConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetStreamsConfiguration() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_GetStreamsConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStreamsConfiguration(::grpc::ServerContext* /*context*/, const ::v1::agent::GetStreamsConfigurationRequest* /*request*/, ::v1::agent::GetStreamsConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetApplicationConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetApplicationConfiguration() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_GetApplicationConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetApplicationConfiguration(::grpc::ServerContext* /*context*/, const ::v1::agent::GetApplicationConfigurationRequest* /*request*/, ::v1::agent::GetApplicationConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetConfigBlobData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetConfigBlobData() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_GetConfigBlobData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfigBlobData(::grpc::ServerContext* /*context*/, const ::v1::agent::GetConfigBlobDataRequest* /*request*/, ::v1::agent::GetConfigBlobDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAgentConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAgentConfiguration() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_GetAgentConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAgentConfiguration(::grpc::ServerContext* /*context*/, const ::v1::agent::GetAgentConfigurationRequest* /*request*/, ::v1::agent::GetAgentConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBufferMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBufferMetadata() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_GetBufferMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBufferMetadata(::grpc::ServerContext* /*context*/, const ::v1::agent::GetBufferMetadataRequest* /*request*/, ::v1::agent::GetBufferMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Health : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Health() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_Health() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Health(::grpc::ServerContext* /*context*/, const ::v1::agent::HealthRequest* /*request*/, ::v1::agent::HealthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCommandRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCommandRequest() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_GetCommandRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCommandRequest(::grpc::ServerContext* /*context*/, const ::v1::agent::GetCommandRequestRequest* /*request*/, ::v1::agent::GetCommandRequestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCommandRequestStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCommandRequestStream() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_GetCommandRequestStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCommandRequestStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetCommandRequestStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetCommandRequestStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendCommandResponse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendCommandResponse() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_SendCommandResponse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendCommandResponse(::grpc::ServerContext* /*context*/, const ::v1::agent::SendCommandResponseRequest* /*request*/, ::v1::agent::SendCommandResponseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PostTransformFrame : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PostTransformFrame() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_PostTransformFrame() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostTransformFrame(::grpc::ServerContext* /*context*/, const ::v1::model::TransformFrame* /*request*/, ::v1::agent::PostTransformFrameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetBaseFrameID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetBaseFrameID() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_SetBaseFrameID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBaseFrameID(::grpc::ServerContext* /*context*/, const ::v1::agent::SetBaseFrameIDRequest* /*request*/, ::v1::agent::SetBaseFrameIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ClearTransformTree : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ClearTransformTree() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_ClearTransformTree() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearTransformTree(::grpc::ServerContext* /*context*/, const ::v1::agent::ClearTransformTreeRequest* /*request*/, ::v1::agent::ClearTransformTreeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetTeleopInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetTeleopInfo() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_GetTeleopInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeleopInfo(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTeleopInfoRequest* /*request*/, ::v1::agent::GetTeleopInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PostLanRtcOffer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PostLanRtcOffer() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_PostLanRtcOffer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostLanRtcOffer(::grpc::ServerContext* /*context*/, const ::v1::agent::PostLanRtcOfferRequest* /*request*/, ::v1::agent::PostLanRtcOfferResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendOnCustomDataChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendOnCustomDataChannel() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_SendOnCustomDataChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendOnCustomDataChannel(::grpc::ServerContext* /*context*/, const ::v1::agent::SendOnCustomDataChannelRequest* /*request*/, ::v1::agent::SendOnCustomDataChannelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PostGenericAPIRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PostGenericAPIRequest() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_PostGenericAPIRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostGenericAPIRequest(::grpc::ServerContext* /*context*/, const ::v1::model::GenericAPIDatapoint* /*request*/, ::v1::agent::PostGenericAPIRequestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PostGenericAPIUnbufferedRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PostGenericAPIUnbufferedRequest() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_PostGenericAPIUnbufferedRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostGenericAPIUnbufferedRequest(::grpc::ServerContext* /*context*/, const ::v1::model::GenericAPIDatapoint* /*request*/, ::v1::agent::PostGenericAPIUnbufferedRequestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_StreamData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StreamData() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_StreamData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamData(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::v1::model::Datapoint>* /*reader*/, ::v1::agent::StreamDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStreamData(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(0, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PostData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PostData() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_PostData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostData(::grpc::ServerContext* /*context*/, const ::v1::model::Datapoint* /*request*/, ::v1::agent::PostDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPostData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PostDataMulti : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PostDataMulti() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_PostDataMulti() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostDataMulti(::grpc::ServerContext* /*context*/, const ::v1::agent::PostDataMultiRequest* /*request*/, ::v1::agent::PostDataMultiResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPostDataMulti(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetTeleopControlDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetTeleopControlDataStream() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetTeleopControlDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeleopControlDataStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTeleopControlDataStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetTeleopControlDataStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTeleopControlDataStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(3, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetTeleopHeartbeatStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetTeleopHeartbeatStream() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetTeleopHeartbeatStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeleopHeartbeatStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTeleopHeartbeatStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetTeleopHeartbeatStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTeleopHeartbeatStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(4, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetTelemetryListenerStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetTelemetryListenerStream() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_GetTelemetryListenerStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTelemetryListenerStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTelemetryListenerStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetTelemetryListenerStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTelemetryListenerStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(5, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCustomDataChannelMessageStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCustomDataChannelMessageStream() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetCustomDataChannelMessageStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomDataChannelMessageStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetCustomDataChannelMessageStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetCustomDataChannelMessageStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCustomDataChannelMessageStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(6, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateEvent() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_CreateEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEvent(::grpc::ServerContext* /*context*/, const ::v1::agent::CreateEventRequest* /*request*/, ::v1::agent::CreateEventResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateEvent(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateInterventionRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateInterventionRequest() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_CreateInterventionRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInterventionRequest(::grpc::ServerContext* /*context*/, const ::v1::model::InterventionRequest* /*request*/, ::v1::model::InterventionRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateInterventionRequest(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetInterventionRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetInterventionRequest() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_GetInterventionRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInterventionRequest(::grpc::ServerContext* /*context*/, const ::v1::agent::GetInterventionRequestRequest* /*request*/, ::v1::model::InterventionRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInterventionRequest(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetInterventionResponse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetInterventionResponse() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_GetInterventionResponse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInterventionResponse(::grpc::ServerContext* /*context*/, const ::v1::agent::GetInterventionResponseRequest* /*request*/, ::v1::model::InterventionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetInterventionResponse(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetStreamsConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetStreamsConfiguration() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_GetStreamsConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStreamsConfiguration(::grpc::ServerContext* /*context*/, const ::v1::agent::GetStreamsConfigurationRequest* /*request*/, ::v1::agent::GetStreamsConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetStreamsConfiguration(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetApplicationConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetApplicationConfiguration() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_GetApplicationConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetApplicationConfiguration(::grpc::ServerContext* /*context*/, const ::v1::agent::GetApplicationConfigurationRequest* /*request*/, ::v1::agent::GetApplicationConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetApplicationConfiguration(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetConfigBlobData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetConfigBlobData() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_GetConfigBlobData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfigBlobData(::grpc::ServerContext* /*context*/, const ::v1::agent::GetConfigBlobDataRequest* /*request*/, ::v1::agent::GetConfigBlobDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfigBlobData(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAgentConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAgentConfiguration() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_GetAgentConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAgentConfiguration(::grpc::ServerContext* /*context*/, const ::v1::agent::GetAgentConfigurationRequest* /*request*/, ::v1::agent::GetAgentConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAgentConfiguration(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBufferMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBufferMetadata() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_GetBufferMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBufferMetadata(::grpc::ServerContext* /*context*/, const ::v1::agent::GetBufferMetadataRequest* /*request*/, ::v1::agent::GetBufferMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBufferMetadata(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Health : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Health() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_Health() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Health(::grpc::ServerContext* /*context*/, const ::v1::agent::HealthRequest* /*request*/, ::v1::agent::HealthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHealth(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCommandRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCommandRequest() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_GetCommandRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCommandRequest(::grpc::ServerContext* /*context*/, const ::v1::agent::GetCommandRequestRequest* /*request*/, ::v1::agent::GetCommandRequestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCommandRequest(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCommandRequestStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCommandRequestStream() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_GetCommandRequestStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCommandRequestStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetCommandRequestStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetCommandRequestStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCommandRequestStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(18, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendCommandResponse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendCommandResponse() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_SendCommandResponse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendCommandResponse(::grpc::ServerContext* /*context*/, const ::v1::agent::SendCommandResponseRequest* /*request*/, ::v1::agent::SendCommandResponseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendCommandResponse(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PostTransformFrame : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PostTransformFrame() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_PostTransformFrame() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostTransformFrame(::grpc::ServerContext* /*context*/, const ::v1::model::TransformFrame* /*request*/, ::v1::agent::PostTransformFrameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPostTransformFrame(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetBaseFrameID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetBaseFrameID() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_SetBaseFrameID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBaseFrameID(::grpc::ServerContext* /*context*/, const ::v1::agent::SetBaseFrameIDRequest* /*request*/, ::v1::agent::SetBaseFrameIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetBaseFrameID(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ClearTransformTree : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ClearTransformTree() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_ClearTransformTree() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearTransformTree(::grpc::ServerContext* /*context*/, const ::v1::agent::ClearTransformTreeRequest* /*request*/, ::v1::agent::ClearTransformTreeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestClearTransformTree(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetTeleopInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetTeleopInfo() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_GetTeleopInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeleopInfo(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTeleopInfoRequest* /*request*/, ::v1::agent::GetTeleopInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTeleopInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PostLanRtcOffer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PostLanRtcOffer() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_PostLanRtcOffer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostLanRtcOffer(::grpc::ServerContext* /*context*/, const ::v1::agent::PostLanRtcOfferRequest* /*request*/, ::v1::agent::PostLanRtcOfferResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPostLanRtcOffer(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendOnCustomDataChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendOnCustomDataChannel() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_SendOnCustomDataChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendOnCustomDataChannel(::grpc::ServerContext* /*context*/, const ::v1::agent::SendOnCustomDataChannelRequest* /*request*/, ::v1::agent::SendOnCustomDataChannelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendOnCustomDataChannel(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PostGenericAPIRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PostGenericAPIRequest() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_PostGenericAPIRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostGenericAPIRequest(::grpc::ServerContext* /*context*/, const ::v1::model::GenericAPIDatapoint* /*request*/, ::v1::agent::PostGenericAPIRequestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPostGenericAPIRequest(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PostGenericAPIUnbufferedRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PostGenericAPIUnbufferedRequest() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_PostGenericAPIUnbufferedRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostGenericAPIUnbufferedRequest(::grpc::ServerContext* /*context*/, const ::v1::model::GenericAPIDatapoint* /*request*/, ::v1::agent::PostGenericAPIUnbufferedRequestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPostGenericAPIUnbufferedRequest(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StreamData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StreamData() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackClientStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, ::grpc::ByteBuffer* response) { return this->StreamData(context, response); }));
    }
    ~WithRawCallbackMethod_StreamData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamData(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::v1::model::Datapoint>* /*reader*/, ::v1::agent::StreamDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::grpc::ByteBuffer>* StreamData(
      ::grpc::CallbackServerContext* /*context*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PostData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PostData() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PostData(context, request, response); }));
    }
    ~WithRawCallbackMethod_PostData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostData(::grpc::ServerContext* /*context*/, const ::v1::model::Datapoint* /*request*/, ::v1::agent::PostDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PostData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PostDataMulti : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PostDataMulti() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PostDataMulti(context, request, response); }));
    }
    ~WithRawCallbackMethod_PostDataMulti() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostDataMulti(::grpc::ServerContext* /*context*/, const ::v1::agent::PostDataMultiRequest* /*request*/, ::v1::agent::PostDataMultiResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PostDataMulti(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetTeleopControlDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetTeleopControlDataStream() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetTeleopControlDataStream(context, request); }));
    }
    ~WithRawCallbackMethod_GetTeleopControlDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeleopControlDataStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTeleopControlDataStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetTeleopControlDataStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetTeleopControlDataStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetTeleopHeartbeatStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetTeleopHeartbeatStream() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetTeleopHeartbeatStream(context, request); }));
    }
    ~WithRawCallbackMethod_GetTeleopHeartbeatStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeleopHeartbeatStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTeleopHeartbeatStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetTeleopHeartbeatStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetTeleopHeartbeatStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetTelemetryListenerStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetTelemetryListenerStream() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetTelemetryListenerStream(context, request); }));
    }
    ~WithRawCallbackMethod_GetTelemetryListenerStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTelemetryListenerStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTelemetryListenerStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetTelemetryListenerStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetTelemetryListenerStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetCustomDataChannelMessageStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetCustomDataChannelMessageStream() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetCustomDataChannelMessageStream(context, request); }));
    }
    ~WithRawCallbackMethod_GetCustomDataChannelMessageStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCustomDataChannelMessageStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetCustomDataChannelMessageStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetCustomDataChannelMessageStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetCustomDataChannelMessageStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateEvent() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateEvent(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateEvent(::grpc::ServerContext* /*context*/, const ::v1::agent::CreateEventRequest* /*request*/, ::v1::agent::CreateEventResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateEvent(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateInterventionRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateInterventionRequest() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateInterventionRequest(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateInterventionRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateInterventionRequest(::grpc::ServerContext* /*context*/, const ::v1::model::InterventionRequest* /*request*/, ::v1::model::InterventionRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateInterventionRequest(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetInterventionRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetInterventionRequest() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetInterventionRequest(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetInterventionRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInterventionRequest(::grpc::ServerContext* /*context*/, const ::v1::agent::GetInterventionRequestRequest* /*request*/, ::v1::model::InterventionRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetInterventionRequest(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetInterventionResponse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetInterventionResponse() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetInterventionResponse(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetInterventionResponse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetInterventionResponse(::grpc::ServerContext* /*context*/, const ::v1::agent::GetInterventionResponseRequest* /*request*/, ::v1::model::InterventionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetInterventionResponse(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetStreamsConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetStreamsConfiguration() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetStreamsConfiguration(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetStreamsConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStreamsConfiguration(::grpc::ServerContext* /*context*/, const ::v1::agent::GetStreamsConfigurationRequest* /*request*/, ::v1::agent::GetStreamsConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetStreamsConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetApplicationConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetApplicationConfiguration() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetApplicationConfiguration(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetApplicationConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetApplicationConfiguration(::grpc::ServerContext* /*context*/, const ::v1::agent::GetApplicationConfigurationRequest* /*request*/, ::v1::agent::GetApplicationConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetApplicationConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetConfigBlobData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetConfigBlobData() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetConfigBlobData(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetConfigBlobData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfigBlobData(::grpc::ServerContext* /*context*/, const ::v1::agent::GetConfigBlobDataRequest* /*request*/, ::v1::agent::GetConfigBlobDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetConfigBlobData(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetAgentConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetAgentConfiguration() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAgentConfiguration(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetAgentConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAgentConfiguration(::grpc::ServerContext* /*context*/, const ::v1::agent::GetAgentConfigurationRequest* /*request*/, ::v1::agent::GetAgentConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetAgentConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetBufferMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetBufferMetadata() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBufferMetadata(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetBufferMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBufferMetadata(::grpc::ServerContext* /*context*/, const ::v1::agent::GetBufferMetadataRequest* /*request*/, ::v1::agent::GetBufferMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBufferMetadata(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Health : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Health() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Health(context, request, response); }));
    }
    ~WithRawCallbackMethod_Health() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Health(::grpc::ServerContext* /*context*/, const ::v1::agent::HealthRequest* /*request*/, ::v1::agent::HealthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Health(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetCommandRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetCommandRequest() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetCommandRequest(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetCommandRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCommandRequest(::grpc::ServerContext* /*context*/, const ::v1::agent::GetCommandRequestRequest* /*request*/, ::v1::agent::GetCommandRequestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCommandRequest(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetCommandRequestStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetCommandRequestStream() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->GetCommandRequestStream(context, request); }));
    }
    ~WithRawCallbackMethod_GetCommandRequestStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCommandRequestStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetCommandRequestStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetCommandRequestStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* GetCommandRequestStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendCommandResponse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendCommandResponse() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendCommandResponse(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendCommandResponse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendCommandResponse(::grpc::ServerContext* /*context*/, const ::v1::agent::SendCommandResponseRequest* /*request*/, ::v1::agent::SendCommandResponseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendCommandResponse(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PostTransformFrame : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PostTransformFrame() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PostTransformFrame(context, request, response); }));
    }
    ~WithRawCallbackMethod_PostTransformFrame() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostTransformFrame(::grpc::ServerContext* /*context*/, const ::v1::model::TransformFrame* /*request*/, ::v1::agent::PostTransformFrameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PostTransformFrame(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetBaseFrameID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetBaseFrameID() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetBaseFrameID(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetBaseFrameID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetBaseFrameID(::grpc::ServerContext* /*context*/, const ::v1::agent::SetBaseFrameIDRequest* /*request*/, ::v1::agent::SetBaseFrameIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetBaseFrameID(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ClearTransformTree : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ClearTransformTree() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ClearTransformTree(context, request, response); }));
    }
    ~WithRawCallbackMethod_ClearTransformTree() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ClearTransformTree(::grpc::ServerContext* /*context*/, const ::v1::agent::ClearTransformTreeRequest* /*request*/, ::v1::agent::ClearTransformTreeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ClearTransformTree(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetTeleopInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetTeleopInfo() {
      ::grpc::Service::MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetTeleopInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetTeleopInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTeleopInfo(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTeleopInfoRequest* /*request*/, ::v1::agent::GetTeleopInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTeleopInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PostLanRtcOffer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PostLanRtcOffer() {
      ::grpc::Service::MarkMethodRawCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PostLanRtcOffer(context, request, response); }));
    }
    ~WithRawCallbackMethod_PostLanRtcOffer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostLanRtcOffer(::grpc::ServerContext* /*context*/, const ::v1::agent::PostLanRtcOfferRequest* /*request*/, ::v1::agent::PostLanRtcOfferResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PostLanRtcOffer(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendOnCustomDataChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendOnCustomDataChannel() {
      ::grpc::Service::MarkMethodRawCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendOnCustomDataChannel(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendOnCustomDataChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendOnCustomDataChannel(::grpc::ServerContext* /*context*/, const ::v1::agent::SendOnCustomDataChannelRequest* /*request*/, ::v1::agent::SendOnCustomDataChannelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendOnCustomDataChannel(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PostGenericAPIRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PostGenericAPIRequest() {
      ::grpc::Service::MarkMethodRawCallback(26,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PostGenericAPIRequest(context, request, response); }));
    }
    ~WithRawCallbackMethod_PostGenericAPIRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostGenericAPIRequest(::grpc::ServerContext* /*context*/, const ::v1::model::GenericAPIDatapoint* /*request*/, ::v1::agent::PostGenericAPIRequestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PostGenericAPIRequest(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PostGenericAPIUnbufferedRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PostGenericAPIUnbufferedRequest() {
      ::grpc::Service::MarkMethodRawCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PostGenericAPIUnbufferedRequest(context, request, response); }));
    }
    ~WithRawCallbackMethod_PostGenericAPIUnbufferedRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PostGenericAPIUnbufferedRequest(::grpc::ServerContext* /*context*/, const ::v1::model::GenericAPIDatapoint* /*request*/, ::v1::agent::PostGenericAPIUnbufferedRequestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PostGenericAPIUnbufferedRequest(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PostData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PostData() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::model::Datapoint, ::v1::agent::PostDataResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::model::Datapoint, ::v1::agent::PostDataResponse>* streamer) {
                       return this->StreamedPostData(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PostData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PostData(::grpc::ServerContext* /*context*/, const ::v1::model::Datapoint* /*request*/, ::v1::agent::PostDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPostData(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::model::Datapoint,::v1::agent::PostDataResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PostDataMulti : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PostDataMulti() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::agent::PostDataMultiRequest, ::v1::agent::PostDataMultiResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::agent::PostDataMultiRequest, ::v1::agent::PostDataMultiResponse>* streamer) {
                       return this->StreamedPostDataMulti(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PostDataMulti() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PostDataMulti(::grpc::ServerContext* /*context*/, const ::v1::agent::PostDataMultiRequest* /*request*/, ::v1::agent::PostDataMultiResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPostDataMulti(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::agent::PostDataMultiRequest,::v1::agent::PostDataMultiResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateEvent : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateEvent() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::agent::CreateEventRequest, ::v1::agent::CreateEventResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::agent::CreateEventRequest, ::v1::agent::CreateEventResponse>* streamer) {
                       return this->StreamedCreateEvent(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateEvent() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateEvent(::grpc::ServerContext* /*context*/, const ::v1::agent::CreateEventRequest* /*request*/, ::v1::agent::CreateEventResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateEvent(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::agent::CreateEventRequest,::v1::agent::CreateEventResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateInterventionRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateInterventionRequest() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::model::InterventionRequest, ::v1::model::InterventionRequest>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::model::InterventionRequest, ::v1::model::InterventionRequest>* streamer) {
                       return this->StreamedCreateInterventionRequest(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateInterventionRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateInterventionRequest(::grpc::ServerContext* /*context*/, const ::v1::model::InterventionRequest* /*request*/, ::v1::model::InterventionRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateInterventionRequest(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::model::InterventionRequest,::v1::model::InterventionRequest>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetInterventionRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetInterventionRequest() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::agent::GetInterventionRequestRequest, ::v1::model::InterventionRequest>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::agent::GetInterventionRequestRequest, ::v1::model::InterventionRequest>* streamer) {
                       return this->StreamedGetInterventionRequest(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetInterventionRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetInterventionRequest(::grpc::ServerContext* /*context*/, const ::v1::agent::GetInterventionRequestRequest* /*request*/, ::v1::model::InterventionRequest* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetInterventionRequest(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::agent::GetInterventionRequestRequest,::v1::model::InterventionRequest>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetInterventionResponse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetInterventionResponse() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::agent::GetInterventionResponseRequest, ::v1::model::InterventionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::agent::GetInterventionResponseRequest, ::v1::model::InterventionResponse>* streamer) {
                       return this->StreamedGetInterventionResponse(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetInterventionResponse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetInterventionResponse(::grpc::ServerContext* /*context*/, const ::v1::agent::GetInterventionResponseRequest* /*request*/, ::v1::model::InterventionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetInterventionResponse(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::agent::GetInterventionResponseRequest,::v1::model::InterventionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetStreamsConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetStreamsConfiguration() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::agent::GetStreamsConfigurationRequest, ::v1::agent::GetStreamsConfigurationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::agent::GetStreamsConfigurationRequest, ::v1::agent::GetStreamsConfigurationResponse>* streamer) {
                       return this->StreamedGetStreamsConfiguration(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetStreamsConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetStreamsConfiguration(::grpc::ServerContext* /*context*/, const ::v1::agent::GetStreamsConfigurationRequest* /*request*/, ::v1::agent::GetStreamsConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetStreamsConfiguration(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::agent::GetStreamsConfigurationRequest,::v1::agent::GetStreamsConfigurationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetApplicationConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetApplicationConfiguration() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::agent::GetApplicationConfigurationRequest, ::v1::agent::GetApplicationConfigurationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::agent::GetApplicationConfigurationRequest, ::v1::agent::GetApplicationConfigurationResponse>* streamer) {
                       return this->StreamedGetApplicationConfiguration(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetApplicationConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetApplicationConfiguration(::grpc::ServerContext* /*context*/, const ::v1::agent::GetApplicationConfigurationRequest* /*request*/, ::v1::agent::GetApplicationConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetApplicationConfiguration(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::agent::GetApplicationConfigurationRequest,::v1::agent::GetApplicationConfigurationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetConfigBlobData : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetConfigBlobData() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::agent::GetConfigBlobDataRequest, ::v1::agent::GetConfigBlobDataResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::agent::GetConfigBlobDataRequest, ::v1::agent::GetConfigBlobDataResponse>* streamer) {
                       return this->StreamedGetConfigBlobData(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetConfigBlobData() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetConfigBlobData(::grpc::ServerContext* /*context*/, const ::v1::agent::GetConfigBlobDataRequest* /*request*/, ::v1::agent::GetConfigBlobDataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetConfigBlobData(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::agent::GetConfigBlobDataRequest,::v1::agent::GetConfigBlobDataResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAgentConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAgentConfiguration() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::agent::GetAgentConfigurationRequest, ::v1::agent::GetAgentConfigurationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::agent::GetAgentConfigurationRequest, ::v1::agent::GetAgentConfigurationResponse>* streamer) {
                       return this->StreamedGetAgentConfiguration(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAgentConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAgentConfiguration(::grpc::ServerContext* /*context*/, const ::v1::agent::GetAgentConfigurationRequest* /*request*/, ::v1::agent::GetAgentConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAgentConfiguration(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::agent::GetAgentConfigurationRequest,::v1::agent::GetAgentConfigurationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBufferMetadata : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBufferMetadata() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::agent::GetBufferMetadataRequest, ::v1::agent::GetBufferMetadataResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::agent::GetBufferMetadataRequest, ::v1::agent::GetBufferMetadataResponse>* streamer) {
                       return this->StreamedGetBufferMetadata(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBufferMetadata() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBufferMetadata(::grpc::ServerContext* /*context*/, const ::v1::agent::GetBufferMetadataRequest* /*request*/, ::v1::agent::GetBufferMetadataResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBufferMetadata(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::agent::GetBufferMetadataRequest,::v1::agent::GetBufferMetadataResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Health : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Health() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::agent::HealthRequest, ::v1::agent::HealthResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::agent::HealthRequest, ::v1::agent::HealthResponse>* streamer) {
                       return this->StreamedHealth(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Health() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Health(::grpc::ServerContext* /*context*/, const ::v1::agent::HealthRequest* /*request*/, ::v1::agent::HealthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedHealth(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::agent::HealthRequest,::v1::agent::HealthResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCommandRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetCommandRequest() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::agent::GetCommandRequestRequest, ::v1::agent::GetCommandRequestResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::agent::GetCommandRequestRequest, ::v1::agent::GetCommandRequestResponse>* streamer) {
                       return this->StreamedGetCommandRequest(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetCommandRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCommandRequest(::grpc::ServerContext* /*context*/, const ::v1::agent::GetCommandRequestRequest* /*request*/, ::v1::agent::GetCommandRequestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCommandRequest(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::agent::GetCommandRequestRequest,::v1::agent::GetCommandRequestResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendCommandResponse : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendCommandResponse() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::agent::SendCommandResponseRequest, ::v1::agent::SendCommandResponseResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::agent::SendCommandResponseRequest, ::v1::agent::SendCommandResponseResponse>* streamer) {
                       return this->StreamedSendCommandResponse(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendCommandResponse() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendCommandResponse(::grpc::ServerContext* /*context*/, const ::v1::agent::SendCommandResponseRequest* /*request*/, ::v1::agent::SendCommandResponseResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendCommandResponse(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::agent::SendCommandResponseRequest,::v1::agent::SendCommandResponseResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PostTransformFrame : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PostTransformFrame() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::model::TransformFrame, ::v1::agent::PostTransformFrameResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::model::TransformFrame, ::v1::agent::PostTransformFrameResponse>* streamer) {
                       return this->StreamedPostTransformFrame(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PostTransformFrame() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PostTransformFrame(::grpc::ServerContext* /*context*/, const ::v1::model::TransformFrame* /*request*/, ::v1::agent::PostTransformFrameResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPostTransformFrame(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::model::TransformFrame,::v1::agent::PostTransformFrameResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetBaseFrameID : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetBaseFrameID() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::agent::SetBaseFrameIDRequest, ::v1::agent::SetBaseFrameIDResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::agent::SetBaseFrameIDRequest, ::v1::agent::SetBaseFrameIDResponse>* streamer) {
                       return this->StreamedSetBaseFrameID(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetBaseFrameID() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetBaseFrameID(::grpc::ServerContext* /*context*/, const ::v1::agent::SetBaseFrameIDRequest* /*request*/, ::v1::agent::SetBaseFrameIDResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetBaseFrameID(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::agent::SetBaseFrameIDRequest,::v1::agent::SetBaseFrameIDResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ClearTransformTree : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ClearTransformTree() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::agent::ClearTransformTreeRequest, ::v1::agent::ClearTransformTreeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::agent::ClearTransformTreeRequest, ::v1::agent::ClearTransformTreeResponse>* streamer) {
                       return this->StreamedClearTransformTree(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ClearTransformTree() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ClearTransformTree(::grpc::ServerContext* /*context*/, const ::v1::agent::ClearTransformTreeRequest* /*request*/, ::v1::agent::ClearTransformTreeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedClearTransformTree(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::agent::ClearTransformTreeRequest,::v1::agent::ClearTransformTreeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetTeleopInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetTeleopInfo() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::agent::GetTeleopInfoRequest, ::v1::agent::GetTeleopInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::agent::GetTeleopInfoRequest, ::v1::agent::GetTeleopInfoResponse>* streamer) {
                       return this->StreamedGetTeleopInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetTeleopInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTeleopInfo(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTeleopInfoRequest* /*request*/, ::v1::agent::GetTeleopInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetTeleopInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::agent::GetTeleopInfoRequest,::v1::agent::GetTeleopInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PostLanRtcOffer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PostLanRtcOffer() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::agent::PostLanRtcOfferRequest, ::v1::agent::PostLanRtcOfferResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::agent::PostLanRtcOfferRequest, ::v1::agent::PostLanRtcOfferResponse>* streamer) {
                       return this->StreamedPostLanRtcOffer(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PostLanRtcOffer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PostLanRtcOffer(::grpc::ServerContext* /*context*/, const ::v1::agent::PostLanRtcOfferRequest* /*request*/, ::v1::agent::PostLanRtcOfferResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPostLanRtcOffer(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::agent::PostLanRtcOfferRequest,::v1::agent::PostLanRtcOfferResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendOnCustomDataChannel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendOnCustomDataChannel() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::agent::SendOnCustomDataChannelRequest, ::v1::agent::SendOnCustomDataChannelResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::agent::SendOnCustomDataChannelRequest, ::v1::agent::SendOnCustomDataChannelResponse>* streamer) {
                       return this->StreamedSendOnCustomDataChannel(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendOnCustomDataChannel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendOnCustomDataChannel(::grpc::ServerContext* /*context*/, const ::v1::agent::SendOnCustomDataChannelRequest* /*request*/, ::v1::agent::SendOnCustomDataChannelResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendOnCustomDataChannel(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::agent::SendOnCustomDataChannelRequest,::v1::agent::SendOnCustomDataChannelResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PostGenericAPIRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PostGenericAPIRequest() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::model::GenericAPIDatapoint, ::v1::agent::PostGenericAPIRequestResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::model::GenericAPIDatapoint, ::v1::agent::PostGenericAPIRequestResponse>* streamer) {
                       return this->StreamedPostGenericAPIRequest(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PostGenericAPIRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PostGenericAPIRequest(::grpc::ServerContext* /*context*/, const ::v1::model::GenericAPIDatapoint* /*request*/, ::v1::agent::PostGenericAPIRequestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPostGenericAPIRequest(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::model::GenericAPIDatapoint,::v1::agent::PostGenericAPIRequestResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PostGenericAPIUnbufferedRequest : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PostGenericAPIUnbufferedRequest() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler<
          ::v1::model::GenericAPIDatapoint, ::v1::agent::PostGenericAPIUnbufferedRequestResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::v1::model::GenericAPIDatapoint, ::v1::agent::PostGenericAPIUnbufferedRequestResponse>* streamer) {
                       return this->StreamedPostGenericAPIUnbufferedRequest(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PostGenericAPIUnbufferedRequest() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PostGenericAPIUnbufferedRequest(::grpc::ServerContext* /*context*/, const ::v1::model::GenericAPIDatapoint* /*request*/, ::v1::agent::PostGenericAPIUnbufferedRequestResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPostGenericAPIUnbufferedRequest(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::v1::model::GenericAPIDatapoint,::v1::agent::PostGenericAPIUnbufferedRequestResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_PostData<WithStreamedUnaryMethod_PostDataMulti<WithStreamedUnaryMethod_CreateEvent<WithStreamedUnaryMethod_CreateInterventionRequest<WithStreamedUnaryMethod_GetInterventionRequest<WithStreamedUnaryMethod_GetInterventionResponse<WithStreamedUnaryMethod_GetStreamsConfiguration<WithStreamedUnaryMethod_GetApplicationConfiguration<WithStreamedUnaryMethod_GetConfigBlobData<WithStreamedUnaryMethod_GetAgentConfiguration<WithStreamedUnaryMethod_GetBufferMetadata<WithStreamedUnaryMethod_Health<WithStreamedUnaryMethod_GetCommandRequest<WithStreamedUnaryMethod_SendCommandResponse<WithStreamedUnaryMethod_PostTransformFrame<WithStreamedUnaryMethod_SetBaseFrameID<WithStreamedUnaryMethod_ClearTransformTree<WithStreamedUnaryMethod_GetTeleopInfo<WithStreamedUnaryMethod_PostLanRtcOffer<WithStreamedUnaryMethod_SendOnCustomDataChannel<WithStreamedUnaryMethod_PostGenericAPIRequest<WithStreamedUnaryMethod_PostGenericAPIUnbufferedRequest<Service > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_GetTeleopControlDataStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetTeleopControlDataStream() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::v1::agent::GetTeleopControlDataStreamRequest, ::v1::agent::GetTeleopControlDataStreamResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::v1::agent::GetTeleopControlDataStreamRequest, ::v1::agent::GetTeleopControlDataStreamResponse>* streamer) {
                       return this->StreamedGetTeleopControlDataStream(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetTeleopControlDataStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTeleopControlDataStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTeleopControlDataStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetTeleopControlDataStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetTeleopControlDataStream(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::v1::agent::GetTeleopControlDataStreamRequest,::v1::agent::GetTeleopControlDataStreamResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetTeleopHeartbeatStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetTeleopHeartbeatStream() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::v1::agent::GetTeleopHeartbeatStreamRequest, ::v1::agent::GetTeleopHeartbeatStreamResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::v1::agent::GetTeleopHeartbeatStreamRequest, ::v1::agent::GetTeleopHeartbeatStreamResponse>* streamer) {
                       return this->StreamedGetTeleopHeartbeatStream(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetTeleopHeartbeatStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTeleopHeartbeatStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTeleopHeartbeatStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetTeleopHeartbeatStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetTeleopHeartbeatStream(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::v1::agent::GetTeleopHeartbeatStreamRequest,::v1::agent::GetTeleopHeartbeatStreamResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetTelemetryListenerStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetTelemetryListenerStream() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::v1::agent::GetTelemetryListenerStreamRequest, ::v1::agent::GetTelemetryListenerStreamResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::v1::agent::GetTelemetryListenerStreamRequest, ::v1::agent::GetTelemetryListenerStreamResponse>* streamer) {
                       return this->StreamedGetTelemetryListenerStream(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetTelemetryListenerStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTelemetryListenerStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetTelemetryListenerStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetTelemetryListenerStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetTelemetryListenerStream(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::v1::agent::GetTelemetryListenerStreamRequest,::v1::agent::GetTelemetryListenerStreamResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetCustomDataChannelMessageStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetCustomDataChannelMessageStream() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::v1::agent::GetCustomDataChannelMessageStreamRequest, ::v1::agent::GetCustomDataChannelMessageStreamResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::v1::agent::GetCustomDataChannelMessageStreamRequest, ::v1::agent::GetCustomDataChannelMessageStreamResponse>* streamer) {
                       return this->StreamedGetCustomDataChannelMessageStream(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetCustomDataChannelMessageStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCustomDataChannelMessageStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetCustomDataChannelMessageStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetCustomDataChannelMessageStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetCustomDataChannelMessageStream(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::v1::agent::GetCustomDataChannelMessageStreamRequest,::v1::agent::GetCustomDataChannelMessageStreamResponse>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_GetCommandRequestStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_GetCommandRequestStream() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::v1::agent::GetCommandRequestStreamRequest, ::v1::agent::GetCommandRequestStreamResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::v1::agent::GetCommandRequestStreamRequest, ::v1::agent::GetCommandRequestStreamResponse>* streamer) {
                       return this->StreamedGetCommandRequestStream(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_GetCommandRequestStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCommandRequestStream(::grpc::ServerContext* /*context*/, const ::v1::agent::GetCommandRequestStreamRequest* /*request*/, ::grpc::ServerWriter< ::v1::agent::GetCommandRequestStreamResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedGetCommandRequestStream(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::v1::agent::GetCommandRequestStreamRequest,::v1::agent::GetCommandRequestStreamResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_GetTeleopControlDataStream<WithSplitStreamingMethod_GetTeleopHeartbeatStream<WithSplitStreamingMethod_GetTelemetryListenerStream<WithSplitStreamingMethod_GetCustomDataChannelMessageStream<WithSplitStreamingMethod_GetCommandRequestStream<Service > > > > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_PostData<WithStreamedUnaryMethod_PostDataMulti<WithSplitStreamingMethod_GetTeleopControlDataStream<WithSplitStreamingMethod_GetTeleopHeartbeatStream<WithSplitStreamingMethod_GetTelemetryListenerStream<WithSplitStreamingMethod_GetCustomDataChannelMessageStream<WithStreamedUnaryMethod_CreateEvent<WithStreamedUnaryMethod_CreateInterventionRequest<WithStreamedUnaryMethod_GetInterventionRequest<WithStreamedUnaryMethod_GetInterventionResponse<WithStreamedUnaryMethod_GetStreamsConfiguration<WithStreamedUnaryMethod_GetApplicationConfiguration<WithStreamedUnaryMethod_GetConfigBlobData<WithStreamedUnaryMethod_GetAgentConfiguration<WithStreamedUnaryMethod_GetBufferMetadata<WithStreamedUnaryMethod_Health<WithStreamedUnaryMethod_GetCommandRequest<WithSplitStreamingMethod_GetCommandRequestStream<WithStreamedUnaryMethod_SendCommandResponse<WithStreamedUnaryMethod_PostTransformFrame<WithStreamedUnaryMethod_SetBaseFrameID<WithStreamedUnaryMethod_ClearTransformTree<WithStreamedUnaryMethod_GetTeleopInfo<WithStreamedUnaryMethod_PostLanRtcOffer<WithStreamedUnaryMethod_SendOnCustomDataChannel<WithStreamedUnaryMethod_PostGenericAPIRequest<WithStreamedUnaryMethod_PostGenericAPIUnbufferedRequest<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace agent
}  // namespace v1


#endif  // GRPC_protos_2fagent_2fv1_2fagent_2eproto__INCLUDED
